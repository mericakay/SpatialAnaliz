!function(t,e){"function"==typeof define&&define.amd&&!0===define.amd.dust?define("dust.core",[],e):"object"==typeof exports?module.exports=e():t.dust=e()}(this,function(){function getTemplate(t,e){if(t)return"function"==typeof t&&t.template?t.template:dust.isTemplateFn(t)?t:!1!==e?dust.cache[t]:void 0}function load(t,e,n){if(!t)return e.setError(new Error("No template or template name provided to render"));var r=getTemplate(t,dust.config.cache);return r?r(e,Context.wrap(n,r.templateName)):dust.onLoad?e.map(function(e){function r(t,r){var i;if(t)return e.setError(t);if(!(i=getTemplate(r,!1)||getTemplate(o,dust.config.cache))){if(!dust.compile)return e.setError(new Error("Dust compiler not available"));i=dust.loadSource(dust.compile(r,o))}i(e,Context.wrap(n,i.templateName)).end()}var o=t;3===dust.onLoad.length?dust.onLoad(o,n.options,r):dust.onLoad(o,r)}):e.setError(new Error("Template Not Found: "+t))}function Context(t,e,n,r,o){void 0===t||t instanceof Stack||(t=new Stack(t)),this.stack=t,this.global=e,this.options=n,this.blocks=r,this.templateName=o}function getWithResolvedData(t,e,n){return function(r){return t.push(r)._get(e,n)}}function Stack(t,e,n,r){this.tail=e,this.isObject=t&&"object"==typeof t,this.head=t,this.index=n,this.of=r}function Stub(t){this.head=new Chunk(this),this.callback=t,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(t,e,n){this.root=t,this.next=e,this.data=[],this.flushable=!1,this.taps=n}function Tap(t,e){this.head=t,this.tail=e}var dust={version:"2.7.2"},ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var t,e,n={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(t=console.log,e="function"==typeof t?function(){t.apply(console,arguments)}:function(){t(Array.prototype.slice.apply(arguments).join(" "))}):e=EMPTY_FUNC,dust.log=function(t,r){r=r||INFO,n[r]>=n[dust.debugLevel]&&e("[DUST:"+r+"]",t)},dust.debugLevel="NONE","undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(t,e){t&&(e.templateName=t,!1!==dust.config.cache&&(dust.cache[t]=e))},dust.render=function(t,e,n){var r=new Stub(n).head;try{load(t,r,e).end()}catch(t){r.setError(t)}},dust.stream=function(t,e){var n=new Stream,r=n.head;return dust.nextTick(function(){try{load(t,r,e).end()}catch(t){r.setError(t)}}),n},dust.loadSource=function(source){return eval(source)},Array.isArray?dust.isArray=Array.isArray:dust.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},dust.nextTick=function(){return function(t){setTimeout(t,0)}}(),dust.isEmpty=function(t){return!(0===t||(!dust.isArray(t)||t.length)&&t)},dust.isEmptyObject=function(t){var e;if(null===t)return!1;if(void 0===t)return!1;if(t.length>0)return!1;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0},dust.isTemplateFn=function(t){return"function"==typeof t&&t.__dustBody},dust.isThenable=function(t){return t&&"object"==typeof t&&"function"==typeof t.then},dust.isStreamable=function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pipe},dust.filter=function(t,e,n,r){var o,i,s,u;if(n)for(o=0,i=n.length;o<i;o++)s=n[o],s.length&&(u=dust.filters[s],"s"===s?e=null:"function"==typeof u?t=u(t,r):dust.log("Invalid filter `"+s+"`",WARN));return e&&(t=dust.filters[e](t,r)),t},dust.filters={h:function(t){return dust.escapeHtml(t)},j:function(t){return dust.escapeJs(t)},u:encodeURI,uc:encodeURIComponent,js:function(t){return dust.escapeJSON(t)},jp:function(t){return JSON?JSON.parse(t):(dust.log("JSON is undefined; could not parse `"+t+"`",WARN),t)}},dust.makeBase=dust.context=function(t,e){return new Context(void 0,t,e)},Context.wrap=function(t,e){return t instanceof Context?t:new Context(t,{},{},null,e)},Context.prototype.get=function(t,e){return"string"==typeof t&&("."===t[0]&&(e=!0,t=t.substr(1)),t=t.split(".")),this._get(e,t)},Context.prototype._get=function(t,e){var n,r,o,i,s,u=this.stack||{},a=1;if(r=e[0],o=e.length,t&&0===o)i=u,u=u.head;else{if(t)u&&(u=u.head?u.head[r]:void 0);else{for(;u&&(!u.isObject||(i=u.head,void 0===(n=u.head[r])));)u=u.tail;u=void 0!==n?n:this.global&&this.global[r]}for(;u&&a<o;){if(dust.isThenable(u))return u.then(getWithResolvedData(this,t,e.slice(a)));i=u,u=u[e[a]],a++}}return"function"==typeof u?(s=function(){try{return u.apply(i,arguments)}catch(t){throw dust.log(t,ERROR),t}},s.__dustBody=!!u.__dustBody,s):(void 0===u&&dust.log("Cannot find reference `{"+e.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),u)},Context.prototype.getPath=function(t,e){return this._get(t,e)},Context.prototype.push=function(t,e,n){return void 0===t?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(t,this.stack,e,n))},Context.prototype.pop=function(){var t=this.current();return this.stack=this.stack&&this.stack.tail,t},Context.prototype.rebase=function(t){return new Context(t,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var t=this.rebase();return t.stack=this.stack,t},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(t){var e,n,r;if("function"==typeof t&&(t=t(new Chunk,this).data.join("")),!(e=this.blocks))return dust.log("No blocks for context `"+t+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(n=e.length;n--;)if(r=e[n][t])return r;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(t){var e,n=this.blocks;return t?(e=n?n.concat([t]):[t],new Context(this.stack,this.global,this.options,e,this.getTemplateName())):this},Context.prototype.resolve=function(t){var e;return"function"!=typeof t?t:(e=(new Chunk).render(t,this),e instanceof Chunk?e.data.join(""):e)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.callback(t.error),dust.log("Rendering failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=t.data.join(""),t=t.next,this.head=t}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.emit("error",t.error),this.emit("end"),dust.log("Streaming failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",t.data.join("")),t=t.next,this.head=t}this.emit("end")},Stream.prototype.emit=function(t,e){var n,r,o=this.events||{},i=o[t]||[];if(!i.length)return dust.log("Stream broadcasting, but no listeners for `"+t+"`",DEBUG),!1;for(i=i.slice(0),n=0,r=i.length;n<r;n++)i[n](e);return!0},Stream.prototype.on=function(t,e){var n=this.events=this.events||{},r=n[t]=n[t]||[];return"function"!=typeof e?dust.log("No callback function provided for `"+t+"` event listener",WARN):r.push(e),this},Stream.prototype.pipe=function(t){if("function"!=typeof t.write||"function"!=typeof t.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var e=!1;return"function"==typeof t.emit&&t.emit("pipe",this),"function"==typeof t.on&&t.on("error",function(){e=!0}),this.on("data",function(n){if(!e)try{t.write(n,"utf8")}catch(t){dust.log(t,ERROR)}}).on("end",function(){if(!e)try{t.end(),e=!0}catch(t){dust.log(t,ERROR)}})},Chunk.prototype.write=function(t){var e=this.taps;return e&&(t=e.go(t)),this.data.push(t),this},Chunk.prototype.end=function(t){return t&&this.write(t),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(t){var e=new Chunk(this.root,this.next,this.taps),n=new Chunk(this.root,e,this.taps);this.next=n,this.flushable=!0;try{t(n)}catch(t){dust.log(t,ERROR),n.setError(t)}return e},Chunk.prototype.tap=function(t){var e=this.taps;return this.taps=e?e.push(t):new Tap(t),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(t,e){return t(this,e)},Chunk.prototype.reference=function(t,e,n,r){return"function"==typeof t?(t=t.apply(e.current(),[this,e,null,{auto:n,filters:r}]),t instanceof Chunk?t:this.reference(t,e,n,r)):dust.isThenable(t)?this.await(t,e,null,n,r):dust.isStreamable(t)?this.stream(t,e,null,n,r):dust.isEmpty(t)?this:this.write(dust.filter(t,n,r,e))},Chunk.prototype.section=function(t,e,n,r){var o,i,s,u=n.block,a=n.else,c=this;if("function"==typeof t&&!dust.isTemplateFn(t)){try{t=t.apply(e.current(),[this,e,n,r])}catch(t){return dust.log(t,ERROR),this.setError(t)}if(t instanceof Chunk)return t}if(dust.isEmptyObject(n))return c;if(dust.isEmptyObject(r)||(e=e.push(r)),dust.isArray(t)){if(u){if((i=t.length)>0){for(s=e.stack&&e.stack.head||{},s.$len=i,o=0;o<i;o++)s.$idx=o,c=u(c,e.push(t[o],o,i));return s.$idx=void 0,s.$len=void 0,c}if(a)return a(this,e)}}else{if(dust.isThenable(t))return this.await(t,e,n);if(dust.isStreamable(t))return this.stream(t,e,n);if(!0===t){if(u)return u(this,e)}else if(t||0===t){if(u)return u(this,e.push(t))}else if(a)return a(this,e)}return dust.log("Section without corresponding key in template `"+e.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(o)return o(this,e)}else{if(r)return r(this,e);dust.log("No block for exists check in template `"+e.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(r)return r(this,e);dust.log("No block for not-exists check in template `"+e.getTemplateName()+"`",DEBUG)}else if(o)return o(this,e);return this},Chunk.prototype.block=function(t,e,n){var r=t||n.block;return r?r(this,e):this},Chunk.prototype.partial=function(t,e,n,r){var o;return void 0===r&&(r=n,n=e),dust.isEmptyObject(r)||(n=n.clone(),o=n.pop(),n=n.push(r).push(o)),dust.isTemplateFn(t)?this.capture(t,e,function(t,e){n.templateName=t,load(t,e,n).end()}):(n.templateName=t,load(t,this,n))},Chunk.prototype.helper=function(t,e,n,r,o){var i,s=this,u=r.filters;if(void 0===o&&(o="h"),!dust.helpers[t])return dust.log("Helper `"+t+"` does not exist",WARN),s;try{return(i=dust.helpers[t](s,e,n,r))instanceof Chunk?i:("string"==typeof u&&(u=u.split("|")),dust.isEmptyObject(n)?s.reference(i,e,o,u):s.section(i,e,n,r))}catch(e){return dust.log("Error in helper `"+t+"`: "+e.message,ERROR),s.setError(e)}},Chunk.prototype.await=function(t,e,n,r,o){return this.map(function(i){t.then(function(t){i=n?i.section(t,e,n):i.reference(t,e,r,o),i.end()},function(t){var r=n&&n.error;r?i.render(r,e.push(t)).end():(dust.log("Unhandled promise rejection in `"+e.getTemplateName()+"`",INFO),i.end())})})},Chunk.prototype.stream=function(t,e,n,r,o){var i=n&&n.block,s=n&&n.error;return this.map(function(u){var a=!1;t.on("data",function(t){a||(i?u=u.map(function(n){n.render(i,e.push(t)).end()}):n||(u=u.reference(t,e,r,o)))}).on("error",function(t){a||(s?u.render(s,e.push(t)):dust.log("Unhandled stream error in `"+e.getTemplateName()+"`",INFO),a||(a=!0,u.end()))}).on("end",function(){a||(a=!0,u.end())})})},Chunk.prototype.capture=function(t,e,n){return this.map(function(r){var o=new Stub(function(t,e){t?r.setError(t):n(e,r)});t(o.head,e).end()})},Chunk.prototype.setError=function(t){return this.error=t,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(t){return new Tap(t,this)},Tap.prototype.go=function(t){for(var e=this;e;)t=e.head(t),e=e.tail;return t};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(t){return"string"==typeof t||t&&"function"==typeof t.toString?("string"!=typeof t&&(t=t.toString()),HCHARS.test(t)?t.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):t):t};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(t){return"string"==typeof t?t.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):t},dust.escapeJSON=function(t){return JSON?JSON.stringify(t).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+t+"`",WARN),t)},dust}),"function"==typeof define&&define.amd&&!0===define.amd.dust&&define(["require","dust.core"],function(t,e){return e.onLoad=function(e,n){t([e],function(){n()})},e});
!function(e,t){"function"==typeof define&&define.amd&&!0===define.amd.dust?define(["dust.core"],t):"object"==typeof exports?module.exports=t(require("dustjs-linkedin")):t(e.dust)}(this,function(e){function t(t,n,r){r=r||"INFO",t=t?"{@"+t+"}: ":"",e.log(t+n,r)}function n(e){l[e]||(t(e,"Deprecation warning: "+e+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),t(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+e.replace(/\W+/g,""),"WARN"),l[e]=!0)}function r(e){return e.stack.tail&&e.stack.tail.head&&void 0!==e.stack.tail.head.__select__}function s(e){return r(e)&&e.get("__select__")}function i(e,t){var n,r=e.stack.head,s=e.rebase();e.stack&&e.stack.tail&&(s.stack=e.stack.tail);var i={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(n in t)i[n]=t[n];return s.push({__select__:i}).push(r,e.stack.index,e.stack.of)}function o(e){var t,n;if(e.isDeferredPending=!0,e.deferreds.length)for(e.isDeferredComplete=!0,t=0,n=e.deferreds.length;t<n;t++)e.deferreds[t]();e.isDeferredPending=!1}function a(e,t){return"function"==typeof t?t.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):t}function c(e,t){return function(n,r,s,i){return u(n,r,s,i,e,t)}}function u(e,n,r,i,o,a){var c,u,l,f,k=r.block,p=r.else,y=s(n)||{};if(y.isResolved&&!y.isDeferredPending)return e;if(i.hasOwnProperty("key"))u=i.key;else{if(!y.hasOwnProperty("key"))return t(o,"No key specified","WARN"),e;u=y.key}return f=i.type||y.type,u=d(n.resolve(u),f),l=d(n.resolve(i.value),f),a(u,l)?(y.isPending||(c=!0,y.isPending=!0),k&&(e=e.render(k,n)),c&&(y.isResolved=!0)):p&&(e=e.render(p,n)),e}function d(e,t){switch(t&&(t=t.toLowerCase()),t){case"number":return+e;case"string":return String(e);case"boolean":return e="false"!==e&&e,Boolean(e);case"date":return new Date(e)}return e}var l={},f={tap:function(e,t,r){return n("tap"),r.resolve(e)},sep:function(e,t,n){var r=n.block;return t.stack.index===t.stack.of-1?e:r?r(e,t):e},first:function(e,t,n){return 0===t.stack.index?n.block(e,t):e},last:function(e,t,n){return t.stack.index===t.stack.of-1?n.block(e,t):e},contextDump:function(e,n,r,s){var i,o,c=n.resolve(s.to),u=n.resolve(s.key);switch(u){case"full":i=n.stack;break;default:i=n.stack.head}switch(o=JSON.stringify(i,a,2),c){case"console":t("contextDump",o);break;default:o=o.replace(/</g,"\\u003c"),e=e.write(o)}return e},math:function(e,n,r,a){var c,u=a.key,d=a.method,l=a.operand,f=a.round;if(!a.hasOwnProperty("key")||!a.method)return t("math","`key` or `method` was not provided","ERROR"),e;switch(u=parseFloat(n.resolve(u)),l=parseFloat(n.resolve(l)),d){case"mod":0===l&&t("math","Division by 0","ERROR"),c=u%l;break;case"add":c=u+l;break;case"subtract":c=u-l;break;case"multiply":c=u*l;break;case"divide":0===l&&t("math","Division by 0","ERROR"),c=u/l;break;case"ceil":case"floor":case"round":case"abs":c=Math[d](u);break;case"toint":c=parseInt(u,10);break;default:t("math","Method `"+d+"` is not supported","ERROR")}return void 0!==c&&(f&&(c=Math.round(c)),r&&r.block?(n=i(n,{key:c}),e=e.render(r.block,n),o(s(n))):e=e.write(c)),e},select:function(e,n,r,a){var c=r.block,u={};return a.hasOwnProperty("key")&&(u.key=n.resolve(a.key)),a.hasOwnProperty("type")&&(u.type=a.type),c?(n=i(n,u),e=e.render(c,n),o(s(n))):t("select","Missing body block","WARN"),e},eq:c("eq",function(e,t){return e===t}),ne:c("ne",function(e,t){return e!==t}),lt:c("lt",function(e,t){return e<t}),lte:c("lte",function(e,t){return e<=t}),gt:c("gt",function(e,t){return e>t}),gte:c("gte",function(e,t){return e>=t}),any:function(e,n,r,i){var o=s(n);return o?o.isDeferredComplete?t("any","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){o.deferreds.push(function(){o.isResolved&&(e=e.render(r.block,n)),e.end()})}):t("any","Must be used inside a {@select} block","ERROR"),e},none:function(e,n,r,i){var o=s(n);return o?o.isDeferredComplete?t("none","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){o.deferreds.push(function(){o.isResolved||(e=e.render(r.block,n)),e.end()})}):t("none","Must be used inside a {@select} block","ERROR"),e},size:function(t,n,r,s){var i,o,a=s.key;if((a=n.resolve(s.key))&&!0!==a)if(e.isArray(a))i=a.length;else if(!isNaN(parseFloat(a))&&isFinite(a))i=a;else if("object"==typeof a){i=0;for(o in a)a.hasOwnProperty(o)&&i++}else i=(a+"").length;else i=0;return t.write(i)}};for(var k in f)e.helpers[k]=f[k];return e});
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.page=e()}}(function(){return function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var f=n[a]={exports:{}};t[a][0].call(f.exports,function(e){var n=t[a][1][e];return i(n||e)},f,f.exports,e,t,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){(function(n){"use strict";function r(e,t){if("function"==typeof e)return r("*",e);if("function"==typeof t)for(var n=new s(e),i=1;i<arguments.length;++i)r.callbacks.push(n.middleware(arguments[i]));else"string"==typeof e?r["string"==typeof t?"redirect":"show"](e,t):r.start(e)}function i(e){if(!e.handled){var t;t=y?g+v.hash.replace("#!",""):v.pathname+v.search,t!==e.canonicalPath&&(r.stop(),e.handled=!1,v.href=e.canonicalPath)}}function o(e){return"string"!=typeof e?e:m?decodeURIComponent(e.replace(/\+/g," ")):e}function a(e,t){"/"===e[0]&&0!==e.indexOf(g)&&(e=g+(y?"#!":"")+e);var n=e.indexOf("?");if(this.canonicalPath=e,this.path=e.replace(g,"")||"/",y&&(this.path=this.path.replace("#!","")||"/"),this.title=document.title,this.state=t||{},this.state.path=e,this.querystring=~n?o(e.slice(n+1)):"",this.pathname=o(~n?e.slice(0,n):e),this.params={},this.hash="",!y){if(!~this.path.indexOf("#"))return;var r=this.path.split("#");this.path=r[0],this.hash=o(r[1])||"",this.querystring=this.querystring.split("#")[0]}}function s(e,t){t=t||{},this.path="*"===e?"(.*)":e,this.method="GET",this.regexp=p(this.path,this.keys=[],t)}function c(e){if(1===u(e)&&!(e.metaKey||e.ctrlKey||e.shiftKey||e.defaultPrevented)){for(var t=e.path?e.path[0]:e.target;t&&"A"!==t.nodeName;)t=t.parentNode;if(t&&"A"===t.nodeName&&!t.hasAttribute("download")&&"external"!==t.getAttribute("rel")){var i=t.getAttribute("href");if((y||t.pathname!==v.pathname||!t.hash&&"#"!==i)&&!(i&&i.indexOf("mailto:")>-1)&&!t.target&&f(t.href)){var o=t.pathname+t.search+(t.hash||"");void 0!==n&&o.match(/^\/[a-zA-Z]:\//)&&(o=o.replace(/^\/[a-zA-Z]:\//,"/"));var a=o;0===o.indexOf(g)&&(o=o.substr(g.length)),y&&(o=o.replace("#!","")),g&&a===o||(e.preventDefault(),r.show(a))}}}}function u(e){return e=e||window.event,null===e.which?e.button:e.which}function f(e){var t=v.protocol+"//"+v.hostname;return v.port&&(t+=":"+v.port),e&&0===e.indexOf(t)}var p=e("path-to-regexp");t.exports=r;var h,d,l="undefined"!=typeof document&&document.ontouchstart?"touchstart":"click",v="undefined"!=typeof window&&(window.history.location||window.location),w=!0,m=!0,g="",y=!1;r.callbacks=[],r.exits=[],r.current="",r.len=0,r.base=function(e){if(0===arguments.length)return g;g=e},r.start=function(e){if(e=e||{},!h&&(h=!0,!1===e.dispatch&&(w=!1),!1===e.decodeURLComponents&&(m=!1),!1!==e.popstate&&window.addEventListener("popstate",x,!1),!1!==e.click&&document.addEventListener(l,c,!1),!0===e.hashbang&&(y=!0),w)){var t=y&&~v.hash.indexOf("#!")?v.hash.substr(2)+v.search:v.pathname+v.search+v.hash;r.replace(t,null,!0,w)}},r.stop=function(){h&&(r.current="",r.len=0,h=!1,document.removeEventListener(l,c,!1),window.removeEventListener("popstate",x,!1))},r.show=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,!1!==n&&r.dispatch(o),!1!==o.handled&&!1!==i&&o.pushState(),o},r.back=function(e,t){r.len>0?(history.back(),r.len--):e?setTimeout(function(){r.show(e,t)}):setTimeout(function(){r.show(g,t)})},r.redirect=function(e,t){"string"==typeof e&&"string"==typeof t&&r(e,function(e){setTimeout(function(){r.replace(t)},0)}),"string"==typeof e&&void 0===t&&setTimeout(function(){r.replace(e)},0)},r.replace=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,o.init=n,o.save(),!1!==i&&r.dispatch(o),o},r.dispatch=function(e){function t(){var e=r.exits[s++];if(!e)return n();e(o,t)}function n(){var t=r.callbacks[a++];return e.path!==r.current?void(e.handled=!1):t?void t(e,n):i(e)}var o=d,a=0,s=0;d=e,o?t():n()},r.exit=function(e,t){if("function"==typeof e)return r.exit("*",e);for(var n=new s(e),i=1;i<arguments.length;++i)r.exits.push(n.middleware(arguments[i]))},r.Context=a,a.prototype.pushState=function(){r.len++,history.pushState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},a.prototype.save=function(){history.replaceState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},r.Route=s,s.prototype.middleware=function(e){var t=this;return function(n,r){if(t.match(n.path,n.params))return e(n,r);r()}},s.prototype.match=function(e,t){var n=this.keys,r=e.indexOf("?"),i=~r?e.slice(0,r):e,a=this.regexp.exec(decodeURIComponent(i));if(!a)return!1;for(var s=1,c=a.length;s<c;++s){var u=n[s-1],f=o(a[s]);void 0===f&&hasOwnProperty.call(t,u.name)||(t[u.name]=f)}return!0};var x=function(){var e=!1;if("undefined"!=typeof window)return"complete"===document.readyState?e=!0:window.addEventListener("load",function(){setTimeout(function(){e=!0},0)}),function(t){if(e)if(t.state){var n=t.state.path;r.replace(n,t.state)}else r.show(v.pathname+v.hash,void 0,void 0,!1)}}();r.sameOrigin=f}).call(this,e("_process"))},{_process:2,"path-to-regexp":3}],2:[function(e,t,n){function r(){}var i=t.exports={};i.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,t="undefined"!=typeof window&&window.MutationObserver,n="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var r=[];if(t){var i=document.createElement("div");return new MutationObserver(function(){var e=r.slice();r.length=0,e.forEach(function(e){e()})}).observe(i,{attributes:!0}),function(e){r.length||i.setAttribute("yes","no"),r.push(e)}}return n?(window.addEventListener("message",function(e){var t=e.source;if((t===window||null===t)&&"process-tick"===e.data&&(e.stopPropagation(),r.length>0)){r.shift()()}},!0),function(e){r.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),i.title="browser",i.browser=!0,i.env={},i.argv=[],i.on=r,i.addListener=r,i.once=r,i.off=r,i.removeListener=r,i.removeAllListeners=r,i.emit=r,i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")}},{}],3:[function(e,t,n){function r(e){for(var t,n=[],r=0,i=0,o="";null!=(t=w.exec(e));){var a=t[0],c=t[1],u=t.index;if(o+=e.slice(i,u),i=u+a.length,c)o+=c[1];else{o&&(n.push(o),o="");var f=t[2],p=t[3],h=t[4],d=t[5],l=t[6],v=t[7],m="+"===l||"*"===l,g="?"===l||"*"===l,y=f||"/",x=h||d||(v?".*":"[^"+y+"]+?");n.push({name:p||r++,prefix:f||"",delimiter:y,optional:g,repeat:m,pattern:s(x)})}}return i<e.length&&(o+=e.substr(i)),o&&n.push(o),n}function i(e){return o(r(e))}function o(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^"+e[n].pattern+"$"));return function(n){for(var r="",i=n||{},o=0;o<e.length;o++){var a=e[o];if("string"!=typeof a){var s,c=i[a.name];if(null==c){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to be defined')}if(v(c)){if(!a.repeat)throw new TypeError('Expected "'+a.name+'" to not repeat, but received "'+c+'"');if(0===c.length){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to not be empty')}for(var u=0;u<c.length;u++){if(s=encodeURIComponent(c[u]),!t[o].test(s))throw new TypeError('Expected all "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=(0===u?a.prefix:a.delimiter)+s}}else{if(s=encodeURIComponent(c),!t[o].test(s))throw new TypeError('Expected "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=a.prefix+s}}else r+=a}return r}}function a(e){return e.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function u(e){return e.sensitive?"":"i"}function f(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return c(e,t)}function p(e,t,n){for(var r=[],i=0;i<e.length;i++)r.push(l(e[i],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",u(n)),t)}function h(e,t,n){for(var i=r(e),o=d(i,n),a=0;a<i.length;a++)"string"!=typeof i[a]&&t.push(i[a]);return c(o,t)}function d(e,t){t=t||{};for(var n=t.strict,r=!1!==t.end,i="",o=e[e.length-1],s="string"==typeof o&&/\/$/.test(o),c=0;c<e.length;c++){var f=e[c];if("string"==typeof f)i+=a(f);else{var p=a(f.prefix),h=f.pattern;f.repeat&&(h+="(?:"+p+h+")*"),h=f.optional?p?"(?:"+p+"("+h+"))?":"("+h+")?":p+"("+h+")",i+=h}}return n||(i=(s?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&s?"":"(?=\\/|$)",new RegExp("^"+i,u(t))}function l(e,t,n){return t=t||[],v(t)?n||(n={}):(n=t,t=[]),e instanceof RegExp?f(e,t,n):v(e)?p(e,t,n):h(e,t,n)}var v=e("isarray");t.exports=l,t.exports.parse=r,t.exports.compile=i,t.exports.tokensToFunction=o,t.exports.tokensToRegExp=d;var w=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g")},{isarray:4}],4:[function(e,t,n){t.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{}]},{},[1])(1)});
(function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var r=e.prototype,i=this,s=i.EventEmitter;r.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},r.addListener=function(e,n){var r,i=this.getListenersAsObject(e),s="object"==typeof n;for(r in i)i.hasOwnProperty(r)&&-1===t(i[r],n)&&i[r].push(s?n:{listener:n,once:!1});return this},r.on=n("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=n("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,n){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&-1!==(r=t(s[i],n))&&s[i].splice(r,1);return this},r.off=n("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},r.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},r.removeAllListeners=n("removeEvent"),r.emitEvent=function(e,t){var n,r,i,s,o=this.getListenersAsObject(e);for(s in o)if(o.hasOwnProperty(s))for(n=o[s].slice(0),i=0;i<n.length;i++)r=n[i],!0===r.once&&this.removeListener(e,r.listener),r.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},r.trigger=n("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},r._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=s,e},"function"==typeof define&&define.amd?define(function(){return e}):"object"==typeof module&&module.exports?module.exports=e:i.EventEmitter=e}).call(this);
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.</div></div><br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_1},{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_2},{}).w("<div id=\"page-content-wrapper\"><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-lg-12\">").s(ctx.get(["documentation"], false),ctx,{"block":body_3},{}).w("</div></div><br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-toggle\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><div id=\"docma-content\"></div></div></div><br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar navbar-default navbar-fixed-top\"><div class=\"").x(ctx.get(["boxed"], false),ctx,{"else":body_2,"block":body_3},{}).w("\"><div class=\"nav navbar-left nav-left\"><div class=\"navbar-brand\"><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></div></div>").h("gt",ctx,{"block":body_4},{"key":ctx.getPath(false, ["template","options","navItems","length"]),"value":0},"h").w("</div></nav>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("container-fluid");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<ul class=\"nav navbar-nav\">").s(ctx.getPath(false, ["template","options","navItems"]),ctx,{"block":body_5},{}).w("</ul>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_6,"block":body_7},{});}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_8,"block":body_9},{}).w("\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;").f(ctx.get(["label"], false),ctx,"h").w("&nbsp;<span class=\"caret\"></span></a><ul class=\"dropdown-menu\">").s(ctx.get(["items"], false),ctx,{"block":body_10},{}).w("</ul></li>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("#");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_10.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_5},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).f(ctx.get(["label"], false),ctx,"h",["s"]).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"block":body_3},{}).w("</td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div class=\"sidebar-title\"><span><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></span></div>").x(ctx.getPath(false, ["template","options","search"]),ctx,{"block":body_1},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").s(ctx.get(["symbols"], false),ctx,{"block":body_2},{}).w("</ul><div class=\"sidebar-nav-space\"></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-search\"><input id=\"txt-search\" type=\"search\" class=\"form-control\" placeholder=\"Search...\" /><div class=\"sidebar-search-clean\"><span class=\"glyphicon glyphicon-remove-circle\"></span></div></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$menuitem"]).w("</li>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.w("<div id=\"").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\"><span class=\"glyphicon glyphicon-link color-gray-light\" aria-hidden=\"true\"></span><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["$type"]).w("</code></a>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div>").x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_1},{}).x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).w("</div><div class=\"symbol-definition\">").x(ctx.getPath(false, ["symbol","classdesc"]),ctx,{"block":body_3},{}).f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_8},{}).h("eq",ctx,{"else":body_13,"block":body_16},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_19},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_22},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_25},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_26},{}).x(ctx.getPath(false, ["template","options","symbolMeta"]),ctx,{"block":body_28},{}).w("</div></div><hr />").h("eq",ctx,{"block":body_32},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_34,"block":body_36},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<table>").x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_7},{}).w("</table><br />");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<tr><td><b>Version:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</td></tr>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><b>Copyright:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</td></tr>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<tr><td><b>Author:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</td></tr>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<tr><td><b>License:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</td></tr>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b>See</b>").h("gt",ctx,{"else":body_9,"block":body_11},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p><br />");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_10},{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_12},{}).w("</ul>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_14,"block":body_15},{});}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_14.__dustBody=!0;function body_15(chk,ctx){return chk;}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_17,"block":body_18},{});}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_17.__dustBody=!0;function body_18(chk,ctx){return chk;}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.h("gt",ctx,{"else":body_20,"block":body_21},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.w("<p><b>Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<b>Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.h("gt",ctx,{"else":body_23,"block":body_24},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.w("<p><b>Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.w("<b>Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.w("<p><b>Example</b></p>").s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_27},{});}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.w("<pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt"]).w("</code></pre>");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_29},{});}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_30},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_31},{}).w("</p>");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_33},{});}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_33.__dustBody=!0;function body_34(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_35},{});}body_34.__dustBody=!0;function body_35(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_35.__dustBody=!0;function body_36(chk,ctx){return chk;}body_36.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var docma = {"routes":[{"id":"api:","type":"api","name":"_def_","path":"/api","contentPath":null},{"id":"api:framework","type":"api","name":"framework","path":"/api/framework","contentPath":null},{"id":"api:jsapi","type":"api","name":"jsapi","path":"/api/jsapi","contentPath":null},{"id":"api:plugins","type":"api","name":"plugins","path":"/api/plugins","contentPath":null},{"id":"content:api-usage","type":"content","name":"api-usage","path":"/api-usage","contentPath":"content/api-usage.html"},{"id":"content:application-tutorial","type":"content","name":"application-tutorial","path":"/application-tutorial","contentPath":"content/application-tutorial.html"},{"id":"content:building-and-developing","type":"content","name":"building-and-developing","path":"/building-and-developing","contentPath":"content/building-and-developing.html"},{"id":"content:configuration-files","type":"content","name":"configuration-files","path":"/configuration-files","contentPath":"content/configuration-files.html"},{"id":"content:contributing-guidelines","type":"content","name":"contributing-guidelines","path":"/contributing-guidelines","contentPath":"content/contributing-guidelines.html"},{"id":"content:custom-search-service","type":"content","name":"custom-search-service","path":"/custom-search-service","contentPath":"content/custom-search-service.html"},{"id":"content:customize-theme","type":"content","name":"customize-theme","path":"/customize-theme","contentPath":"content/customize-theme.html"},{"id":"content:debugging-server-side","type":"content","name":"debugging-server-side","path":"/debugging-server-side","contentPath":"content/debugging-server-side.html"},{"id":"content:developing-with-mapstore-2-intro","type":"content","name":"developing-with-mapstore-2-intro","path":"/developing-with-mapstore-2-intro","contentPath":"content/developing-with-mapstore-2-intro.html"},{"id":"content:developing-with-mapstore-2","type":"content","name":"developing-with-mapstore-2","path":"/developing-with-mapstore-2","contentPath":"content/developing-with-mapstore-2.html"},{"id":"content:frontend-building-tools-and-configuration","type":"content","name":"frontend-building-tools-and-configuration","path":"/frontend-building-tools-and-configuration","contentPath":"content/frontend-building-tools-and-configuration.html"},{"id":"content:how-to-use-a-cdn","type":"content","name":"how-to-use-a-cdn","path":"/how-to-use-a-cdn","contentPath":"content/how-to-use-a-cdn.html"},{"id":"content:index","type":"content","name":"index","path":"/index","contentPath":"content/index.html"},{"id":"content:infrastructure-and-general-architecture","type":"content","name":"infrastructure-and-general-architecture","path":"/infrastructure-and-general-architecture","contentPath":"content/infrastructure-and-general-architecture.html"},{"id":"content:local-config","type":"content","name":"local-config","path":"/local-config","contentPath":"content/local-config.html"},{"id":"content:map-plugin","type":"content","name":"map-plugin","path":"/map-plugin","contentPath":"content/map-plugin.html"},{"id":"content:maps-configuration","type":"content","name":"maps-configuration","path":"/maps-configuration","contentPath":"content/maps-configuration.html"},{"id":"content:mapstore-migration-guide","type":"content","name":"mapstore-migration-guide","path":"/mapstore-migration-guide","contentPath":"content/mapstore-migration-guide.html"},{"id":"content:plugins-architecture","type":"content","name":"plugins-architecture","path":"/plugins-architecture","contentPath":"content/plugins-architecture.html"},{"id":"content:plugins-documentation","type":"content","name":"plugins-documentation","path":"/plugins-documentation","contentPath":"content/plugins-documentation.html"},{"id":"content:project-creation-script","type":"content","name":"project-creation-script","path":"/project-creation-script","contentPath":"content/project-creation-script.html"},{"id":"content:reactjs-and-redux-introduction","type":"content","name":"reactjs-and-redux-introduction","path":"/reactjs-and-redux-introduction","contentPath":"content/reactjs-and-redux-introduction.html"},{"id":"content:release-checklist","type":"content","name":"release-checklist","path":"/release-checklist","contentPath":"content/release-checklist.html"},{"id":"content:binary-demo-package","type":"content","name":"binary-demo-package","path":"/binary-demo-package","contentPath":"content/binary-demo-package.html"},{"id":"content:readme","type":"content","name":"readme","path":"/readme","contentPath":"content/readme.html"},{"id":"content:developer-guide","type":"content","name":"developer-guide","path":"/developer-guide","contentPath":"content/developer-guide.html"},{"id":"content:site","type":"content","name":"site","path":"/site","contentPath":"content/site.html"}],"apis":{"_def_":{"documentation":[],"symbols":[]},"framework":{"documentation":[{"comment":"/**\n * Redux actions.\n * @see {@link http://redux.js.org/docs/basics/Actions.html|the redux documentation} for details\n * @name actions\n *\n */","meta":{"range":[0,142],"filename":"index.jsdoc","lineno":1,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>Redux actions.</p>","see":["{@link http://redux.js.org/docs/basics/Actions.html|the redux documentation} for details"],"name":"actions","longname":"actions","kind":"member","scope":"global","$longname":"actions","$members":[{"comment":"/**\n * Actions for controls. Provide a simple generic functionality to toggle a generic\n * control property.\n * @name actions.controls\n */","meta":{"range":[1691,1829],"filename":"controls.js","lineno":58,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>Actions for controls. Provide a simple generic functionality to toggle a generic\ncontrol property.</p>","name":"controls","memberof":"actions","longname":"actions.controls","scope":"static","kind":"member","$longname":"actions.controls"},{"comment":"/**\n * Actions for FullScreen Plugin.\n * @name actions.fullscreen\n */","meta":{"range":[764,833],"filename":"fullscreen.js","lineno":25,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>Actions for FullScreen Plugin.</p>","name":"fullscreen","memberof":"actions","longname":"actions.fullscreen","scope":"static","kind":"member","$longname":"actions.fullscreen"},{"comment":"/**\n * Actions for Globe Switcher Plugin.\n * @name actions.globeswitcher\n */","meta":{"range":[1084,1160],"filename":"globeswitcher.js","lineno":49,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>Actions for Globe Switcher Plugin.</p>","name":"globeswitcher","memberof":"actions","longname":"actions.globeswitcher","scope":"static","kind":"member","$longname":"actions.globeswitcher"},{"comment":"/**\n * Actions for maps\n * @name actions.maps\n */","meta":{"range":[22938,22987],"filename":"maps.js","lineno":656,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>Actions for maps</p>","name":"maps","memberof":"actions","longname":"actions.maps","scope":"static","kind":"member","$longname":"actions.maps"},{"comment":"/**\n * Actions for map type management.Allow to manage the default map type.\n * @name actions.maptype\n */","meta":{"range":[535,640],"filename":"maptype.js","lineno":23,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>Actions for map type management.Allow to manage the default map type.</p>","name":"maptype","memberof":"actions","longname":"actions.maptype","scope":"static","kind":"member","$longname":"actions.maptype"},{"comment":"/**\n * actions for notifications\n * @name notifications\n * @memberof actions\n */","meta":{"range":[2828,2908],"filename":"notifications.js","lineno":102,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>actions for notifications</p>","name":"notifications","memberof":"actions","scope":"static","longname":"actions.notifications","kind":"member","$longname":"actions.notifications"},{"comment":"/**\n * Actions for search\n * @name actions.search\n */","meta":{"range":[4443,4496],"filename":"search.js","lineno":174,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{}},"description":"<p>Actions for search</p>","name":"search","memberof":"actions","longname":"actions.search","scope":"static","kind":"member","$longname":"actions.search"}]},{"comment":"/**\n * Reset all the controls\n * @memberof actions.controls\n * @param {string[]} [skip=[]] a list of tools to skip\n * @return {object} action of type `RESET_CONTROLS`\n */","meta":{"range":[1590,1690],"filename":"controls.js","lineno":52,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006008","name":"resetControls","type":"FunctionDeclaration","paramnames":["skip"]}},"description":"<p>Reset all the controls</p>","memberof":"actions.controls","params":[{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"[]","description":"<p>a list of tools to skip</p>","name":"skip"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>RESET_CONTROLS</code></p>"}],"name":"resetControls","longname":"actions.controls.resetControls","kind":"function","scope":"static","$longname":"actions.controls.resetControls"},{"comment":"/**\n * Sets a property in a more detailed way\n * @memberof actions.controls\n * @param {string} control  control name\n * @param {string} property the property to set\n * @param {string|number|boolean|object} value the value to set or to check for toggling\n * @param {boolean} [toggle]  if true, the reducer will toggle the property of the control only if is equal to the value parameter\n * @return {object} of type `SET_CONTROL_PROPERTY` with control, property, value and toggle params\n */","meta":{"range":[1231,1417],"filename":"controls.js","lineno":36,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100005989","name":"setControlProperty","type":"FunctionDeclaration","paramnames":["control","property","value","toggle"]}},"description":"<p>Sets a property in a more detailed way</p>","memberof":"actions.controls","params":[{"type":{"names":["string"]},"description":"<p>control name</p>","name":"control"},{"type":{"names":["string"]},"description":"<p>the property to set</p>","name":"property"},{"type":{"names":["string","number","boolean","object"]},"description":"<p>the value to set or to check for toggling</p>","name":"value"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>if true, the reducer will toggle the property of the control only if is equal to the value parameter</p>","name":"toggle"}],"returns":[{"type":{"names":["object"]},"description":"<p>of type <code>SET_CONTROL_PROPERTY</code> with control, property, value and toggle params</p>"}],"name":"setControlProperty","longname":"actions.controls.setControlProperty","kind":"function","scope":"static","$longname":"actions.controls.setControlProperty"},{"comment":"/**\n * Toggle a control property\n * @memberof actions.controls\n * @param  {string} control  the name of the control\n * @param  {boolean|number|string|object} [property] the property to override\n * @return {object} action of type `TOGGLE_CONTROL`, control, and property\n */","meta":{"range":[612,741],"filename":"controls.js","lineno":19,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100005976","name":"toggleControl","type":"FunctionDeclaration","paramnames":["control","property"]}},"description":"<p>Toggle a control property</p>","memberof":"actions.controls","params":[{"type":{"names":["string"]},"description":"<p>the name of the control</p>","name":"control"},{"type":{"names":["boolean","number","string","object"]},"optional":true,"description":"<p>the property to override</p>","name":"property"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>TOGGLE_CONTROL</code>, control, and property</p>"}],"name":"toggleControl","longname":"actions.controls.toggleControl","kind":"function","scope":"static","$longname":"actions.controls.toggleControl"},{"comment":"/**\n * when fullscreen have to be toggled\n * @memberof actions.fullscreen\n * @param  {boolean} enable          true for enable, false for disable\n * @param  {string} elementSelector querySelector string to use to get the element to fullscreen.\n * @return {action}                   the action of type `TOGGLE_FULLSCREEN` with enable flag and element selector.\n */","meta":{"range":[616,763],"filename":"fullscreen.js","lineno":18,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006043","name":"toggleFullscreen","type":"FunctionDeclaration","paramnames":["enable","elementSelector"]}},"description":"<p>when fullscreen have to be toggled</p>","memberof":"actions.fullscreen","params":[{"type":{"names":["boolean"]},"description":"<p>true for enable, false for disable</p>","name":"enable"},{"type":{"names":["string"]},"description":"<p>querySelector string to use to get the element to fullscreen.</p>","name":"elementSelector"}],"returns":[{"type":{"names":["action"]},"description":"<p>the action of type <code>TOGGLE_FULLSCREEN</code> with enable flag and element selector.</p>"}],"name":"toggleFullscreen","longname":"actions.fullscreen.toggleFullscreen","kind":"function","scope":"static","$longname":"actions.fullscreen.toggleFullscreen"},{"comment":"/**\n * Emitted when 3d map have to be toggled\n * @memberof actions.globeswitcher\n * @param  {boolean} enable          true for enable, false for disable\n * @return {action}                  the action of type `TOGGLE_FULLSCREEN` with enable flag and element selector.\n * ```\n * {\n *   type: TOGGLE_3D,\n *   enable\n * }\n * ```\n */","meta":{"range":[623,754],"filename":"globeswitcher.js","lineno":24,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006075","name":"toggle3d","type":"FunctionDeclaration","paramnames":["enable","originalMapType"]}},"description":"<p>Emitted when 3d map have to be toggled</p>","memberof":"actions.globeswitcher","params":[{"type":{"names":["boolean"]},"description":"<p>true for enable, false for disable</p>","name":"enable"}],"returns":[{"type":{"names":["action"]},"description":"<p>the action of type <code>TOGGLE_FULLSCREEN</code> with enable flag and element selector.</p>\n<pre class=\"prettyprint source\"><code>{\n  type: TOGGLE_3D,\n  enable\n}</code></pre>"}],"name":"toggle3d","longname":"actions.globeswitcher.toggle3d","kind":"function","scope":"static","$longname":"actions.globeswitcher.toggle3d"},{"comment":"/**\n * Saves the last 2d map\n * @memberof actions.globeswitcher\n * @param  {string} mapType last maptype\n * @return {object}         action\n * ```\n * {\n *   type: MAPTYPE_2D_SELECTED,\n *   mapType\n * }\n * ```\n */","meta":{"range":[968,1083],"filename":"globeswitcher.js","lineno":43,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006088","name":"updateLast2dMapType","type":"FunctionDeclaration","paramnames":["mapType"]}},"description":"<p>Saves the last 2d map</p>","memberof":"actions.globeswitcher","params":[{"type":{"names":["string"]},"description":"<p>last maptype</p>","name":"mapType"}],"returns":[{"type":{"names":["object"]},"description":"<p>action</p>\n<pre class=\"prettyprint source\"><code>{\n  type: MAPTYPE_2D_SELECTED,\n  mapType\n}</code></pre>"}],"name":"updateLast2dMapType","longname":"actions.globeswitcher.updateLast2dMapType","kind":"function","scope":"static","$longname":"actions.globeswitcher.updateLast2dMapType"},{"comment":"/**\n * When attribute of a map has been updated\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the resource\n * @param  {string} name       name of the attributeUpdated\n * @param  {string} value      the new value of the attribute\n * @param  {string} type       the type of the attribute\n * @param  {object} [error]      error, if any\n * @return {action}            type `ATTRIBUTE_UPDATED`, with the arguments as they are named\n */","meta":{"range":[7005,7188],"filename":"maps.js","lineno":241,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006408","name":"attributeUpdated","type":"FunctionDeclaration","paramnames":["resourceId","name","value","type","error"]}},"description":"<p>When attribute of a map has been updated</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the resource</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>name of the attributeUpdated</p>","name":"name"},{"type":{"names":["string"]},"description":"<p>the new value of the attribute</p>","name":"value"},{"type":{"names":["string"]},"description":"<p>the type of the attribute</p>","name":"type"},{"type":{"names":["object"]},"optional":true,"description":"<p>error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>ATTRIBUTE_UPDATED</code>, with the arguments as they are named</p>"}],"name":"attributeUpdated","longname":"actions.maps.attributeUpdated","kind":"function","scope":"static","$longname":"actions.maps.attributeUpdated"},{"comment":"/**\n * Creates a new map.\n * @memberof actions.maps\n * @param  {object} metadata    metadata for the new map\n * @param  {object} content     the map object itself\n * @param  {object} [thumbnail] the thumbnail\n * @param  {object} [options]   options for the request\n * @return {thunk}              creates the map and dispatches  createThumbnail, mapCreated and so on\n */","meta":{"range":[21354,22042],"filename":"maps.js","lineno":620,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007338","name":"createMap","type":"FunctionDeclaration","paramnames":["metadata","content","thumbnail","options"]},"vars":{"":null}},"description":"<p>Creates a new map.</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>metadata for the new map</p>","name":"metadata"},{"type":{"names":["object"]},"description":"<p>the map object itself</p>","name":"content"},{"type":{"names":["object"]},"optional":true,"description":"<p>the thumbnail</p>","name":"thumbnail"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>creates the map and dispatches  createThumbnail, mapCreated and so on</p>"}],"name":"createMap","longname":"actions.maps.createMap","kind":"function","scope":"static","$longname":"actions.maps.createMap"},{"comment":"/**\n * Creates the thumbnail for the map.\n * @memberof actions.maps\n * @param  {object} map               the map\n * @param  {object} metadataMap       the map metadataMap\n * @param  {string} nameThumbnail     the name for the thumbnail\n * @param  {string} dataThumbnail     the data to save for the thumbnail\n * @param  {string} categoryThumbnail the category for the thumbnails\n * @param  {number} resourceIdMap     the resourceId of the map\n * @param  {action} [onSuccess]       the action to dispatch on success\n * @param  {action} [onReset]         the action to dispatch on reset\n * @param  {object} [options]         options for the request\n * @return {thunk}                   perform the thumb creation and dispatch proper actions\n */","meta":{"range":[15779,17737],"filename":"maps.js","lineno":503,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006892","name":"createThumbnail","type":"FunctionDeclaration","paramnames":["map","metadataMap","nameThumbnail","dataThumbnail","categoryThumbnail","resourceIdMap","onSuccess","onReset","options"]},"vars":{"":null}},"description":"<p>Creates the thumbnail for the map.</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the map</p>","name":"map"},{"type":{"names":["object"]},"description":"<p>the map metadataMap</p>","name":"metadataMap"},{"type":{"names":["string"]},"description":"<p>the name for the thumbnail</p>","name":"nameThumbnail"},{"type":{"names":["string"]},"description":"<p>the data to save for the thumbnail</p>","name":"dataThumbnail"},{"type":{"names":["string"]},"description":"<p>the category for the thumbnails</p>","name":"categoryThumbnail"},{"type":{"names":["number"]},"description":"<p>the resourceId of the map</p>","name":"resourceIdMap"},{"type":{"names":["action"]},"optional":true,"description":"<p>the action to dispatch on success</p>","name":"onSuccess"},{"type":{"names":["action"]},"optional":true,"description":"<p>the action to dispatch on reset</p>","name":"onReset"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>perform the thumb creation and dispatch proper actions</p>"}],"name":"createThumbnail","longname":"actions.maps.createThumbnail","kind":"function","scope":"static","$longname":"actions.maps.createThumbnail"},{"comment":"/**\n * Deletes a map.\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource to delete\n * @param  {object} options    options for the request\n * @return {thunk}             performs the delete operations and dispatches mapDeleted and loadMaps\n */","meta":{"range":[22316,22937],"filename":"maps.js","lineno":642,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007436","name":"deleteMap","type":"FunctionDeclaration","paramnames":["resourceId","options"]},"vars":{"":null}},"description":"<p>Deletes a map.</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource to delete</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>performs the delete operations and dispatches mapDeleted and loadMaps</p>"}],"name":"deleteMap","longname":"actions.maps.deleteMap","kind":"function","scope":"static","$longname":"actions.maps.deleteMap"},{"comment":"/**\n * Deletes a thubnail.\n * @memberof actions.maps\n * @param  {number} resourceId    the id of the thumbnail\n * @param  {number} resourceIdMap the id of the map\n * @param  {object} [options]       options for the request, if any\n * @return {thunk}               performs thumbnail cancellation\n */","meta":{"range":[19780,20982],"filename":"maps.js","lineno":585,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007222","name":"deleteThumbnail","type":"FunctionDeclaration","paramnames":["resourceId","resourceIdMap","options"]},"vars":{"":null}},"description":"<p>Deletes a thubnail.</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the thumbnail</p>","name":"resourceId"},{"type":{"names":["number"]},"description":"<p>the id of the map</p>","name":"resourceIdMap"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the request, if any</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>performs thumbnail cancellation</p>"}],"name":"deleteThumbnail","longname":"actions.maps.deleteThumbnail","kind":"function","scope":"static","$longname":"actions.maps.deleteThumbnail"},{"comment":"/**\n * load the available goups for a new permission rule.\n * @memberof actions.maps\n * @param  {object} user the current user\n * @return {thunk}     dispatches updateCurrentMapGroups or loadError\n */","meta":{"range":[11399,11667],"filename":"maps.js","lineno":394,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006641","name":"loadAvailableGroups","type":"FunctionDeclaration","paramnames":["user"]},"vars":{"":null}},"description":"<p>load the available goups for a new permission rule.</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the current user</p>","name":"user"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>dispatches updateCurrentMapGroups or loadError</p>"}],"name":"loadAvailableGroups","longname":"actions.maps.loadAvailableGroups","kind":"function","scope":"static","$longname":"actions.maps.loadAvailableGroups"},{"comment":"/**\n * When a error occurred during maps loading\n * @memberof actions.maps\n * @param  {object} e the error\n * @return {action}   MAPS_LIST_LOAD_ERROR\n */","meta":{"range":[3147,3245],"filename":"maps.js","lineno":106,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006289","name":"loadError","type":"FunctionDeclaration","paramnames":["e"]}},"description":"<p>When a error occurred during maps loading</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the error</p>","name":"e"}],"returns":[{"type":{"names":["action"]},"description":"<p>MAPS_LIST_LOAD_ERROR</p>"}],"name":"loadError","longname":"actions.maps.loadError","kind":"function","scope":"static","$longname":"actions.maps.loadError"},{"comment":"/**\n * Perform the maps load\n * @memberof actions.maps\n * @param  {string} geoStoreUrl      the url of geostore\n * @param  {String} [searchText=\"*\"] text to search\n * @param  {Object} [params={start:  0. limit: 20}] params for the request\n * @return {thunk}                  dispatches mapsLoading, mapsLoaded or loadError\n */","meta":{"range":[10031,10511],"filename":"maps.js","lineno":353,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006507","name":"loadMaps","type":"FunctionDeclaration","paramnames":["geoStoreUrl","searchText","params"]},"vars":{"":null}},"description":"<p>Perform the maps load</p>","memberof":"actions.maps","params":[{"type":{"names":["string"]},"description":"<p>the url of geostore</p>","name":"geoStoreUrl"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"*\"","description":"<p>text to search</p>","name":"searchText"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{start:  0. limit: 20}","description":"<p>params for the request</p>","name":"params"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>dispatches mapsLoading, mapsLoaded or loadError</p>"}],"name":"loadMaps","longname":"actions.maps.loadMaps","kind":"function","scope":"static","$longname":"actions.maps.loadMaps"},{"comment":"/**\n * perform permission load for a mapId\n * @memberof actions.maps\n * @param  {number} mapId the id of the map for the permission\n * @return {thunk}       dispatches permissionsLoaded, updateCurrentMapPermissions or loadError\n */","meta":{"range":[10745,11196],"filename":"maps.js","lineno":371,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006581","name":"loadPermissions","type":"FunctionDeclaration","paramnames":["mapId"]},"vars":{"":null}},"description":"<p>perform permission load for a mapId</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the map for the permission</p>","name":"mapId"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>dispatches permissionsLoaded, updateCurrentMapPermissions or loadError</p>"}],"name":"loadPermissions","longname":"actions.maps.loadPermissions","kind":"function","scope":"static","$longname":"actions.maps.loadPermissions"},{"comment":"/**\n * When a new map is created\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the new map\n * @param  {object} metadata   metadata associated to the new resourceId\n * @param  {object} content    the content of the new resourceId\n * @param  {object} [error]    an error, if present\n * @return {action}            `MAP_CREATED`, with all arguments as named\n */","meta":{"range":[3977,4154],"filename":"maps.js","lineno":137,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006312","name":"mapCreated","type":"FunctionDeclaration","paramnames":["resourceId","metadata","content","error"]}},"description":"<p>When a new map is created</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the new map</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>metadata associated to the new resourceId</p>","name":"metadata"},{"type":{"names":["object"]},"description":"<p>the content of the new resourceId</p>","name":"content"},{"type":{"names":["object"]},"optional":true,"description":"<p>an error, if present</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p><code>MAP_CREATED</code>, with all arguments as named</p>"}],"name":"mapCreated","longname":"actions.maps.mapCreated","kind":"function","scope":"static","$longname":"actions.maps.mapCreated"},{"comment":"/**\n * When a map delete action have been performed\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the deleted map\n * @param  {string} result     the result, can be \"success\"\n * @param  {object} [error]      the error, if any\n * @return {action}            type `MAP_DELETED`, with the arguments as they are named\n */","meta":{"range":[5947,6094],"filename":"maps.js","lineno":205,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006376","name":"mapDeleted","type":"FunctionDeclaration","paramnames":["resourceId","result","error"]}},"description":"<p>When a map delete action have been performed</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the deleted map</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>the result, can be &quot;success&quot;</p>","name":"result"},{"type":{"names":["object"]},"optional":true,"description":"<p>the error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_DELETED</code>, with the arguments as they are named</p>"}],"name":"mapDeleted","longname":"actions.maps.mapDeleted","kind":"function","scope":"static","$longname":"actions.maps.mapDeleted"},{"comment":"/**\n * When deleting a map\n * @memberof actions.maps\n * @param  {number} resourceId the identifier of the map\n * @param  {string} result     can be \"success\"\n * @param  {object} [error]      error, if any\n * @return {action}            type `MAP_DELETING`, with the arguments as they are named\n */","meta":{"range":[6394,6543],"filename":"maps.js","lineno":222,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006392","name":"mapDeleting","type":"FunctionDeclaration","paramnames":["resourceId","result","error"]}},"description":"<p>When deleting a map</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the map</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>can be &quot;success&quot;</p>","name":"result"},{"type":{"names":["object"]},"optional":true,"description":"<p>error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_DELETING</code>, with the arguments as they are named</p>"}],"name":"mapDeleting","longname":"actions.maps.mapDeleting","kind":"function","scope":"static","$longname":"actions.maps.mapDeleting"},{"comment":"/**\n * When an error occurred on map creation\n * @memberof actions.maps\n * @param  {object} error the error occurred\n * @return {action}      type `MAP_ERROR`, with the arguments as they are named\n */","meta":{"range":[7801,7888],"filename":"maps.js","lineno":272,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006441","name":"mapError","type":"FunctionDeclaration","paramnames":["error"]}},"description":"<p>When an error occurred on map creation</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the error occurred</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_ERROR</code>, with the arguments as they are named</p>"}],"name":"mapError","longname":"actions.maps.mapError","kind":"function","scope":"static","$longname":"actions.maps.mapError"},{"comment":"/**\n * When metadata of a map are updated\n * @memberof actions.maps\n * @param  {number} resourceId     the id of the resourceId\n * @param  {string} newName        the new name of the map\n * @param  {string} newDescription the new description of the map\n * @param  {string} result         the result, can be \"success\"\n * @param  {object} [error]          an error, if any\n * @return {action}                of type `MAP_METADATA_UPDATED` with the arguments as they are named\n */","meta":{"range":[4958,5188],"filename":"maps.js","lineno":170,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006341","name":"mapMetadataUpdated","type":"FunctionDeclaration","paramnames":["resourceId","newName","newDescription","result","error"]}},"description":"<p>When metadata of a map are updated</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resourceId</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>the new name of the map</p>","name":"newName"},{"type":{"names":["string"]},"description":"<p>the new description of the map</p>","name":"newDescription"},{"type":{"names":["string"]},"description":"<p>the result, can be &quot;success&quot;</p>","name":"result"},{"type":{"names":["object"]},"optional":true,"description":"<p>an error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>of type <code>MAP_METADATA_UPDATED</code> with the arguments as they are named</p>"}],"name":"mapMetadataUpdated","longname":"actions.maps.mapMetadataUpdated","kind":"function","scope":"static","$longname":"actions.maps.mapMetadataUpdated"},{"comment":"/**\n * run when maps are loaded. The results params is an object like this:\n * ```\n * {\n *    results: [{...}, {...}]\n * }\n * ```\n * @memberof actions.maps\n * @param  {object} maps       object with results\n * @param  {object} params     params of the original request\n * @param  {string} searchText the original search text for the request\n * @return {action}            action of type `MAPS_LIST_LOADED` with all the arguments\n */","meta":{"range":[2841,2991],"filename":"maps.js","lineno":91,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006273","name":"mapsLoaded","type":"FunctionDeclaration","paramnames":["maps","params","searchText"]}},"description":"<p>run when maps are loaded. The results params is an object like this:</p>\n<pre class=\"prettyprint source\"><code>{\n   results: [{...}, {...}]\n}</code></pre>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>object with results</p>","name":"maps"},{"type":{"names":["object"]},"description":"<p>params of the original request</p>","name":"params"},{"type":{"names":["string"]},"description":"<p>the original search text for the request</p>","name":"searchText"}],"returns":[{"type":{"names":["action"]},"description":"<p>action of type <code>MAPS_LIST_LOADED</code> with all the arguments</p>"}],"name":"mapsLoaded","longname":"actions.maps.mapsLoaded","kind":"function","scope":"static","$longname":"actions.maps.mapsLoaded"},{"comment":"/**\n * mapsLoading action, type `MAPS_LIST_LOADING`\n * @memberof actions.maps\n * @param  {string} searchText text to search\n * @param  {object} params     the params of the request\n * @return {action}            type `MAPS_LIST_LOADING` with searchText and params\n */","meta":{"range":[1979,2111],"filename":"maps.js","lineno":57,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006250","name":"mapsLoading","type":"FunctionDeclaration","paramnames":["searchText","params"]}},"description":"<p>mapsLoading action, type <code>MAPS_LIST_LOADING</code></p>","memberof":"actions.maps","params":[{"type":{"names":["string"]},"description":"<p>text to search</p>","name":"searchText"},{"type":{"names":["object"]},"description":"<p>the params of the request</p>","name":"params"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAPS_LIST_LOADING</code> with searchText and params</p>"}],"name":"mapsLoading","longname":"actions.maps.mapsLoading","kind":"function","scope":"static","$longname":"actions.maps.mapsLoading"},{"comment":"/**\n * action to run to change search text\n * @memberof actions.maps\n * @param  {string} text the search text\n * @return {action} of type `MAPS_SEARCH_TEXT_CHANGED`, with text\n */","meta":{"range":[2293,2406],"filename":"maps.js","lineno":71,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006263","name":"mapsSearchTextChanged","type":"FunctionDeclaration","paramnames":["text"]}},"description":"<p>action to run to change search text</p>","memberof":"actions.maps","params":[{"type":{"names":["string"]},"description":"<p>the search text</p>","name":"text"}],"returns":[{"type":{"names":["action"]},"description":"<p>of type <code>MAPS_SEARCH_TEXT_CHANGED</code>, with text</p>"}],"name":"mapsSearchTextChanged","longname":"actions.maps.mapsSearchTextChanged","kind":"function","scope":"static","$longname":"actions.maps.mapsSearchTextChanged"},{"comment":"/**\n * When a map is updating\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource that is updating\n * @return {action}            type `MAP_UPDATING` with the arguments as they are named\n */","meta":{"range":[4375,4478],"filename":"maps.js","lineno":153,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006331","name":"mapUpdating","type":"FunctionDeclaration","paramnames":["resourceId"]}},"description":"<p>When a map is updating</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource that is updating</p>","name":"resourceId"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>MAP_UPDATING</code> with the arguments as they are named</p>"}],"name":"mapUpdating","longname":"actions.maps.mapUpdating","kind":"function","scope":"static","$longname":"actions.maps.mapUpdating"},{"comment":"/**\n * updates metadata of the map\n * @memberof actions.maps\n * @param  {object} prop the name of the changed property\n * @param  {object} name the value of the changed property\n * @return {action} METADATA_CHANGED\n */","meta":{"range":[3466,3587],"filename":"maps.js","lineno":120,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006299","name":"metadataChanged","type":"FunctionDeclaration","paramnames":["prop","value"]}},"description":"<p>updates metadata of the map</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the name of the changed property</p>","name":"prop"},{"type":{"names":["object"]},"description":"<p>the value of the changed property</p>","name":"name"}],"returns":[{"type":{"names":["action"]},"description":"<p>METADATA_CHANGED</p>"}],"name":"metadataChanged","longname":"actions.maps.metadataChanged","kind":"function","scope":"static","$longname":"actions.maps.metadataChanged"},{"comment":"/**\n * performed when want to disaplay/hide the metadata editing window\n * @memberof actions.maps\n * @param  {boolean} displayMetadataEditValue true to display, false to hide\n * @return {action}                          type `DISPLAY_METADATA_EDIT`, with the arguments as they are named\n */","meta":{"range":[8554,8704],"filename":"maps.js","lineno":300,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006464","name":"onDisplayMetadataEdit","type":"FunctionDeclaration","paramnames":["displayMetadataEditValue"]}},"description":"<p>performed when want to disaplay/hide the metadata editing window</p>","memberof":"actions.maps","params":[{"type":{"names":["boolean"]},"description":"<p>true to display, false to hide</p>","name":"displayMetadataEditValue"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>DISPLAY_METADATA_EDIT</code>, with the arguments as they are named</p>"}],"name":"onDisplayMetadataEdit","longname":"actions.maps.onDisplayMetadataEdit","kind":"function","scope":"static","$longname":"actions.maps.onDisplayMetadataEdit"},{"comment":"/**\n * When the permission list has been loaded\n * @memberof actions.maps\n * @param  {array} permissions  the permission\n * @param  {number} mapId       the id of the resource\n * @return {action}             type `PERMISSIONS_LIST_LOADED`, with the arguments as they are named\n */","meta":{"range":[9558,9702],"filename":"maps.js","lineno":337,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006494","name":"permissionsLoaded","type":"FunctionDeclaration","paramnames":["permissions","mapId"]}},"description":"<p>When the permission list has been loaded</p>","memberof":"actions.maps","params":[{"type":{"names":["array"]},"description":"<p>the permission</p>","name":"permissions"},{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"mapId"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>PERMISSIONS_LIST_LOADED</code>, with the arguments as they are named</p>"}],"name":"permissionsLoaded","longname":"actions.maps.permissionsLoaded","kind":"function","scope":"static","$longname":"actions.maps.permissionsLoaded"},{"comment":"/**\n * When the permission list is loading\n * @memberof actions.maps\n * @param  {number} mapId the id of the resource\n * @return {action}       type `PERMISSIONS_LIST_LOADING`, with the arguments as they are named\n */","meta":{"range":[9163,9275],"filename":"maps.js","lineno":323,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006484","name":"permissionsLoading","type":"FunctionDeclaration","paramnames":["mapId"]}},"description":"<p>When the permission list is loading</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"mapId"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>PERMISSIONS_LIST_LOADING</code>, with the arguments as they are named</p>"}],"name":"permissionsLoading","longname":"actions.maps.permissionsLoading","kind":"function","scope":"static","$longname":"actions.maps.permissionsLoading"},{"comment":"/**\n * When permission of a map are updated\n * @memberof actions.maps\n *\n * @param  {number} resourceId the id of the resourceId\n * @param  {object} [error]      error, if any\n * @return {action}            `PERMISSIONS_UPDATED` with the arguments as they are named\n */","meta":{"range":[5460,5599],"filename":"maps.js","lineno":189,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006363","name":"permissionsUpdated","type":"FunctionDeclaration","paramnames":["resourceId","error"]}},"description":"<p>When permission of a map are updated</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resourceId</p>","name":"resourceId"},{"type":{"names":["object"]},"optional":true,"description":"<p>error, if any</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p><code>PERMISSIONS_UPDATED</code> with the arguments as they are named</p>"}],"name":"permissionsUpdated","longname":"actions.maps.permissionsUpdated","kind":"function","scope":"static","$longname":"actions.maps.permissionsUpdated"},{"comment":"/**\n * reset current map metadata, `RESET_CURRENT_MAP`\n * @memberof actions.maps\n * @return {action} of type `RESET_CURRENT_MAP`\n */","meta":{"range":[1627,1709],"filename":"maps.js","lineno":44,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006243","name":"resetCurrentMap","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>reset current map metadata, <code>RESET_CURRENT_MAP</code></p>","memberof":"actions.maps","returns":[{"type":{"names":["action"]},"description":"<p>of type <code>RESET_CURRENT_MAP</code></p>"}],"name":"resetCurrentMap","longname":"actions.maps.resetCurrentMap","kind":"function","scope":"static","params":[],"$longname":"actions.maps.resetCurrentMap"},{"comment":"/**\n * resets the updating status for a resource\n * @memberof actions.maps\n * @param {number} resourceId the id of the resource\n */","meta":{"range":[8837,8944],"filename":"maps.js","lineno":311,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006474","name":"resetUpdating","type":"FunctionDeclaration","paramnames":["resourceId"]}},"description":"<p>resets the updating status for a resource</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"resourceId"}],"name":"resetUpdating","longname":"actions.maps.resetUpdating","kind":"function","scope":"static","$longname":"actions.maps.resetUpdating"},{"comment":"/**\n * Save all the metadata and thubnail, if needed.\n * @memberof actions.maps\n * @param  {object} map               the map object\n * @param  {object} metadataMap       metadata for the map\n * @param  {string} nameThumbnail     the name for the thubnail\n * @param  {string} dataThumbnail     the data to save for the thubnail\n * @param  {string} categoryThumbnail the category for the thumbnails\n * @param  {number} resourceIdMap     the id of the map\n * @param  {object} [options]           options for the request\n * @return {thunk}                   perform the update and dispatch proper actions\n */","meta":{"range":[18345,19478],"filename":"maps.js","lineno":558,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007101","name":"saveAll","type":"FunctionDeclaration","paramnames":["map","metadataMap","nameThumbnail","dataThumbnail","categoryThumbnail","resourceIdMap","options"]},"vars":{"":null}},"description":"<p>Save all the metadata and thubnail, if needed.</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>the map object</p>","name":"map"},{"type":{"names":["object"]},"description":"<p>metadata for the map</p>","name":"metadataMap"},{"type":{"names":["string"]},"description":"<p>the name for the thubnail</p>","name":"nameThumbnail"},{"type":{"names":["string"]},"description":"<p>the data to save for the thubnail</p>","name":"dataThumbnail"},{"type":{"names":["string"]},"description":"<p>the category for the thumbnails</p>","name":"categoryThumbnail"},{"type":{"names":["number"]},"description":"<p>the id of the map</p>","name":"resourceIdMap"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>perform the update and dispatch proper actions</p>"}],"name":"saveAll","longname":"actions.maps.saveAll","kind":"function","scope":"static","$longname":"actions.maps.saveAll"},{"comment":"/**\n * Performed when a map has been saved\n * @memberof actions.maps\n * @param  {object} map        The map\n * @param  {number} resourceId the identifier of the new map\n * @return {action}            type `SAVE_MAP`, with the arguments as they are named\n */","meta":{"range":[8148,8261],"filename":"maps.js","lineno":286,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006451","name":"saveMap","type":"FunctionDeclaration","paramnames":["map","resourceId"]}},"description":"<p>Performed when a map has been saved</p>","memberof":"actions.maps","params":[{"type":{"names":["object"]},"description":"<p>The map</p>","name":"map"},{"type":{"names":["number"]},"description":"<p>the identifier of the new map</p>","name":"resourceId"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>SAVE_MAP</code>, with the arguments as they are named</p>"}],"name":"saveMap","longname":"actions.maps.saveMap","kind":"function","scope":"static","$longname":"actions.maps.saveMap"},{"comment":"/**\n * When an error saving the thumbnail occurred\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource\n * @param  {object} error      the error occurred\n * @return {action}            type `THUMBNAIL_ERROR`, with the arguments as they are named\n */","meta":{"range":[7467,7598],"filename":"maps.js","lineno":258,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006428","name":"thumbnailError","type":"FunctionDeclaration","paramnames":["resourceId","error"]}},"description":"<p>When an error saving the thumbnail occurred</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>the error occurred</p>","name":"error"}],"returns":[{"type":{"names":["action"]},"description":"<p>type <code>THUMBNAIL_ERROR</code>, with the arguments as they are named</p>"}],"name":"thumbnailError","longname":"actions.maps.thumbnailError","kind":"function","scope":"static","$longname":"actions.maps.thumbnailError"},{"comment":"/**\n * updates an attribute for a given map\n * @memberof actions.maps\n * @param  {number} resourceId the id of the resource\n * @param  {string} name       the name of the attribute\n * @param  {string} value      the value of the attribute\n * @param  {string} [type]     the type of the attribute\n * @param  {object} [options]  options for the request\n * @return {thunk}  performs the update and dispatch attributeUpdated or thumbnailError\n */","meta":{"range":[14661,15033],"filename":"maps.js","lineno":479,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006842","name":"updateAttribute","type":"FunctionDeclaration","paramnames":["resourceId","name","value","type","options"]},"vars":{"":null}},"description":"<p>updates an attribute for a given map</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the resource</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>the name of the attribute</p>","name":"name"},{"type":{"names":["string"]},"description":"<p>the value of the attribute</p>","name":"value"},{"type":{"names":["string"]},"optional":true,"description":"<p>the type of the attribute</p>","name":"type"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>performs the update and dispatch attributeUpdated or thumbnailError</p>"}],"name":"updateAttribute","longname":"actions.maps.updateAttribute","kind":"function","scope":"static","$longname":"actions.maps.updateAttribute"},{"comment":"/**\n * updates a map\n * @memberof actions.maps\n * @param  {number} resourceId the id of the map to update\n * @param  {object} content    the new content\n * @param  {object} [options]   options for the request\n * @return {thunk}  dispatches mapUpdating or loadError\n */","meta":{"range":[11938,12334],"filename":"maps.js","lineno":412,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006679","name":"updateMap","type":"FunctionDeclaration","paramnames":["resourceId","content","options"]},"vars":{"":null}},"description":"<p>updates a map</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the map to update</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>the new content</p>","name":"content"},{"type":{"names":["object"]},"optional":true,"description":"<p>options for the request</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>dispatches mapUpdating or loadError</p>"}],"name":"updateMap","longname":"actions.maps.updateMap","kind":"function","scope":"static","$longname":"actions.maps.updateMap"},{"comment":"/**\n * updates metadata for a map\n * @memberof actions.maps\n * @param  {number} resourceId     the id of the map to updates\n * @param  {string} newName        the new name for the map\n * @param  {string} newDescription the new description for the map\n * @param  {action} [onReset]        an action to dispatch after save, if present, to reset the current map\n * @param  {object} [options]        the request options, if any\n * @return {thunk}  updates metadata and diepatches mapMetadataUpdated, onReset action (argument), resetCurrentMap or thumbnailError\n */","meta":{"range":[12897,13417],"filename":"maps.js","lineno":433,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006721","name":"updateMapMetadata","type":"FunctionDeclaration","paramnames":["resourceId","newName","newDescription","onReset","options"]},"vars":{"":null}},"description":"<p>updates metadata for a map</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the id of the map to updates</p>","name":"resourceId"},{"type":{"names":["string"]},"description":"<p>the new name for the map</p>","name":"newName"},{"type":{"names":["string"]},"description":"<p>the new description for the map</p>","name":"newDescription"},{"type":{"names":["action"]},"optional":true,"description":"<p>an action to dispatch after save, if present, to reset the current map</p>","name":"onReset"},{"type":{"names":["object"]},"optional":true,"description":"<p>the request options, if any</p>","name":"options"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>updates metadata and diepatches mapMetadataUpdated, onReset action (argument), resetCurrentMap or thumbnailError</p>"}],"name":"updateMapMetadata","longname":"actions.maps.updateMapMetadata","kind":"function","scope":"static","$longname":"actions.maps.updateMapMetadata"},{"comment":"/**\n * updates permissions for the given map.\n * @memberof actions.maps\n * @param  {number} resourceId    the identifier of the map\n * @param  {object} securityRules the new securityRules\n * @return {thunk} performs updateResourcePermissions and dispatch permissionsUpdated or thumbnailError\n */","meta":{"range":[13715,14216],"filename":"maps.js","lineno":454,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100006781","name":"updatePermissions","type":"FunctionDeclaration","paramnames":["resourceId","securityRules"]},"vars":{"":null}},"description":"<p>updates permissions for the given map.</p>","memberof":"actions.maps","params":[{"type":{"names":["number"]},"description":"<p>the identifier of the map</p>","name":"resourceId"},{"type":{"names":["object"]},"description":"<p>the new securityRules</p>","name":"securityRules"}],"returns":[{"type":{"names":["thunk"]},"description":"<p>performs updateResourcePermissions and dispatch permissionsUpdated or thumbnailError</p>"}],"name":"updatePermissions","longname":"actions.maps.updatePermissions","kind":"function","scope":"static","$longname":"actions.maps.updatePermissions"},{"comment":"/**\n * changes the map type\n * @memberof actions.maptype\n * @param  {string} mapType the mapType.\n * @return {action}         the action of type `MAP_TYPE_CHANGED` with mapType\n */","meta":{"range":[431,534],"filename":"maptype.js","lineno":17,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007652","name":"changeMapType","type":"FunctionDeclaration","paramnames":["mapType"]}},"description":"<p>changes the map type</p>","memberof":"actions.maptype","params":[{"type":{"names":["string"]},"description":"<p>the mapType.</p>","name":"mapType"}],"returns":[{"type":{"names":["action"]},"description":"<p>the action of type <code>MAP_TYPE_CHANGED</code> with mapType</p>"}],"name":"changeMapType","longname":"actions.maptype.changeMapType","kind":"function","scope":"static","$longname":"actions.maptype.changeMapType"},{"comment":"/**\n * Clear all the notifications\n * @memberof actions.notifications\n * @returns {object}     action of type `CLEAR_NOTIFICATIONS`\n */","meta":{"range":[2581,2655],"filename":"notifications.js","lineno":87,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007757","name":"clear","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>Clear all the notifications</p>","memberof":"actions.notifications","returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>CLEAR_NOTIFICATIONS</code></p>"}],"name":"clear","longname":"actions.notifications.clear","kind":"function","scope":"static","params":[],"$longname":"actions.notifications.clear"},{"comment":"/**\n * Dispatch a custom action on callback\n * @memberof actions.notifications\n * @returns {object}     action\n */","meta":{"range":[2772,2826],"filename":"notifications.js","lineno":98,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007764","name":"dispatchAction","type":"FunctionDeclaration","paramnames":["action"]}},"description":"<p>Dispatch a custom action on callback</p>","memberof":"actions.notifications","returns":[{"type":{"names":["object"]},"description":"<p>action</p>"}],"name":"dispatchAction","longname":"actions.notifications.dispatchAction","kind":"function","scope":"static","params":[],"$longname":"actions.notifications.dispatchAction"},{"comment":"/**\n * Show a error notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[1848,1904],"filename":"notifications.js","lineno":58,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007730","name":"error","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a error notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"error","longname":"actions.notifications.error","kind":"function","scope":"static","$longname":"actions.notifications.error"},{"comment":"/**\n * Hides (removes) the notification with the id provided\n * @memberof actions.notifications\n * @param  {string|number} uid the identifier\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[1279,1363],"filename":"notifications.js","lineno":36,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007711","name":"hide","type":"FunctionDeclaration","paramnames":["uid"]}},"description":"<p>Hides (removes) the notification with the id provided</p>","memberof":"actions.notifications","params":[{"type":{"names":["string","number"]},"description":"<p>the identifier</p>","name":"uid"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"hide","longname":"actions.notifications.hide","kind":"function","scope":"static","$longname":"actions.notifications.hide"},{"comment":"/**\n * Show a info notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[2389,2443],"filename":"notifications.js","lineno":78,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007748","name":"info","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a info notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"info","longname":"actions.notifications.info","kind":"function","scope":"static","$longname":"actions.notifications.info"},{"comment":"/**\n * Show a notification\n * @memberof actions.notifications\n * @param  {Object} [opts={}]         the notification configuration. [Here the compete ref](https://github.com/igorprado/react-notification-system#creating-a-notification)\n * ```\n *  {\n *    title: \"title.translation.path\" // or the message directly\n *    message: \"message.translation.path\" // or the message directly\n *    uid: \"1234\" // a unique identifier (if not present, current time is used),\n *    action: {\n *      label:  \"label.translation.path\" // or the message directly\n *    }\n *  }\n * ```\n * @param  {String} [level='success'] The level of the notification. (one of \"success\"|\"warning\"|\"info\"|\"error\")\n * @return {object}                   action of type `SHOW_NOTIFICATION`\n */","meta":{"range":[903,1071],"filename":"notifications.js","lineno":21,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007685","name":"show","type":"FunctionDeclaration","paramnames":["opts","level"]}},"description":"<p>Show a notification</p>","memberof":"actions.notifications","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"<p>the notification configuration. <a href=\"https://github.com/igorprado/react-notification-system#creating-a-notification\">Here the compete ref</a></p>\n<pre class=\"prettyprint source\"><code> {\n   title: &quot;title.translation.path&quot; // or the message directly\n   message: &quot;message.translation.path&quot; // or the message directly\n   uid: &quot;1234&quot; // a unique identifier (if not present, current time is used),\n   action: {\n     label:  &quot;label.translation.path&quot; // or the message directly\n   }\n }</code></pre>","name":"opts"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'success'","description":"<p>The level of the notification. (one of &quot;success&quot;|&quot;warning&quot;|&quot;info&quot;|&quot;error&quot;)</p>","name":"level"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>SHOW_NOTIFICATION</code></p>"}],"name":"show","longname":"actions.notifications.show","kind":"function","scope":"static","$longname":"actions.notifications.show"},{"comment":"/**\n * Show a success notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[1577,1637],"filename":"notifications.js","lineno":49,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007721","name":"success","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a success notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"success","longname":"actions.notifications.success","kind":"function","scope":"static","$longname":"actions.notifications.success"},{"comment":"/**\n * Show a warning notification. {@see actions.notifications.show}\n * @memberof actions.notifications\n * @param  {object} opts notification opts\n * @returns {object}     action of type `HIDE_NOTIFICATION`\n */","meta":{"range":[2118,2178],"filename":"notifications.js","lineno":68,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007739","name":"warning","type":"FunctionDeclaration","paramnames":["opts"]}},"description":"<p>Show a warning notification. {@see actions.notifications.show}</p>","memberof":"actions.notifications","params":[{"type":{"names":["object"]},"description":"<p>notification opts</p>","name":"opts"}],"returns":[{"type":{"names":["object"]},"description":"<p>action of type <code>HIDE_NOTIFICATION</code></p>"}],"name":"warning","longname":"actions.notifications.warning","kind":"function","scope":"static","$longname":"actions.notifications.warning"},{"comment":"/**\n * add a marker to the search result layer\n * @memberof actions.search\n * @param {object} itemPosition\n */","meta":{"range":[2561,2733],"filename":"search.js","lineno":96,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007913","name":"addMarker","type":"FunctionDeclaration","paramnames":["itemPosition","itemText"]}},"description":"<p>add a marker to the search result layer</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"name":"itemPosition"}],"name":"addMarker","longname":"actions.search.addMarker","kind":"function","scope":"static","$longname":"actions.search.addMarker"},{"comment":"/**\n * remove an item selected ()\n * @memberof actions.search\n * @param {object} item the item to remove\n */","meta":{"range":[4060,4169],"filename":"search.js","lineno":155,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007974","name":"cancelSelectedItem","type":"FunctionDeclaration","paramnames":["item"]}},"description":"<p>remove an item selected ()</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>the item to remove</p>","name":"item"}],"name":"cancelSelectedItem","longname":"actions.search.cancelSelectedItem","kind":"function","scope":"static","$longname":"actions.search.cancelSelectedItem"},{"comment":"/**\n * reset the search text and clear results\n * @memberof actions.search\n */","meta":{"range":[2370,2448],"filename":"search.js","lineno":85,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007906","name":"resetSearch","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>reset the search text and clear results</p>","memberof":"actions.search","name":"resetSearch","longname":"actions.search.resetSearch","kind":"function","scope":"static","params":[],"$longname":"actions.search.resetSearch"},{"comment":"/**\n * clear the results\n * @memberof actions.search\n */","meta":{"range":[2202,2289],"filename":"search.js","lineno":75,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007899","name":"resultsPurge","type":"FunctionDeclaration","paramnames":[]}},"description":"<p>clear the results</p>","memberof":"actions.search","name":"resultsPurge","longname":"actions.search.resultsPurge","kind":"function","scope":"static","params":[],"$longname":"actions.search.resultsPurge"},{"comment":"/**\n * an error occurred during text searchText\n * @memberof actions.search\n * @param error the error\n */","meta":{"range":[2039,2143],"filename":"search.js","lineno":64,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007889","name":"searchResultError","type":"FunctionDeclaration","paramnames":["error"]}},"description":"<p>an error occurred during text searchText</p>","memberof":"actions.search","params":[{"description":"<p>the error</p>","name":"error"}],"name":"searchResultError","longname":"actions.search.searchResultError","kind":"function","scope":"static","$longname":"actions.search.searchResultError"},{"comment":"/**\n * updates the results of the search result loaded\n * @memberof actions.search\n * @param {geojsonFeature[]} results array of search results\n * @param {boolean} append [false] tells to append the result to existing ones or not\n * @param {object[]} servies services intrested to use for the next search\n */","meta":{"range":[1296,1491],"filename":"search.js","lineno":28,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007851","name":"searchResultLoaded","type":"FunctionDeclaration","paramnames":["results","append","services"]}},"description":"<p>updates the results of the search result loaded</p>","memberof":"actions.search","params":[{"type":{"names":["Array.<geojsonFeature>"]},"description":"<p>array of search results</p>","name":"results"},{"type":{"names":["boolean"]},"description":"<p>[false] tells to append the result to existing ones or not</p>","name":"append","defaultvalue":false},{"type":{"names":["Array.<object>"]},"description":"<p>services intrested to use for the next search</p>","name":"servies"}],"name":"searchResultLoaded","longname":"actions.search.searchResultLoaded","kind":"function","scope":"static","$longname":"actions.search.searchResultLoaded"},{"comment":"/**\n * updates the search text\n * @memberof actions.search\n * @param {string} text the new text\n */","meta":{"range":[1592,1712],"filename":"search.js","lineno":41,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007869","name":"searchTextChanged","type":"FunctionDeclaration","paramnames":["text"]}},"description":"<p>updates the search text</p>","memberof":"actions.search","params":[{"type":{"names":["string"]},"description":"<p>the new text</p>","name":"text"}],"name":"searchTextChanged","longname":"actions.search.searchTextChanged","kind":"function","scope":"static","$longname":"actions.search.searchTextChanged"},{"comment":"/**\n * trigger search text loading\n * @memberof actions.search\n * @param {boolean} loading boolean flag\n */","meta":{"range":[1821,1931],"filename":"search.js","lineno":52,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007879","name":"searchTextLoading","type":"FunctionDeclaration","paramnames":["loading"]}},"description":"<p>trigger search text loading</p>","memberof":"actions.search","params":[{"type":{"names":["boolean"]},"description":"<p>boolean flag</p>","name":"loading"}],"name":"searchTextLoading","longname":"actions.search.searchTextLoading","kind":"function","scope":"static","$longname":"actions.search.searchTextLoading"},{"comment":"/**\n * Configures the search tool to perform sub-service queries. It will store the\n * selected item and configure the new nested services.\n * @memberof actions.search\n * @param {object[]} services the of the nested services\n * @param {object[]} items the selected items\n * @param {object[]} searchText the new search text\n */","meta":{"range":[3764,3949],"filename":"search.js","lineno":141,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007958","name":"selectNestedService","type":"FunctionDeclaration","paramnames":["services","items","searchText"]}},"description":"<p>Configures the search tool to perform sub-service queries. It will store the\nselected item and configure the new nested services.</p>","memberof":"actions.search","params":[{"type":{"names":["Array.<object>"]},"description":"<p>the of the nested services</p>","name":"services"},{"type":{"names":["Array.<object>"]},"description":"<p>the selected items</p>","name":"items"},{"type":{"names":["Array.<object>"]},"description":"<p>the new search text</p>","name":"searchText"}],"name":"selectNestedService","longname":"actions.search.selectNestedService","kind":"function","scope":"static","$longname":"actions.search.selectNestedService"},{"comment":"/**\n * Trigger when an item is selected from the search results\n * @memberof actions.search\n * @param {object} item the selected item\n * @param {object} mapConfig the current map configuration (with size, projection...)\n */","meta":{"range":[3295,3435],"filename":"search.js","lineno":124,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007945","name":"selectSearchItem","type":"FunctionDeclaration","paramnames":["item","mapConfig"]}},"description":"<p>Trigger when an item is selected from the search results</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>the selected item</p>","name":"item"},{"type":{"names":["object"]},"description":"<p>the current map configuration (with size, projection...)</p>","name":"mapConfig"}],"name":"selectSearchItem","longname":"actions.search.selectSearchItem","kind":"function","scope":"static","$longname":"actions.search.selectSearchItem"},{"comment":"/**\n * Highlights the given feature\n * @memberof actions.search\n * @param {object} feature the feature to highlight\n */","meta":{"range":[4291,4441],"filename":"search.js","lineno":167,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007984","name":"setHighlightedFeature","type":"FunctionDeclaration","paramnames":["feature"]}},"description":"<p>Highlights the given feature</p>","memberof":"actions.search","params":[{"type":{"names":["object"]},"description":"<p>the feature to highlight</p>","name":"feature"}],"name":"setHighlightedFeature","longname":"actions.search.setHighlightedFeature","kind":"function","scope":"static","$longname":"actions.search.setHighlightedFeature"},{"comment":"/**\n * perform a text search\n * @memberof actions.search\n * @param {string} searchText the text to search\n * @param {object} options [{}] the search options. Contain the services\n */","meta":{"range":[2918,3069],"filename":"search.js","lineno":110,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/actions","code":{"id":"astnode100007926","name":"textSearch","type":"FunctionDeclaration","paramnames":["searchText",""]}},"description":"<p>perform a text search</p>","memberof":"actions.search","params":[{"type":{"names":["string"]},"description":"<p>the text to search</p>","name":"searchText"},{"type":{"names":["object"]},"description":"<p>[{}] the search options. Contain the services</p>","name":"options"}],"name":"textSearch","longname":"actions.search.textSearch","kind":"function","scope":"static","$longname":"actions.search.textSearch"},{"comment":"/**\n * React components\n * @see {@link https://facebook.github.io/react/docs/react-component.html|the React documentation} for details\n * @name components\n *\n */","meta":{"range":[0,161],"filename":"index.jsdoc","lineno":1,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components","code":{}},"description":"<p>React components</p>","see":["{@link https://facebook.github.io/react/docs/react-component.html|the React documentation} for details"],"name":"components","longname":"components","kind":"member","scope":"global","$longname":"components"},{"comment":"/**\n * Toggle button for fullscreen. Wraps {@link #components.buttons.ToggleButton} with some defaults\n * @memberof components.buttons\n * @class\n * @prop {string} [id] an id for the html component\n * @prop {object} [btnConfig] the configuration to pass to the bootstrap button\n * @prop {object} [options] the options to send when toggle is clicked\n * @prop {string|element} [text] the text to disaplay\n * @prop {string|element} [help] the help text\n * @prop {string} glyphicon the icon name\n * @prop {bool} active the status of the button\n * @prop {function} onClick. The method to call when clicked. the method will return as parameter the toggled `pressed` prop and the `options` object\n * @prop {node} [activeTooltip] the tooltip to use on mouse hover\n * @prop {node} [notActiveTooltip] the tooltip to use on mouse hover when the button is active\n * @prop {string} [tooltipPlace] positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'\n * @prop {object} css style object for the component\n * @prop {btnType} [btnType] one of 'normal', 'image'\n * @prop {string} image if type is 'image', the src of the image\n * @prop {string} pressedStyle the bootstrap style for pressedStyle\n * @prop {string} defaultStyle the bootstrap style when not pressed\n *\n */","meta":{"range":[1680,3502],"filename":"FullScreenButton.jsx","lineno":38,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/buttons","code":{"id":"astnode100000034","name":"FullScreenButton","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Toggle button for fullscreen. Wraps {@link #components.buttons.ToggleButton} with some defaults</p>","memberof":"components.buttons","kind":"class","properties":[{"type":{"names":["bool"]},"description":"<p>the status of the button</p>","name":"active"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover</p>","name":"activeTooltip"},{"type":{"names":["object"]},"optional":true,"description":"<p>the configuration to pass to the bootstrap button</p>","name":"btnConfig"},{"type":{"names":["btnType"]},"optional":true,"description":"<p>one of 'normal', 'image'</p>","name":"btnType"},{"type":{"names":["object"]},"description":"<p>style object for the component</p>","name":"css"},{"type":{"names":["string"]},"description":"<p>the bootstrap style when not pressed</p>","name":"defaultStyle"},{"type":{"names":["string"]},"description":"<p>the icon name</p>","name":"glyphicon"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the help text</p>","name":"help"},{"type":{"names":["string"]},"optional":true,"description":"<p>an id for the html component</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>if type is 'image', the src of the image</p>","name":"image"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover when the button is active</p>","name":"notActiveTooltip"},{"type":{"names":["function"]},"description":"<p>The method to call when clicked. the method will return as parameter the toggled <code>pressed</code> prop and the <code>options</code> object</p>","name":"onClick."},{"type":{"names":["object"]},"optional":true,"description":"<p>the options to send when toggle is clicked</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>the bootstrap style for pressedStyle</p>","name":"pressedStyle"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the text to disaplay</p>","name":"text"},{"type":{"names":["string"]},"optional":true,"description":"<p>positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'</p>","name":"tooltipPlace"}],"name":"FullScreenButton","longname":"components.buttons.FullScreenButton","scope":"static","$longname":"components.buttons.FullScreenButton"},{"comment":"/**\n * Toggle button for 3d. Wraps {@link #components.buttons.ToggleButton} with some defaults\n * @memberof components.buttons\n * @class\n * @prop {string} [id] an id for the html component\n * @prop {object} [btnConfig] the configuration to pass to the bootstrap button\n * @prop {object} [options] the options to send when toggle is clicked\n * @prop {string|element} [text] the text to disaplay\n * @prop {string|element} [help] the help text\n * @prop {string} glyphicon the icon name\n * @prop {bool} active the status of the button\n * @prop {function} onClick. The method to call when clicked. the method will return as parameter the toggled `pressed` prop and the `options` object\n * @prop {node} [activeTooltip] the tooltip to use on mouse hover\n * @prop {node} [notActiveTooltip] the tooltip to use on mouse hover when the button is active\n * @prop {string} [tooltipPlace] positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'\n * @prop {object} css style object for the component\n * @prop {btnType} [btnType] one of 'normal', 'image'\n * @prop {string} image if type is 'image', the src of the image\n * @prop {string} pressedStyle the bootstrap style for pressedStyle\n * @prop {string} defaultStyle the bootstrap style when not pressed\n *\n */","meta":{"range":[1672,3509],"filename":"GlobeViewSwitcherButton.jsx","lineno":38,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/buttons","code":{"id":"astnode100000279","name":"GlobeViewSwitcherButton","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Toggle button for 3d. Wraps {@link #components.buttons.ToggleButton} with some defaults</p>","memberof":"components.buttons","kind":"class","properties":[{"type":{"names":["bool"]},"description":"<p>the status of the button</p>","name":"active"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover</p>","name":"activeTooltip"},{"type":{"names":["object"]},"optional":true,"description":"<p>the configuration to pass to the bootstrap button</p>","name":"btnConfig"},{"type":{"names":["btnType"]},"optional":true,"description":"<p>one of 'normal', 'image'</p>","name":"btnType"},{"type":{"names":["object"]},"description":"<p>style object for the component</p>","name":"css"},{"type":{"names":["string"]},"description":"<p>the bootstrap style when not pressed</p>","name":"defaultStyle"},{"type":{"names":["string"]},"description":"<p>the icon name</p>","name":"glyphicon"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the help text</p>","name":"help"},{"type":{"names":["string"]},"optional":true,"description":"<p>an id for the html component</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>if type is 'image', the src of the image</p>","name":"image"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover when the button is active</p>","name":"notActiveTooltip"},{"type":{"names":["function"]},"description":"<p>The method to call when clicked. the method will return as parameter the toggled <code>pressed</code> prop and the <code>options</code> object</p>","name":"onClick."},{"type":{"names":["object"]},"optional":true,"description":"<p>the options to send when toggle is clicked</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>the bootstrap style for pressedStyle</p>","name":"pressedStyle"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the text to disaplay</p>","name":"text"},{"type":{"names":["string"]},"optional":true,"description":"<p>positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'</p>","name":"tooltipPlace"}],"name":"GlobeViewSwitcherButton","longname":"components.buttons.GlobeViewSwitcherButton","scope":"static","$longname":"components.buttons.GlobeViewSwitcherButton"},{"comment":"/**\n * Button for Go to Full MapStore2.\n * @prop {string} cfg.glyph the glyph icon for the button\n * @prop {string} cfg.tooltip messageId of the tooltip to use\n * @prop {string} cfg.urlRegex. A regex to parse the current location.href. This regex must match if the originalUrl is not defined.\n * @prop {string} cfg.urlReplaceString. The template to create the url link. Uses the `urlRegex` groups to create the final URL\n * @memberof components.buttons\n * @class\n */","meta":{"range":[970,2644],"filename":"GoFullButton.jsx","lineno":27,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/buttons","code":{"id":"astnode100000534","name":"GoFullButton","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Button for Go to Full MapStore2.</p>","properties":[{"type":{"names":["string"]},"description":"<p>the glyph icon for the button</p>","name":"cfg.glyph"},{"type":{"names":["string"]},"description":"<p>messageId of the tooltip to use</p>","name":"cfg.tooltip"},{"type":{"names":["string"]},"description":"<p>A regex to parse the current location.href. This regex must match if the originalUrl is not defined.</p>","name":"cfg.urlRegex."},{"type":{"names":["string"]},"description":"<p>The template to create the url link. Uses the <code>urlRegex</code> groups to create the final URL</p>","name":"cfg.urlReplaceString."}],"memberof":"components.buttons","kind":"class","name":"GoFullButton","longname":"components.buttons.GoFullButton","scope":"static","$longname":"components.buttons.GoFullButton"},{"comment":"/**\n * Toggle button with tooltip and icons or image support.\n * @memberof components.buttons\n * @class\n * @prop {string} [id] an id for the html component\n * @prop {object} [btnConfig] the configuration to pass to the bootstrap button\n * @prop {object} [options] the options to send when toggle is clicked\n * @prop {string|element} [text] the text to disaplay\n * @prop {string|element} [help] the help text\n * @prop {string} glyphicon the icon name\n * @prop {bool} pressed the status of the button\n * @prop {function} onClick. The method to call when clicked. the method will return as parameter the toggled `pressed` prop and the `options` object\n * @prop {node} [tooltip] the tooltip to use on mouse hover\n * @prop {string} [tooltipPlace] positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'\n * @prop {object} css style object for the component\n * @prop {btnType} [btnType] one of 'normal', 'image'\n * @prop {string} image if type is 'image', the src of the image\n * @prop {string} pressedStyle the bootstrap style for pressedStyle\n * @prop {string} defaultStyle the bootstrap style when not pressed\n *\n */","meta":{"range":[1556,3925],"filename":"ToggleButton.jsx","lineno":38,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/buttons","code":{"id":"astnode100002094","name":"ToggleButton","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Toggle button with tooltip and icons or image support.</p>","memberof":"components.buttons","kind":"class","properties":[{"type":{"names":["object"]},"optional":true,"description":"<p>the configuration to pass to the bootstrap button</p>","name":"btnConfig"},{"type":{"names":["btnType"]},"optional":true,"description":"<p>one of 'normal', 'image'</p>","name":"btnType"},{"type":{"names":["object"]},"description":"<p>style object for the component</p>","name":"css"},{"type":{"names":["string"]},"description":"<p>the bootstrap style when not pressed</p>","name":"defaultStyle"},{"type":{"names":["string"]},"description":"<p>the icon name</p>","name":"glyphicon"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the help text</p>","name":"help"},{"type":{"names":["string"]},"optional":true,"description":"<p>an id for the html component</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>if type is 'image', the src of the image</p>","name":"image"},{"type":{"names":["function"]},"description":"<p>The method to call when clicked. the method will return as parameter the toggled <code>pressed</code> prop and the <code>options</code> object</p>","name":"onClick."},{"type":{"names":["object"]},"optional":true,"description":"<p>the options to send when toggle is clicked</p>","name":"options"},{"type":{"names":["bool"]},"description":"<p>the status of the button</p>","name":"pressed"},{"type":{"names":["string"]},"description":"<p>the bootstrap style for pressedStyle</p>","name":"pressedStyle"},{"type":{"names":["string","element"]},"optional":true,"description":"<p>the text to disaplay</p>","name":"text"},{"type":{"names":["node"]},"optional":true,"description":"<p>the tooltip to use on mouse hover</p>","name":"tooltip"},{"type":{"names":["string"]},"optional":true,"description":"<p>positon of the tooltip, one of: 'top', 'right', 'bottom', 'left'</p>","name":"tooltipPlace"}],"name":"ToggleButton","longname":"components.buttons.ToggleButton","scope":"static","$longname":"components.buttons.ToggleButton"},{"comment":"/**\n * Component that allows to draw and edit geometries as (Point, LineString, Polygon, Rectangle, Circle, MultiGeometries)\n * @class DrawSupport\n * @memberof components.map\n * @prop {object} map the map usedto drawing on\n * @prop {string} drawOwner the owner of the drawn features\n * @prop {string} drawStatus the status that allows to do different things. see componentWillReceiveProps method\n * @prop {string} drawMethod the method used to draw different geometries. can be Circle,BBOX, or a geomType from Point to MultiPolygons\n * @prop {object} options it contains the params used to enable the interactions or simply stop the DrawSupport after a ft is drawn\n * @prop {object[]} features an array of geojson features used as a starting point for drawing new shapes or edit them\n * @prop {func} onChangeDrawingStatus method use to change the status of the DrawSupport\n * @prop {func} onGeometryChanged when a features is edited or drawn this methos is fired\n * @prop {func} onDrawStopped action fired if the DrawSupport stops\n * @prop {func} onEndDrawing action fired when a shape is drawn\n * @prop {object} messages the localized messages that can be used to customize the tooltip text\n*/","meta":{"range":[745,1939],"filename":"DrawSupport.jsx","lineno":30,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/map/leaflet","code":{}},"description":"<p>Component that allows to draw and edit geometries as (Point, LineString, Polygon, Rectangle, Circle, MultiGeometries)</p>","kind":"class","name":"DrawSupport","memberof":"components.map","properties":[{"type":{"names":["string"]},"description":"<p>the method used to draw different geometries. can be Circle,BBOX, or a geomType from Point to MultiPolygons</p>","name":"drawMethod"},{"type":{"names":["string"]},"description":"<p>the owner of the drawn features</p>","name":"drawOwner"},{"type":{"names":["string"]},"description":"<p>the status that allows to do different things. see componentWillReceiveProps method</p>","name":"drawStatus"},{"type":{"names":["Array.<object>"]},"description":"<p>an array of geojson features used as a starting point for drawing new shapes or edit them</p>","name":"features"},{"type":{"names":["object"]},"description":"<p>the map usedto drawing on</p>","name":"map"},{"type":{"names":["object"]},"description":"<p>the localized messages that can be used to customize the tooltip text</p>","name":"messages"},{"type":{"names":["func"]},"description":"<p>method use to change the status of the DrawSupport</p>","name":"onChangeDrawingStatus"},{"type":{"names":["func"]},"description":"<p>action fired if the DrawSupport stops</p>","name":"onDrawStopped"},{"type":{"names":["func"]},"description":"<p>action fired when a shape is drawn</p>","name":"onEndDrawing"},{"type":{"names":["func"]},"description":"<p>when a features is edited or drawn this methos is fired</p>","name":"onGeometryChanged"},{"type":{"names":["object"]},"description":"<p>it contains the params used to enable the interactions or simply stop the DrawSupport after a ft is drawn</p>","name":"options"}],"scope":"static","longname":"components.map.DrawSupport","$longname":"components.map.DrawSupport","$members":[{"comment":"/**\n     * Inside this lyfecycle method the status is checked to manipulate the behaviour of the DrawSupport.<br>\n     * Here is the list of all status:<br>\n     * create allows to create features<br>\n     * start allows to start drawing features<br>\n     * drawOrEdit allows to start drawing or editing the passed features or both<br>\n     * stop allows to stop drawing features<br>\n     * replace allows to replace all the features drawn by Drawsupport with new ones<br>\n     * clean it cleans the drawn features and stop the drawsupport\n     * @memberof components.map.DrawSupport\n     * @function componentWillReceiveProps\n    */","meta":{"range":[2841,3474],"filename":"DrawSupport.jsx","lineno":78,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/map/leaflet","code":{}},"description":"<p>Inside this lyfecycle method the status is checked to manipulate the behaviour of the DrawSupport.<br>\nHere is the list of all status:<br>\ncreate allows to create features<br>\nstart allows to start drawing features<br>\ndrawOrEdit allows to start drawing or editing the passed features or both<br>\nstop allows to stop drawing features<br>\nreplace allows to replace all the features drawn by Drawsupport with new ones<br>\nclean it cleans the drawn features and stop the drawsupport</p>","memberof":"components.map.DrawSupport","kind":"function","name":"componentWillReceiveProps","scope":"static","longname":"components.map.DrawSupport.componentWillReceiveProps","$longname":"components.map.DrawSupport.componentWillReceiveProps"}]},{"comment":"/**\n * Search Bar component. With typeAhead events\n * @memberof components.mapControls.search\n * @class\n * @prop {string} className the class to assign to the components\n * @prop {function} onSearch callback on search event\n * @prop {function} onPurgeResults triggered when the user clear\n * @prop {function} onSearchTextChange triggered when the text changes\n * @prop {function} onCancelSelectedItem triggered when the user deletes the selected item (by hitting backspace) when text is empty\n * @prop {string} placeholder string to use as placeholder when text is empty\n * @prop {string} placeholderMsgId msgId for the placeholder. Used if placeholder is not defined\n * @prop {number} delay milliseconds after trigger onSearch if typeAhead is true\n * @prop {boolean} hideOnBlur if true, it triggers onPurgeResults on blur\n * @prop {boolean} typeAhead if true, onSearch is triggered when users change the search text, after `delay` milliseconds\n * @prop {number} blurResetDelay time to wait before to trigger onPurgeResults after blur event, if `hideOnBlur` is true\n * @prop {searchText} the text to display in the component\n * @prop {object[]} selectedItems the items selected. Must have `text` property to display\n * @prop {boolean} autoFocusOnSelect if true, the component gets focus when items are added, or deleted but some item is still selected. Useful for continue writing after selecting an item (with nested services for instance)\n * @prop {boolean} loading if true, shows the loading tool\n * @prop {object} error if not null, an error icon will be display\n * @prop {object} style css style to apply to the component\n * @prop {object} options to pass to the search event\n *\n */","meta":{"range":[2426,8720],"filename":"SearchBar.jsx","lineno":52,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/mapcontrols/search","code":{"id":"astnode100000850","name":"SearchBar","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Search Bar component. With typeAhead events</p>","memberof":"components.mapControls.search","kind":"class","properties":[{"type":{"names":["boolean"]},"description":"<p>if true, the component gets focus when items are added, or deleted but some item is still selected. Useful for continue writing after selecting an item (with nested services for instance)</p>","name":"autoFocusOnSelect"},{"type":{"names":["number"]},"description":"<p>time to wait before to trigger onPurgeResults after blur event, if <code>hideOnBlur</code> is true</p>","name":"blurResetDelay"},{"type":{"names":["string"]},"description":"<p>the class to assign to the components</p>","name":"className"},{"type":{"names":["number"]},"description":"<p>milliseconds after trigger onSearch if typeAhead is true</p>","name":"delay"},{"type":{"names":["object"]},"description":"<p>if not null, an error icon will be display</p>","name":"error"},{"type":{"names":["boolean"]},"description":"<p>if true, it triggers onPurgeResults on blur</p>","name":"hideOnBlur"},{"type":{"names":["boolean"]},"description":"<p>if true, shows the loading tool</p>","name":"loading"},{"type":{"names":["function"]},"description":"<p>triggered when the user deletes the selected item (by hitting backspace) when text is empty</p>","name":"onCancelSelectedItem"},{"type":{"names":["function"]},"description":"<p>triggered when the user clear</p>","name":"onPurgeResults"},{"type":{"names":["function"]},"description":"<p>callback on search event</p>","name":"onSearch"},{"type":{"names":["function"]},"description":"<p>triggered when the text changes</p>","name":"onSearchTextChange"},{"type":{"names":["object"]},"description":"<p>to pass to the search event</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>string to use as placeholder when text is empty</p>","name":"placeholder"},{"type":{"names":["string"]},"description":"<p>msgId for the placeholder. Used if placeholder is not defined</p>","name":"placeholderMsgId"},{"type":{"names":["Array.<object>"]},"description":"<p>the items selected. Must have <code>text</code> property to display</p>","name":"selectedItems"},{"type":{"names":["object"]},"description":"<p>css style to apply to the component</p>","name":"style"},{"type":{"names":["searchText"]},"description":"<p>text to display in the component</p>","name":"the"},{"type":{"names":["boolean"]},"description":"<p>if true, onSearch is triggered when users change the search text, after <code>delay</code> milliseconds</p>","name":"typeAhead"}],"name":"SearchBar","longname":"components.mapControls.search.SearchBar","scope":"static","$longname":"components.mapControls.search.SearchBar"},{"comment":"/**\n * Container for Notifications. Allows to display notifications by passing\n * them in the notification property\n * @class\n * @memberof components.notifications\n * @prop {object[]} notifications the notifications. Each element have this form\n * ```\n *  {\n *    title: \"title.translation.path\" // or the message directly\n *    message: \"message.translation.path\" // or the message directly\n *    uid: \"1234\" // a unique identifier (if not present, current time is used),\n *    action: {\n *      label:  \"label.translation.path\" // or the message directly\n *    }\n *  }\n * ```\n * @see https://github.com/igorprado/react-notification-system#creating-a-notification for othe options\n * @example\n * <NotificationContainer notifications={[{uid: 1, title: \"notification\", level: \"success\"}]} />;\n */","meta":{"range":[1193,3626],"filename":"NotificationContainer.jsx","lineno":34,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/notifications","code":{"id":"astnode100001746","name":"NotificationContainer","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Container for Notifications. Allows to display notifications by passing\nthem in the notification property</p>","kind":"class","memberof":"components.notifications","properties":[{"type":{"names":["Array.<object>"]},"description":"<p>the notifications. Each element have this form</p>\n<pre class=\"prettyprint source\"><code> {\n   title: &quot;title.translation.path&quot; // or the message directly\n   message: &quot;message.translation.path&quot; // or the message directly\n   uid: &quot;1234&quot; // a unique identifier (if not present, current time is used),\n   action: {\n     label:  &quot;label.translation.path&quot; // or the message directly\n   }\n }</code></pre>","name":"notifications"}],"see":["https://github.com/igorprado/react-notification-system#creating-a-notification for othe options"],"examples":["<NotificationContainer notifications={[{uid: 1, title: \"notification\", level: \"success\"}]} />;"],"name":"NotificationContainer","longname":"components.notifications.NotificationContainer","scope":"static","$longname":"components.notifications.NotificationContainer"},{"comment":"/**\n * Container for plugins. Get's the plugin definitions (`plugins`) and configuration (`pluginsConfig`)\n * to render the configured plugins.\n * The plugins to render will come from the `mode` entry of the `pluginsConfig`\n * @class\n * @memberof components.plugins\n * @prop {string} mode key of the pluginsConfig object to get the plugins to render\n * @prop {string} defaultMode mode to use if mode is not defined\n * @prop {object} params params of the current page, usually from react router. Used as state to get plugins descriptor if monitored state is not present.\n * @prop {object} plugins the Plugins definitions\n * @prop {object} pluginsConfig the configuration for the plugins. a map of [mode]: [{pluginCfg1}...]\n * @prop {object} pluginsState a piece of state to use. usually controls.\n * @prop {object} monitoredState the piece of state to monitor Used as state to get plugins descriptor.\n */","meta":{"range":[1316,5347],"filename":"PluginsContainer.jsx","lineno":31,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/plugins","code":{"id":"astnode100005328","name":"PluginsContainer","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Container for plugins. Get's the plugin definitions (<code>plugins</code>) and configuration (<code>pluginsConfig</code>)\nto render the configured plugins.\nThe plugins to render will come from the <code>mode</code> entry of the <code>pluginsConfig</code></p>","kind":"class","memberof":"components.plugins","properties":[{"type":{"names":["string"]},"description":"<p>mode to use if mode is not defined</p>","name":"defaultMode"},{"type":{"names":["string"]},"description":"<p>key of the pluginsConfig object to get the plugins to render</p>","name":"mode"},{"type":{"names":["object"]},"description":"<p>the piece of state to monitor Used as state to get plugins descriptor.</p>","name":"monitoredState"},{"type":{"names":["object"]},"description":"<p>params of the current page, usually from react router. Used as state to get plugins descriptor if monitored state is not present.</p>","name":"params"},{"type":{"names":["object"]},"description":"<p>the Plugins definitions</p>","name":"plugins"},{"type":{"names":["object"]},"description":"<p>the configuration for the plugins. a map of [mode]: [{pluginCfg1}...]</p>","name":"pluginsConfig"},{"type":{"names":["object"]},"description":"<p>a piece of state to use. usually controls.</p>","name":"pluginsState"}],"name":"PluginsContainer","longname":"components.plugins.PluginsContainer","scope":"static","$longname":"components.plugins.PluginsContainer"},{"comment":"/**\n * Combobox with remote autocomplete functionality.\n * @memberof components.query\n * @class\n * @prop {bool} [disabled] if the combobox should be disabled\n * @prop {object} [filterField] the filterField values\n * @prop {string} [label] the label of the combobox\n * @prop {number} [maxFeaturesWPS] the max number of features for any page\n * @prop {string} [nextPage] the icon for the next page tool\n * @prop {string} [prevPage] the icon for the prev page tool\n * @prop {function} [onUpdateField] updated the filterfield values in the state\n * @prop {bool} [paginated] if true it displays the pagination if there is more than one page\n * @prop {string} [textField] the key used for the labes corresponding to filterField.options[x].label\n * @prop {function} [toggleMenu] it toggles the combobox menu\n * @prop {string} [valueField] the key used for the values corresponding to filterField.options[x].value\n *\n */","meta":{"range":[1615,7552],"filename":"AutocompleteField.jsx","lineno":36,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/components/data/query","code":{"id":"astnode100002542","name":"AutocompleteField","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>Combobox with remote autocomplete functionality.</p>","memberof":"components.query","kind":"class","properties":[{"type":{"names":["bool"]},"optional":true,"description":"<p>if the combobox should be disabled</p>","name":"disabled"},{"type":{"names":["object"]},"optional":true,"description":"<p>the filterField values</p>","name":"filterField"},{"type":{"names":["string"]},"optional":true,"description":"<p>the label of the combobox</p>","name":"label"},{"type":{"names":["number"]},"optional":true,"description":"<p>the max number of features for any page</p>","name":"maxFeaturesWPS"},{"type":{"names":["string"]},"optional":true,"description":"<p>the icon for the next page tool</p>","name":"nextPage"},{"type":{"names":["function"]},"optional":true,"description":"<p>updated the filterfield values in the state</p>","name":"onUpdateField"},{"type":{"names":["bool"]},"optional":true,"description":"<p>if true it displays the pagination if there is more than one page</p>","name":"paginated"},{"type":{"names":["string"]},"optional":true,"description":"<p>the icon for the prev page tool</p>","name":"prevPage"},{"type":{"names":["string"]},"optional":true,"description":"<p>the key used for the labes corresponding to filterField.options[x].label</p>","name":"textField"},{"type":{"names":["function"]},"optional":true,"description":"<p>it toggles the combobox menu</p>","name":"toggleMenu"},{"type":{"names":["string"]},"optional":true,"description":"<p>the key used for the values corresponding to filterField.options[x].value</p>","name":"valueField"}],"name":"AutocompleteField","longname":"components.query.AutocompleteField","scope":"static","$longname":"components.query.AutocompleteField"},{"comment":"/**\n * redux-observable epics\n * @see {@link https://redux-observable.js.org/docs/basics/Epics.html|the redux-observable documentation} for details\n * @name epics\n */","meta":{"range":[0,166],"filename":"index.jsdoc","lineno":1,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>redux-observable epics</p>","see":["{@link https://redux-observable.js.org/docs/basics/Epics.html|the redux-observable documentation} for details"],"name":"epics","longname":"epics","kind":"member","scope":"global","$longname":"epics","$members":[{"comment":"/**\n * Epics for update old map\n * @name epics.automapupdate\n * @type {Object}\n */","meta":{"range":[4597,4679],"filename":"automapupdate.js","lineno":87,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for update old map</p>","name":"automapupdate","type":{"names":["Object"]},"memberof":"epics","longname":"epics.automapupdate","scope":"static","kind":"member","$longname":"epics.automapupdate"},{"comment":"/**\n * Epics for cookies policy informations\n * @name epics.cookies\n * @type {Object}\n */","meta":{"range":[1792,1881],"filename":"cookies.js","lineno":42,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for cookies policy informations</p>","name":"cookies","type":{"names":["Object"]},"memberof":"epics","longname":"epics.cookies","scope":"static","kind":"member","$longname":"epics.cookies"},{"comment":"/**\n * Epics for fullscreen functionality\n * @name epics.fullscreen\n * @type {Object}\n */","meta":{"range":[2362,2451],"filename":"fullscreen.js","lineno":52,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for fullscreen functionality</p>","name":"fullscreen","type":{"names":["Object"]},"memberof":"epics","longname":"epics.fullscreen","scope":"static","kind":"member","$longname":"epics.fullscreen"},{"comment":"/**\n * Epics for 3d switcher functionality\n * @name epics.globeswitcher\n * @type {Object}\n */","meta":{"range":[1385,1478],"filename":"globeswitcher.js","lineno":37,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for 3d switcher functionality</p>","name":"globeswitcher","type":{"names":["Object"]},"memberof":"epics","longname":"epics.globeswitcher","scope":"static","kind":"member","$longname":"epics.globeswitcher"},{"comment":"/**\n * Epics for maptype switch functionalities\n * @name epics.maptype\n * @type {Object}\n */","meta":{"range":[1340,1432],"filename":"maptype.js","lineno":32,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for maptype switch functionalities</p>","name":"maptype","type":{"names":["Object"]},"memberof":"epics","longname":"epics.maptype","scope":"static","kind":"member","$longname":"epics.maptype"},{"comment":"/**\n * Epics for notifications\n * @name epics.notifications\n * @type {Object}\n */","meta":{"range":[672,753],"filename":"notifications.js","lineno":22,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for notifications</p>","name":"notifications","type":{"names":["Object"]},"memberof":"epics","longname":"epics.notifications","scope":"static","kind":"member","$longname":"epics.notifications"},{"comment":"/**\n     * Actions for search\n     * @name epics.search\n     */","meta":{"range":[6989,7052],"filename":"search.js","lineno":150,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Actions for search</p>","name":"search","memberof":"epics","longname":"epics.search","scope":"static","kind":"member","$longname":"epics.search"},{"comment":"/**\n * Epics for Tutorial\n * @name epics.tutorial\n * @type {Object}\n */","meta":{"range":[2455,2526],"filename":"tutorial.js","lineno":60,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for Tutorial</p>","name":"tutorial","type":{"names":["Object"]},"memberof":"epics","longname":"epics.tutorial","scope":"static","kind":"member","$longname":"epics.tutorial"},{"comment":"/**\n  * Epics for WFS query requests\n  * @name epics.wfsquery\n  * @type {Object}\n  */","meta":{"range":[11613,11698],"filename":"wfsquery.js","lineno":286,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"description":"<p>Epics for WFS query requests</p>","name":"wfsquery","type":{"names":["Object"]},"memberof":"epics","longname":"epics.wfsquery","scope":"static","kind":"member","$longname":"epics.wfsquery"}]},{"comment":"/**\n * When map has been loaded, it sends a notification if the version is less than 2 and users has write permission.\n * @param {external:Observable} action$ manages `MAP_CONFIG_LOADED` and `MAP_INFO_LOADED`.\n * @memberof epics.automapupdate\n * @return {external:Observable}\n */","meta":{"range":[1151,3851],"filename":"automapupdate.js","lineno":27,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100010307","name":"manageAutoMapUpdate","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>When map has been loaded, it sends a notification if the version is less than 2 and users has write permission.</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>MAP_CONFIG_LOADED</code> and <code>MAP_INFO_LOADED</code>.</p>","name":"action$"}],"memberof":"epics.automapupdate","returns":[{"type":{"names":["external:Observable"]}}],"name":"manageAutoMapUpdate","longname":"epics.automapupdate.manageAutoMapUpdate","kind":"function","scope":"static","$longname":"epics.automapupdate.manageAutoMapUpdate"},{"comment":"/**\n * Reload information of map on LOGIN_SUCCESS.\n * @param {external:Observable} action$ manages `LOGIN_SUCCESS`.\n * @memberof epics.automapupdate\n * @return {external:Observable}\n */","meta":{"range":[4045,4594],"filename":"automapupdate.js","lineno":75,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100010542","name":"updateMapInfoOnLogin","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Reload information of map on LOGIN_SUCCESS.</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>LOGIN_SUCCESS</code>.</p>","name":"action$"}],"memberof":"epics.automapupdate","returns":[{"type":{"names":["external:Observable"]}}],"name":"updateMapInfoOnLogin","longname":"epics.automapupdate.updateMapInfoOnLogin","kind":"function","scope":"static","$longname":"epics.automapupdate.updateMapInfoOnLogin"},{"comment":"/**\n * Show the cookie policy notification\n * @param  {external:Observable} action$ triggers on \"LOCATION_CHANGE\"\n * @param  {object} store   the store, to get current notifications\n * @memberof epics.cookies\n * @return {external:Observable} the steam of actions to trigger to display the noitification.\n */","meta":{"range":[808,1060],"filename":"cookies.js","lineno":23,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100010666","name":"cookiePolicyChecker","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Show the cookie policy notification</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>triggers on &quot;LOCATION_CHANGE&quot;</p>","name":"action$"},{"type":{"names":["object"]},"description":"<p>the store, to get current notifications</p>","name":"store"}],"memberof":"epics.cookies","returns":[{"type":{"names":["external:Observable"]},"description":"<p>the steam of actions to trigger to display the noitification.</p>"}],"name":"cookiePolicyChecker","longname":"epics.cookies.cookiePolicyChecker","kind":"function","scope":"static","$longname":"epics.cookies.cookiePolicyChecker"},{"comment":"/**\n * Gets every `TOGGLE_FULLSCREEN` event.\n * Dispatches the fullscreen toggle event toggles the fullscreen itself.\n * Intercept all events for fullscreen and properly syncronizes the button state.\n * and updates every time the user toggles fullscreen (also hitting Esc)\n * @param {external:Observable} action$ manages `TOGGLE_FULLSCREEN`.\n * @memberof epics.fullscreen\n * @return {external:Observable} emitting {@link #actions.controls.setControlProperty} events\n */","meta":{"range":[1382,2360],"filename":"fullscreen.js","lineno":33,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100010910","name":"toggleFullscreenEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Gets every <code>TOGGLE_FULLSCREEN</code> event.\nDispatches the fullscreen toggle event toggles the fullscreen itself.\nIntercept all events for fullscreen and properly syncronizes the button state.\nand updates every time the user toggles fullscreen (also hitting Esc)</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>TOGGLE_FULLSCREEN</code>.</p>","name":"action$"}],"memberof":"epics.fullscreen","returns":[{"type":{"names":["external:Observable"]},"description":"<p>emitting {@link #actions.controls.setControlProperty} events</p>"}],"name":"toggleFullscreenEpic","longname":"epics.fullscreen.toggleFullscreenEpic","kind":"function","scope":"static","$longname":"epics.fullscreen.toggleFullscreenEpic"},{"comment":"/**\n * Gets every `TOGGLE_3D` event.\n * @memberof epics.globeswitcher\n * @param {external:Observable} action$ manages `TOGGLE_3D`.\n * @return {external:Observable} emitting react-router-redux push action and {@link #actions.globeswitcher.updateLast2dMapType} actions\n */","meta":{"range":[886,1383],"filename":"globeswitcher.js","lineno":28,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100011124","name":"updateRouteOn3dSwitch","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Gets every <code>TOGGLE_3D</code> event.</p>","memberof":"epics.globeswitcher","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>TOGGLE_3D</code>.</p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]},"description":"<p>emitting react-router-redux push action and {@link #actions.globeswitcher.updateLast2dMapType} actions</p>"}],"name":"updateRouteOn3dSwitch","longname":"epics.globeswitcher.updateRouteOn3dSwitch","kind":"function","scope":"static","$longname":"epics.globeswitcher.updateRouteOn3dSwitch"},{"comment":"/**\n * keep the default mapType in sync when change the URL of the map for viewer\n * @memberof epics.maptype\n * @param  {external:Observable} action$ the stream of actions, acts on `LOCATION_CHANGE`\n * @param  {object} store   the store middleware API from redux `createMiddleware`\n * @return {external:Observable}  the stream of the actions to emit. (`changeMapType`)\n */","meta":{"range":[897,1338],"filename":"maptype.js","lineno":22,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100011258","name":"syncMapType","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>keep the default mapType in sync when change the URL of the map for viewer</p>","memberof":"epics.maptype","params":[{"type":{"names":["external:Observable"]},"description":"<p>the stream of actions, acts on <code>LOCATION_CHANGE</code></p>","name":"action$"},{"type":{"names":["object"]},"description":"<p>the store middleware API from redux <code>createMiddleware</code></p>","name":"store"}],"returns":[{"type":{"names":["external:Observable"]},"description":"<p>the stream of the actions to emit. (<code>changeMapType</code>)</p>"}],"name":"syncMapType","longname":"epics.maptype.syncMapType","kind":"function","scope":"static","$longname":"epics.maptype.syncMapType"},{"comment":"/**\n * Clear all notifications on LOCATION_CHANGE.\n * @param {external:Observable} action$ manages `LOCATION_CHANGE`.\n * @memberof epics.notifications\n * @return {external:Observable}\n */","meta":{"range":[535,669],"filename":"notifications.js","lineno":18,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100011360","name":"clearNotificationOnLocationChange","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Clear all notifications on LOCATION_CHANGE.</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>LOCATION_CHANGE</code>.</p>","name":"action$"}],"memberof":"epics.notifications","returns":[{"type":{"names":["external:Observable"]}}],"name":"clearNotificationOnLocationChange","longname":"epics.notifications.clearNotificationOnLocationChange","kind":"function","scope":"static","$longname":"epics.notifications.clearNotificationOnLocationChange"},{"comment":"/**\n * Gets every `TEXT_SEARCH_STARTED` event.\n * Dispatches the request to all the services in the action, postprocess them\n * and updates every tume the results\n * @param {external:Observable} action$ manages `TEXT_SEARCH_STARTED` and `TEXT_SEARCH_RESULTS_PURGE`, `TEXT_SEARCH_RESET`, `TEXT_SEARCH_ITEM_SELECTED` for cancellation\n * @memberof epics.search\n * @return {external:Observable}\n */","meta":{"range":[1321,2775],"filename":"search.js","lineno":41,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100011481","name":"searchEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Gets every <code>TEXT_SEARCH_STARTED</code> event.\nDispatches the request to all the services in the action, postprocess them\nand updates every tume the results</p>","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>TEXT_SEARCH_STARTED</code> and <code>TEXT_SEARCH_RESULTS_PURGE</code>, <code>TEXT_SEARCH_RESET</code>, <code>TEXT_SEARCH_ITEM_SELECTED</code> for cancellation</p>","name":"action$"}],"memberof":"epics.search","returns":[{"type":{"names":["external:Observable"]}}],"name":"searchEpic","longname":"epics.search.searchEpic","kind":"function","scope":"static","$longname":"epics.search.searchEpic"},{"comment":"/**\n * Gets every `TEXT_SEARCH_ITEM_SELECTED` event.\n * on item selections zooms to the selected item, adds the marker to the marker layer and clear\n * search results.\n * If the selected item has a `__SERVICE__.then` entry, configures the search tool\n * to manage the nested services.\n * If the searvice has a search text template, it configures the searchText with\n * using the template.\n * @param {Observable} action$ stream of actions. Manages `TEXT_SEARCH_ITEM_SELECTED`\n * @memberof epics.search\n * @return {Observable}\n */","meta":{"range":[3314,6982],"filename":"search.js","lineno":85,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100011679","name":"searchItemSelected","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Gets every <code>TEXT_SEARCH_ITEM_SELECTED</code> event.\non item selections zooms to the selected item, adds the marker to the marker layer and clear\nsearch results.\nIf the selected item has a <code>__SERVICE__.then</code> entry, configures the search tool\nto manage the nested services.\nIf the searvice has a search text template, it configures the searchText with\nusing the template.</p>","params":[{"type":{"names":["Observable"]},"description":"<p>stream of actions. Manages <code>TEXT_SEARCH_ITEM_SELECTED</code></p>","name":"action$"}],"memberof":"epics.search","returns":[{"type":{"names":["Observable"]}}],"name":"searchItemSelected","longname":"epics.search.searchItemSelected","kind":"function","scope":"static","$longname":"epics.search.searchItemSelected"},{"comment":"/**\n * Closes the tutorial if 3D button has been toggled\n * @memberof epics.tutorial\n * @param {external:Observable} action$ manages `START_TUTORIAL`\n * @return {external:Observable}\n */","meta":{"range":[914,1090],"filename":"tutorial.js","lineno":26,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100012170","name":"closeTutorialEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Closes the tutorial if 3D button has been toggled</p>","memberof":"epics.tutorial","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>START_TUTORIAL</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"closeTutorialEpic","longname":"epics.tutorial.closeTutorialEpic","kind":"function","scope":"static","$longname":"epics.tutorial.closeTutorialEpic"},{"comment":"/**\n * Setup new steps based on the current maptype\n * @memberof epics.tutorial\n * @param {external:Observable} action$ manages `LOCATION_CHANGE`\n * @return {external:Observable}\n */","meta":{"range":[1283,2452],"filename":"tutorial.js","lineno":38,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100012201","name":"switchTutorialEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Setup new steps based on the current maptype</p>","memberof":"epics.tutorial","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>LOCATION_CHANGE</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"switchTutorialEpic","longname":"epics.tutorial.switchTutorialEpic","kind":"function","scope":"static","$longname":"epics.tutorial.switchTutorialEpic"},{"comment":"/**\n * Gets the WFS feature type attributes and geometry when the feature has been selected\n * @memberof epics.wfsquery\n * @param {external:Observable} action$ manages `FEATURE_TYPE_SELECTED`\n * @return {external:Observable}\n */","meta":{"range":[6717,8496],"filename":"wfsquery.js","lineno":194,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100013060","name":"featureTypeSelectedEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Gets the WFS feature type attributes and geometry when the feature has been selected</p>","memberof":"epics.wfsquery","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>FEATURE_TYPE_SELECTED</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"featureTypeSelectedEpic","longname":"epics.wfsquery.featureTypeSelectedEpic","kind":"function","scope":"static","$longname":"epics.wfsquery.featureTypeSelectedEpic"},{"comment":"/**\n * Sends a WFS query, returns a response or handles request error\n * in particular the NoApplicableCode WFS error with a forced sort option on the first attribute\n * @memberof epics.wfsquery\n * @param {external:Observable} action$ manages `QUERY`\n * @return {external:Observable}\n */","meta":{"range":[8794,9888],"filename":"wfsquery.js","lineno":230,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{"id":"astnode100013313","name":"wfsQueryEpic","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Sends a WFS query, returns a response or handles request error\nin particular the NoApplicableCode WFS error with a forced sort option on the first attribute</p>","memberof":"epics.wfsquery","params":[{"type":{"names":["external:Observable"]},"description":"<p>manages <code>QUERY</code></p>","name":"action$"}],"returns":[{"type":{"names":["external:Observable"]}}],"name":"wfsQueryEpic","longname":"epics.wfsquery.wfsQueryEpic","kind":"function","scope":"static","$longname":"epics.wfsquery.wfsQueryEpic"},{"comment":"/**\n  * @external Observable\n  * @description A RxJS Observable\n  * @see {@link http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html|Observable}\n  */","meta":{"range":[168,329],"filename":"index.jsdoc","lineno":6,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/epics","code":{}},"kind":"external","name":"Observable","description":"<p>A RxJS Observable</p>","see":["{@link http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html|Observable}"],"longname":"external:Observable","scope":"global","$longname":"external:Observable"},{"comment":"/**\n * @external selector\n * @see {@link https://github.com/reactjs/reselect|Reselect} for details\n * @description A function that computes the redux state or part of it allowing the redux store to be normalized and the react components to be re-rendered only if needed.\n */","meta":{"range":[129,403],"filename":"index.jsdoc","lineno":7,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/selectors","code":{}},"kind":"external","name":"selector","see":["{@link https://github.com/reactjs/reselect|Reselect} for details"],"description":"<p>A function that computes the redux state or part of it allowing the redux store to be normalized and the react components to be re-rendered only if needed.</p>","longname":"external:selector","scope":"global","$longname":"external:selector"},{"comment":"/**\n         * Returns the name of the attribute for the name of the geoJSON entry. This means that it translates \"geometry\" into the correct geometry name\n         * @param  {string} name The name of the geoJSON attribute, or \"geometry\"\n         * @return {string}      The original attribute name\n         */","meta":{"range":[3881,3939],"filename":"RequestBuilder.js","lineno":79,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils/ogc/WFST","code":{"id":"astnode100018823","name":"getPropertyName","type":"ArrowFunctionExpression"}},"description":"<p>Returns the name of the attribute for the name of the geoJSON entry. This means that it translates &quot;geometry&quot; into the correct geometry name</p>","params":[{"type":{"names":["string"]},"description":"<p>The name of the geoJSON attribute, or &quot;geometry&quot;</p>","name":"name"}],"returns":[{"type":{"names":["string"]},"description":"<p>The original attribute name</p>"}],"name":"getPropertyName","longname":"getPropertyName","kind":"function","scope":"global","$longname":"getPropertyName"},{"comment":"/**\n * Redux reducers.\n * @see {@link http://redux.js.org/docs/basics/Reducers.html|the redux documentation} for details\n * @name reducers\n *\n */","meta":{"range":[0,145],"filename":"index.jsdoc","lineno":1,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/reducers","code":{}},"description":"<p>Redux reducers.</p>","see":["{@link http://redux.js.org/docs/basics/Reducers.html|the redux documentation} for details"],"name":"reducers","longname":"reducers","kind":"member","scope":"global","$longname":"reducers","$members":[{"comment":"/**\n * Manages the state of the controls in MapStore2\n * The root elements of the state returned by this reducers ar variable, but they have\n * this shape\n * ```\n * {\n *   [action.control]: {\n *     [action.property]: action.value\n *   }\n * }\n * ```\n * where:\n * @prop {string} action.control identifier, used as key\n * @prop {string} action.property the proeprty to set, by default enabled\n * @prop {boolean|string|number|object} action.value the value of the action. If not present is a boolean that toggles\n * @example\n * {\n *   controls: {\n *     help: {\n *       enabled: false\n *     },\n *     print: {\n *       enabled: false\n *     },\n *     toolbar: {\n *       active: null,\n *       expanded: false\n *     },\n *     drawer: {\n *       enabled: false,\n *       menu: '1'\n *     }\n *   }\n * }\n * @memberof reducers\n */","meta":{"range":[1167,2473],"filename":"controls.js","lineno":47,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/reducers","code":{"id":"astnode100008337","name":"controls","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"property":"reducers.controls~property","resetted":"reducers.controls~resetted","":null}},"description":"<p>Manages the state of the controls in MapStore2\nThe root elements of the state returned by this reducers ar variable, but they have\nthis shape</p>\n<pre class=\"prettyprint source\"><code>{\n  [action.control]: {\n    [action.property]: action.value\n  }\n}</code></pre><p>where:</p>","properties":[{"type":{"names":["string"]},"description":"<p>identifier, used as key</p>","name":"action.control"},{"type":{"names":["string"]},"description":"<p>the proeprty to set, by default enabled</p>","name":"action.property"},{"type":{"names":["boolean","string","number","object"]},"description":"<p>the value of the action. If not present is a boolean that toggles</p>","name":"action.value"}],"examples":["{\n  controls: {\n    help: {\n      enabled: false\n    },\n    print: {\n      enabled: false\n    },\n    toolbar: {\n      active: null,\n      expanded: false\n    },\n    drawer: {\n      enabled: false,\n      menu: '1'\n    }\n  }\n}"],"memberof":"reducers","name":"controls","longname":"reducers.controls","kind":"function","scope":"static","params":[],"$longname":"reducers.controls"},{"comment":"/**\n * state for globeswitcher tooltip. holds the last 2d mapType.\n * @memberof reducers\n * @param  {Object} [state={last2dMapType: \"leaflet\"}]   the state\n * @param  {action} action                 the actions (receives MAP_TYPE_CHANGED and UPDATE_LAST_2D_MAPTYPE)\n * @return {Object}                        the new state\n * @example\n * {\n *  last2dMapType: \"leaflet\"\n * }\n */","meta":{"range":[710,1095],"filename":"globeswitcher.js","lineno":22,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/reducers","code":{"id":"astnode100008527","name":"globeswitcher","type":"FunctionDeclaration","paramnames":["state","action"]}},"description":"<p>state for globeswitcher tooltip. holds the last 2d mapType.</p>","memberof":"reducers","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{last2dMapType: \"leaflet\"}","description":"<p>the state</p>","name":"state"},{"type":{"names":["action"]},"description":"<p>the actions (receives MAP_TYPE_CHANGED and UPDATE_LAST_2D_MAPTYPE)</p>","name":"action"}],"returns":[{"type":{"names":["Object"]},"description":"<p>the new state</p>"}],"examples":["{\n last2dMapType: \"leaflet\"\n}"],"name":"globeswitcher","longname":"reducers.globeswitcher","kind":"function","scope":"static","$longname":"reducers.globeswitcher"},{"comment":"/**\n * Manages the state of the maps list search with it's results\n * The properties represent the shape of the state\n * @prop {boolan} loading loading state\n * @prop {string} searchText the text used for search (or while digiting)\n * @prop {number} start index for pagination for the current request\n * @prop {number} limit number of results for the current request\n * @prop {number} totalCount the number of results that match the last search on the server\n * @prop {array}  results the results\n * @prop {boolean} success the status of the last request\n * @prop {array} errors the errors happended\n *\n * @example\n * {\n *   maps: {\n *     mapType: 'leaflet',\n *     enabled: false,\n *     errors: [],\n *     searchText: 'test',\n *     loading: false,\n *     start: 0,\n *     limit: 12,\n *     success: true,\n *     totalCount: 1,\n *     results: [\n *       {\n *         updating: true, // only when updating\n *         deleting: true, // only when deleting\n *         canDelete: true,\n *         canEdit: true,\n *         canCopy: true,\n *         creation: '2017-01-16 12:16:09.538',\n *         lastUpdate: '2017-03-17 11:51:34.428',\n *         description: 'Simple map to test WFS search capabilities',\n *         id: 1740,\n *         name: 'WFS Test Map',\n *         thumbnail: '%2Fmapstore%2Frest%2Fgeostore%2Fdata%2F1744%2Fraw%3Fdecode%3Ddatauri',\n *         owner: 'admin'\n *       }\n *     ]\n *   }\n * }\n *}\n * @memberof reducers\n */","meta":{"range":[2165,10125],"filename":"maps.js","lineno":63,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/reducers","code":{"id":"astnode100008643","name":"maps","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"results":"reducers.maps~results","newMaps":"reducers.maps~newMaps","i":"reducers.maps~i","newMaps[undefined]":"reducers.maps~newMaps.undefined]","newMapsState":"reducers.maps~newMapsState","":null,"newState":"reducers.maps~newState"}},"description":"<p>Manages the state of the maps list search with it's results\nThe properties represent the shape of the state</p>","properties":[{"type":{"names":["array"]},"description":"<p>the errors happended</p>","name":"errors"},{"type":{"names":["number"]},"description":"<p>number of results for the current request</p>","name":"limit"},{"type":{"names":["boolan"]},"description":"<p>loading state</p>","name":"loading"},{"type":{"names":["array"]},"description":"<p>the results</p>","name":"results"},{"type":{"names":["string"]},"description":"<p>the text used for search (or while digiting)</p>","name":"searchText"},{"type":{"names":["number"]},"description":"<p>index for pagination for the current request</p>","name":"start"},{"type":{"names":["boolean"]},"description":"<p>the status of the last request</p>","name":"success"},{"type":{"names":["number"]},"description":"<p>the number of results that match the last search on the server</p>","name":"totalCount"}],"examples":["{\n  maps: {\n    mapType: 'leaflet',\n    enabled: false,\n    errors: [],\n    searchText: 'test',\n    loading: false,\n    start: 0,\n    limit: 12,\n    success: true,\n    totalCount: 1,\n    results: [\n      {\n        updating: true, // only when updating\n        deleting: true, // only when deleting\n        canDelete: true,\n        canEdit: true,\n        canCopy: true,\n        creation: '2017-01-16 12:16:09.538',\n        lastUpdate: '2017-03-17 11:51:34.428',\n        description: 'Simple map to test WFS search capabilities',\n        id: 1740,\n        name: 'WFS Test Map',\n        thumbnail: '%2Fmapstore%2Frest%2Fgeostore%2Fdata%2F1744%2Fraw%3Fdecode%3Ddatauri',\n        owner: 'admin'\n      }\n    ]\n  }\n}\n}"],"memberof":"reducers","name":"maps","longname":"reducers.maps","kind":"function","scope":"static","params":[],"$longname":"reducers.maps"},{"comment":"/**\n * stores state for the mapType to use (typically one of leaflet, openlayers, cesium... )\n * @memberof reducers\n * @param  {Object} [state={mapType: \"leaflet\"}] the initial state\n * @param  {} action  the action gets `MAP_TYPE_CHANGED`\n * @return {Object} the new state\n * @example\n * {\n *  mapType: \"leaflet\"\n * }\n */","meta":{"range":[583,778],"filename":"maptype.js","lineno":21,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/reducers","code":{"id":"astnode100009825","name":"maptype","type":"FunctionDeclaration","paramnames":["state","action"]}},"description":"<p>stores state for the mapType to use (typically one of leaflet, openlayers, cesium... )</p>","memberof":"reducers","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{mapType: \"leaflet\"}","description":"<p>the initial state</p>","name":"state"},{"description":"<p>the action gets <code>MAP_TYPE_CHANGED</code></p>","name":"action"}],"returns":[{"type":{"names":["Object"]},"description":"<p>the new state</p>"}],"examples":["{\n mapType: \"leaflet\"\n}"],"name":"maptype","longname":"reducers.maptype","kind":"function","scope":"static","$longname":"reducers.maptype"},{"comment":"/**\n * Manages the notifications.\n * @memberof reducers\n * @param  {Array}  [state=[]]  the notifications array\n * @param  {Object} [action={}] the action. can be `SHOW_NOTIFICATION`, `HIDE_NOTIFICATION` or `CLEAR_NOTIFICATIONS`\n * @return {Array}              the modified state\n * @example\n * [{\n *  uid: 1234,\n *  title: \"My Notification\",\n *  level: \"success\",\n *  action: {\n *      \"label\": \"I Agree\"\n *  }\n * }]\n */","meta":{"range":[731,1254],"filename":"notifications.js","lineno":26,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/reducers","code":{"id":"astnode100009868","name":"notifications","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"undefined":null,"":null}},"description":"<p>Manages the notifications.</p>","memberof":"reducers","params":[{"type":{"names":["Array"]},"optional":true,"defaultvalue":"[]","description":"<p>the notifications array</p>","name":"state"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"<p>the action. can be <code>SHOW_NOTIFICATION</code>, <code>HIDE_NOTIFICATION</code> or <code>CLEAR_NOTIFICATIONS</code></p>","name":"action"}],"returns":[{"type":{"names":["Array"]},"description":"<p>the modified state</p>"}],"examples":["[{\n uid: 1234,\n title: \"My Notification\",\n level: \"success\",\n action: {\n     \"label\": \"I Agree\"\n }\n}]"],"name":"notifications","longname":"reducers.notifications","kind":"function","scope":"static","$longname":"reducers.notifications"},{"comment":"/**\n * Manages the state of the map search with it's results\n * The properties represent the shape of the state\n * @prop {boolan} loading loading state\n * @prop {object} error the last error, if any\n * @prop {string} searchText the search text\n * @prop {array}  results the results\n * @prop {object} markerPosition  the markerPosition\n * @prop {object} selectedServicess tores the services currently selected by the user\n * @prop {object} selectedItems the selected items\n *\n * @example\n *{\n *  search: {\n *    searchText: 'test',\n *    error: null,\n *    loading: false,\n *    results: [\n *      {\n *        properties: {\n *          place_id: '130504451',\n *          licence: 'Data © OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright',\n *          osm_type: 'way',\n *          osm_id: '294145572',\n *          lat: '6.82439805',\n *          lon: '81.0004103985287',\n *          display_name: 'test, Bandarawela, Badulla District, Uva, Sri Lanka',\n *          'class': 'landuse',\n *          type: 'forest',\n *          importance: 0.31,\n *        },\n *        id: '294145572',\n *        type: 'Feature',\n *        bbox: [\n *          81.0001165,\n *          6.8238999,\n *          81.0008042,\n *          6.8248084\n *        ],\n *        geometry: {\n *          type: 'Polygon',\n *          coordinates: [\n *              [[ 81.0001165, 6.8242576],\n *              [81.0001892, 6.8245385],\n *              [81.0003879, 6.8248084],\n *              [81.0008042, 6.8241984],\n *              [81.0003606, 6.8238999],\n *              [81.0001165, 6.8242576]\n *            ]]\n *        },\n *        __SERVICE__: {\n *          type: 'nominatim'\n *        },\n *        __PRIORITY__: 0\n *      },\n *    ]\n *  }\n *}\n * @memberof reducers\n */","meta":{"range":[2367,4111],"filename":"search.js","lineno":74,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/reducers","code":{"id":"astnode100009972","name":"search","type":"FunctionDeclaration","paramnames":["state","action"]},"vars":{"results":"reducers.search~results","":null}},"description":"<p>Manages the state of the map search with it's results\nThe properties represent the shape of the state</p>","properties":[{"type":{"names":["object"]},"description":"<p>the last error, if any</p>","name":"error"},{"type":{"names":["boolan"]},"description":"<p>loading state</p>","name":"loading"},{"type":{"names":["object"]},"description":"<p>the markerPosition</p>","name":"markerPosition"},{"type":{"names":["array"]},"description":"<p>the results</p>","name":"results"},{"type":{"names":["string"]},"description":"<p>the search text</p>","name":"searchText"},{"type":{"names":["object"]},"description":"<p>the selected items</p>","name":"selectedItems"},{"type":{"names":["object"]},"description":"<p>tores the services currently selected by the user</p>","name":"selectedServicess"}],"examples":["{\n search: {\n   searchText: 'test',\n   error: null,\n   loading: false,\n   results: [\n     {\n       properties: {\n         place_id: '130504451',\n         licence: 'Data © OpenStreetMap contributors, ODbL 1.0. http://www.openstreetmap.org/copyright',\n         osm_type: 'way',\n         osm_id: '294145572',\n         lat: '6.82439805',\n         lon: '81.0004103985287',\n         display_name: 'test, Bandarawela, Badulla District, Uva, Sri Lanka',\n         'class': 'landuse',\n         type: 'forest',\n         importance: 0.31,\n       },\n       id: '294145572',\n       type: 'Feature',\n       bbox: [\n         81.0001165,\n         6.8238999,\n         81.0008042,\n         6.8248084\n       ],\n       geometry: {\n         type: 'Polygon',\n         coordinates: [\n             [[ 81.0001165, 6.8242576],\n             [81.0001892, 6.8245385],\n             [81.0003879, 6.8248084],\n             [81.0008042, 6.8241984],\n             [81.0003606, 6.8238999],\n             [81.0001165, 6.8242576]\n           ]]\n       },\n       __SERVICE__: {\n         type: 'nominatim'\n       },\n       __PRIORITY__: 0\n     },\n   ]\n }\n}"],"memberof":"reducers","name":"search","longname":"reducers.search","kind":"function","scope":"static","params":[],"$longname":"reducers.search"}]},{"comment":"/**\n * React/Redux selectors.\n * @see {@link https://github.com/reactjs/reselect|Reselect} for details\n * @name selectors\n *\n */","meta":{"range":[0,128],"filename":"index.jsdoc","lineno":1,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/selectors","code":{}},"description":"<p>React/Redux selectors.</p>","see":["{@link https://github.com/reactjs/reselect|Reselect} for details"],"name":"selectors","longname":"selectors","kind":"member","scope":"global","$longname":"selectors"},{"comment":"/**\n * get the current map configuration from state\n * @function\n * @memberof selectors.map\n * @param  {object} state the state\n * @return {object} the map configruation\n */","meta":{"range":[535,647],"filename":"map.js","lineno":20,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/selectors","code":{"id":"astnode100008073","name":"mapSelector","type":"ArrowFunctionExpression"}},"description":"<p>get the current map configuration from state</p>","kind":"function","memberof":"selectors.map","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>the map configruation</p>"}],"name":"mapSelector","longname":"selectors.map.mapSelector","scope":"static","$longname":"selectors.map.mapSelector"},{"comment":"/**\n * Get the scales of the current map\n * @function\n * @memberof selectors.map\n * @param  {object} state the state\n * @return {number[]} the scales of the map\n */","meta":{"range":[912,1341],"filename":"map.js","lineno":31,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/selectors","code":{"id":"astnode100008117","name":"scalesSelector","type":"CallExpression","value":""}},"description":"<p>Get the scales of the current map</p>","kind":"function","memberof":"selectors.map","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["Array.<number>"]},"description":"<p>the scales of the map</p>"}],"name":"scalesSelector","longname":"selectors.map.scalesSelector","scope":"static","$longname":"selectors.map.scalesSelector"},{"comment":"/**\n * Check if the mapType is cesium\n * @function\n * @memberof selectors.maptype\n * @param  {object} state the state\n * @return {boolean}\n */","meta":{"range":[601,656],"filename":"maptype.js","lineno":24,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/selectors","code":{"id":"astnode100008255","name":"isCesium","type":"ArrowFunctionExpression"}},"description":"<p>Check if the mapType is cesium</p>","kind":"function","memberof":"selectors.maptype","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["boolean"]}}],"name":"isCesium","longname":"selectors.maptype.isCesium","scope":"static","$longname":"selectors.maptype.isCesium"},{"comment":"/**\n * selects maptype from state\n * @memberof selectors.maptype\n * @param  {object} state the state\n * @return {string}       the maptype in the state\n */","meta":{"range":[360,449],"filename":"maptype.js","lineno":15,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/selectors","code":{"id":"astnode100008237","name":"mapTypeSelector","type":"ArrowFunctionExpression"}},"description":"<p>selects maptype from state</p>","memberof":"selectors.maptype","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["string"]},"description":"<p>the maptype in the state</p>"}],"name":"mapTypeSelector","longname":"selectors.maptype.mapTypeSelector","kind":"function","scope":"static","$longname":"selectors.maptype.mapTypeSelector"},{"comment":"/**\n * selects tutorial from state\n * @memberof selectors.tutorial\n * @param  {object} state the state\n * @return {object}       the tutorial in the state\n */","meta":{"range":[363,416],"filename":"tutorial.js","lineno":15,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/selectors","code":{"id":"astnode100008300","name":"tutorialSelector","type":"ArrowFunctionExpression"}},"description":"<p>selects tutorial from state</p>","memberof":"selectors.tutorial","params":[{"type":{"names":["object"]},"description":"<p>the state</p>","name":"state"}],"returns":[{"type":{"names":["object"]},"description":"<p>the tutorial in the state</p>"}],"name":"tutorialSelector","longname":"selectors.tutorial.tutorialSelector","kind":"function","scope":"static","$longname":"selectors.tutorial.tutorialSelector"},{"comment":"/**\n * Misc utility objects and methods\n * @name utils\n *\n */","meta":{"range":[0,61],"filename":"index.jsdoc","lineno":1,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{}},"description":"<p>Misc utility objects and methods</p>","name":"utils","longname":"utils","kind":"member","scope":"global","$longname":"utils","$members":[{"comment":"/**\n * Utilities for Coordinates conversion.\n * @memberof utils\n */","meta":{"range":[1930,14620],"filename":"CoordinatesUtils.js","lineno":62,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100013968","name":"CoordinatesUtils","type":"ObjectExpression","value":"{\"setCrsLabels\":\"\",\"getUnits\":\"\",\"reproject\":\"\",\"getProjectedBBox\":\"\",\"createBBox\":\"\",\"reprojectGeoJson\":\"\",\"lineIntersectPolygon\":\"\",\"normalizePoint\":\"\",\"reprojectBbox\":\"\",\"getCompatibleSRS\":\"\",\"getEquivalentSRS\":\"\",\"getEPSGCode\":\"\",\"normalizeSRS\":\"\",\"isAllowedSRS\":\"\",\"getAvailableCRS\":\"\",\"calculateAzimuth\":\"\",\"extendExtent\":\"\",\"getGeoJSONExtent\":\"\",\"isValidExtent\":\"\",\"calculateCircleCoordinates\":\"\",\"coordsOLtoLeaflet\":\"\",\"mergeToPolyGeom\":\"\"}"}},"description":"<p>Utilities for Coordinates conversion.</p>","memberof":"utils","name":"CoordinatesUtils","longname":"utils.CoordinatesUtils","kind":"constant","scope":"static","$longname":"utils.CoordinatesUtils","$members":[{"comment":"/**\n     * Returns a bounds object.\n     * @param {number} minX Minimum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxX Maximum X.\n     * @param {number} maxY Maximum Y.\n     * @return {Object} Extent.\n     */","meta":{"range":[4467,4576],"filename":"CoordinatesUtils.js","lineno":124,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100014288","name":"createBBox","type":"FunctionExpression"}},"description":"<p>Returns a bounds object.</p>","params":[{"type":{"names":["number"]},"description":"<p>Minimum X.</p>","name":"minX"},{"type":{"names":["number"]},"description":"<p>Minimum Y.</p>","name":"minY"},{"type":{"names":["number"]},"description":"<p>Maximum X.</p>","name":"maxX"},{"type":{"names":["number"]},"description":"<p>Maximum Y.</p>","name":"maxY"}],"returns":[{"type":{"names":["Object"]},"description":"<p>Extent.</p>"}],"name":"createBBox","longname":"utils.CoordinatesUtils.createBBox","kind":"function","memberof":"utils.CoordinatesUtils","scope":"static","$longname":"utils.CoordinatesUtils.createBBox"},{"comment":"/**\n     * Extend an extent given another one\n     *\n     * @param extent1 {array} [minx, miny, maxx, maxy]\n     * @param extent2 {array} [minx, miny, maxx, maxy]\n     *\n     * @return {array} [minx, miny, maxx, maxy]\n     */","meta":{"range":[10236,10703],"filename":"CoordinatesUtils.js","lineno":282,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100015003","name":"extendExtent","type":"FunctionExpression"},"vars":{"newExtent":"utils.CoordinatesUtils.extendExtent~newExtent","newExtent[0]":"utils.CoordinatesUtils.extendExtent~newExtent.0]","newExtent[2]":"utils.CoordinatesUtils.extendExtent~newExtent.2]","newExtent[1]":"utils.CoordinatesUtils.extendExtent~newExtent.1]","newExtent[3]":"utils.CoordinatesUtils.extendExtent~newExtent.3]"}},"description":"<p>Extend an extent given another one</p>","params":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"extent1"},{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"extent2"}],"returns":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>"}],"name":"extendExtent","longname":"utils.CoordinatesUtils.extendExtent","kind":"function","memberof":"utils.CoordinatesUtils","scope":"static","$longname":"utils.CoordinatesUtils.extendExtent"},{"comment":"/**\n     * Calculates the extent for the geoJSON passed. It used a small buffer for points.\n     * Like turf/bbox but works only with simple geometries.\n     * @deprecated  We may replace it with turf/bbox + turf/buffer in the future, so using it with geometry is discouraged\n     * @param {geoJSON|geometry} GeoJSON or geometry\n     * @return {array} extent of the geoJSON\n     */","meta":{"range":[11095,12900],"filename":"CoordinatesUtils.js","lineno":305,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100015085","name":"getGeoJSONExtent","type":"FunctionExpression"},"vars":{"newExtent":"utils.CoordinatesUtils.getGeoJSONExtent~newExtent","reduceCollectionExtent":"utils.CoordinatesUtils.getGeoJSONExtent~reduceCollectionExtent","":null,"point":"utils.CoordinatesUtils.getGeoJSONExtent~point","newExtent[0]":"utils.CoordinatesUtils.getGeoJSONExtent~newExtent.0]","newExtent[1]":"utils.CoordinatesUtils.getGeoJSONExtent~newExtent.1]","newExtent[2]":"utils.CoordinatesUtils.getGeoJSONExtent~newExtent.2]","newExtent[3]":"utils.CoordinatesUtils.getGeoJSONExtent~newExtent.3]","flatCoordinates":"utils.CoordinatesUtils.getGeoJSONExtent~flatCoordinates","geometries":"utils.CoordinatesUtils.getGeoJSONExtent~geometries"}},"description":"<p>Calculates the extent for the geoJSON passed. It used a small buffer for points.\nLike turf/bbox but works only with simple geometries.</p>","deprecated":"We may replace it with turf/bbox + turf/buffer in the future, so using it with geometry is discouraged","params":[{"type":{"names":["geoJSON","geometry"]},"description":"<p>or geometry</p>","name":"GeoJSON"}],"returns":[{"type":{"names":["array"]},"description":"<p>extent of the geoJSON</p>"}],"name":"getGeoJSONExtent","longname":"utils.CoordinatesUtils.getGeoJSONExtent","kind":"function","memberof":"utils.CoordinatesUtils","scope":"static","$longname":"utils.CoordinatesUtils.getGeoJSONExtent"},{"comment":"/**\n     * Creates a bbox of size dimensions areund the center point given to it given the\n     * resolution and the rotation\n     * @param center {object} the x,y coordinate of the point\n     * @param resolution {number} the resolution of the map\n     * @param rotation {number} the optional rotation of the new bbox\n     * @param size {object} width,height of the desired bbox\n     * @return {object} the desired bbox {minx, miny, maxx, maxy}\n     */","meta":{"range":[3299,4225],"filename":"CoordinatesUtils.js","lineno":92,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100014102","name":"getProjectedBBox","type":"FunctionExpression"},"vars":{"dx":"utils.CoordinatesUtils.getProjectedBBox~dx","dy":"utils.CoordinatesUtils.getProjectedBBox~dy","cosRotation":"utils.CoordinatesUtils.getProjectedBBox~cosRotation","sinRotation":"utils.CoordinatesUtils.getProjectedBBox~sinRotation","xCos":"utils.CoordinatesUtils.getProjectedBBox~xCos","xSin":"utils.CoordinatesUtils.getProjectedBBox~xSin","yCos":"utils.CoordinatesUtils.getProjectedBBox~yCos","ySin":"utils.CoordinatesUtils.getProjectedBBox~ySin","x":"utils.CoordinatesUtils.getProjectedBBox~x","y":"utils.CoordinatesUtils.getProjectedBBox~y","x0":"utils.CoordinatesUtils.getProjectedBBox~x0","x1":"utils.CoordinatesUtils.getProjectedBBox~x1","x2":"utils.CoordinatesUtils.getProjectedBBox~x2","x3":"utils.CoordinatesUtils.getProjectedBBox~x3","y0":"utils.CoordinatesUtils.getProjectedBBox~y0","y1":"utils.CoordinatesUtils.getProjectedBBox~y1","y2":"utils.CoordinatesUtils.getProjectedBBox~y2","y3":"utils.CoordinatesUtils.getProjectedBBox~y3","bounds":"utils.CoordinatesUtils.getProjectedBBox~bounds"}},"description":"<p>Creates a bbox of size dimensions areund the center point given to it given the\nresolution and the rotation</p>","params":[{"type":{"names":["object"]},"description":"<p>the x,y coordinate of the point</p>","name":"center"},{"type":{"names":["number"]},"description":"<p>the resolution of the map</p>","name":"resolution"},{"type":{"names":["number"]},"description":"<p>the optional rotation of the new bbox</p>","name":"rotation"},{"type":{"names":["object"]},"description":"<p>width,height of the desired bbox</p>","name":"size"}],"returns":[{"type":{"names":["object"]},"description":"<p>the desired bbox {minx, miny, maxx, maxy}</p>"}],"name":"getProjectedBBox","longname":"utils.CoordinatesUtils.getProjectedBBox","kind":"function","memberof":"utils.CoordinatesUtils","scope":"static","$longname":"utils.CoordinatesUtils.getProjectedBBox"},{"comment":"/**\n     * Check extent validity\n     *\n     * @param extent {array} [minx, miny, maxx, maxy]\n     *\n     * @return {bool}\n     */","meta":{"range":[13041,13251],"filename":"CoordinatesUtils.js","lineno":352,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100015343","name":"isValidExtent","type":"FunctionExpression"}},"description":"<p>Check extent validity</p>","params":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"extent"}],"returns":[{"type":{"names":["bool"]}}],"name":"isValidExtent","longname":"utils.CoordinatesUtils.isValidExtent","kind":"function","memberof":"utils.CoordinatesUtils","scope":"static","$longname":"utils.CoordinatesUtils.isValidExtent"},{"comment":"/**\n     * Reprojects a bounding box.\n     * @param bbox {array} [minx, miny, maxx, maxy]\n     * @param source {string} SRS of the given bbox\n     * @param dest {string} SRS of the returned bbox\n     * @return {array} [minx, miny, maxx, maxy]\n     */","meta":{"range":[7120,7994],"filename":"CoordinatesUtils.js","lineno":191,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100014568","name":"reprojectBbox","type":"FunctionExpression"},"vars":{"points":"utils.CoordinatesUtils.reprojectBbox~points","projPoints":"utils.CoordinatesUtils.reprojectBbox~projPoints","p":"utils.CoordinatesUtils.reprojectBbox~p","projected":"utils.CoordinatesUtils.reprojectBbox~projected","undefined":null}},"description":"<p>Reprojects a bounding box.</p>","params":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>","name":"bbox"},{"type":{"names":["string"]},"description":"<p>SRS of the given bbox</p>","name":"source"},{"type":{"names":["string"]},"description":"<p>SRS of the returned bbox</p>","name":"dest"}],"returns":[{"type":{"names":["array"]},"description":"<p>[minx, miny, maxx, maxy]</p>"}],"name":"reprojectBbox","longname":"utils.CoordinatesUtils.reprojectBbox","kind":"function","memberof":"utils.CoordinatesUtils","scope":"static","$longname":"utils.CoordinatesUtils.reprojectBbox"},{"comment":"/**\n     * Reprojects a geojson from a crs into another\n     */","meta":{"range":[4650,6470],"filename":"CoordinatesUtils.js","lineno":130,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100014305","name":"reprojectGeoJson","type":"FunctionExpression"},"vars":{"from":"utils.CoordinatesUtils.reprojectGeoJson~from","to":"utils.CoordinatesUtils.reprojectGeoJson~to","transform":"utils.CoordinatesUtils.reprojectGeoJson~transform","":null}},"description":"<p>Reprojects a geojson from a crs into another</p>","name":"reprojectGeoJson","longname":"utils.CoordinatesUtils.reprojectGeoJson","kind":"function","memberof":"utils.CoordinatesUtils","scope":"static","$longname":"utils.CoordinatesUtils.reprojectGeoJson"}]},{"comment":"/**\n * Utilities to manage plugins\n * @memberof utils\n */","meta":{"range":[8038,12345],"filename":"PluginsUtils.js","lineno":184,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016512","name":"PluginsUtils","type":"ObjectExpression","value":"{\"defaultEpicWrapper\":\"\",\"combineReducers\":\"\",\"combineEpics\":\"\",\"getReducers\":\"\",\"filterState\":\"\",\"filterDisabledPlugins\":\"\",\"getMonitoredState\":\"\",\"getPlugins\":\"\",\"getPluginDescriptor\":\"\",\"connect\":\"\",\"handleExpression\":\"\",\"getMorePrioritizedContainer\":\"\"}"}},"description":"<p>Utilities to manage plugins</p>","memberof":"utils","name":"PluginsUtils","longname":"utils.PluginsUtils","kind":"constant","scope":"static","$longname":"utils.PluginsUtils","$members":[{"comment":"/**\n     * Produces the rootEpic for the plugins, combined with other epics passed as 2nd argument\n     * @param {array} plugins the plugins\n     * @param {function[]} [epics] the epics to add to the plugins' ones\n     * @param {function} [epicWrapper] returns a function that wraps the epic\n     * @return {function} the rootEpic, obtained combining plugins' epics and the other epics passed as argument.\n     */","meta":{"range":[8971,9218],"filename":"PluginsUtils.js","lineno":203,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016536","name":"combineEpics","type":"ArrowFunctionExpression"},"vars":{"pluginEpics":"utils.PluginsUtils.combineEpics~pluginEpics","":null}},"description":"<p>Produces the rootEpic for the plugins, combined with other epics passed as 2nd argument</p>","params":[{"type":{"names":["array"]},"description":"<p>the plugins</p>","name":"plugins"},{"type":{"names":["Array.<function()>"]},"optional":true,"description":"<p>the epics to add to the plugins' ones</p>","name":"epics"},{"type":{"names":["function"]},"optional":true,"description":"<p>returns a function that wraps the epic</p>","name":"epicWrapper"}],"returns":[{"type":{"names":["function"]},"description":"<p>the rootEpic, obtained combining plugins' epics and the other epics passed as argument.</p>"}],"name":"combineEpics","longname":"utils.PluginsUtils.combineEpics","kind":"function","memberof":"utils.PluginsUtils","scope":"static","$longname":"utils.PluginsUtils.combineEpics"},{"comment":"/**\n     * Produces the reducers from the plugins, combined with other plugins\n     * @param {array} plugins the plugins\n     * @param {object} [reducers] other reducers\n     * @returns {function} a reducer made from the plugins' reducers and the reducers passed as 2nd parameter\n     */","meta":{"range":[8375,8547],"filename":"PluginsUtils.js","lineno":192,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016517","name":"combineReducers","type":"ArrowFunctionExpression"},"vars":{"pluginsReducers":"utils.PluginsUtils.combineReducers~pluginsReducers"}},"description":"<p>Produces the reducers from the plugins, combined with other plugins</p>","params":[{"type":{"names":["array"]},"description":"<p>the plugins</p>","name":"plugins"},{"type":{"names":["object"]},"optional":true,"description":"<p>other reducers</p>","name":"reducers"}],"returns":[{"type":{"names":["function"]},"description":"<p>a reducer made from the plugins' reducers and the reducers passed as 2nd parameter</p>"}],"name":"combineReducers","longname":"utils.PluginsUtils.combineReducers","kind":"function","memberof":"utils.PluginsUtils","scope":"static","$longname":"utils.PluginsUtils.combineReducers"},{"comment":"/**\n     * Custom react-redux connect function that can override state property with plugin config.\n     * The plugin config properties are taken from the **pluginCfg** property.\n\n     * @param {function} [mapStateToProps] state to properties selector\n     * @param {function} [mapDispatchToProps] dispatchable actions selector\n     * @param {function} [mergeProps] merge function, if not defined, the internal override applies\n     * @param {object} [options] connect options (look at react-redux docs for details)\n     * @returns {function} funtion to be applied to the dumb object to connect it to state / dispatchers\n     */","meta":{"range":[12107,12288],"filename":"PluginsUtils.js","lineno":264,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016774","name":"connect","type":"ArrowFunctionExpression"}},"description":"<p>Custom react-redux connect function that can override state property with plugin config.\nThe plugin config properties are taken from the <strong>pluginCfg</strong> property.</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>state to properties selector</p>","name":"mapStateToProps"},{"type":{"names":["function"]},"optional":true,"description":"<p>dispatchable actions selector</p>","name":"mapDispatchToProps"},{"type":{"names":["function"]},"optional":true,"description":"<p>merge function, if not defined, the internal override applies</p>","name":"mergeProps"},{"type":{"names":["object"]},"optional":true,"description":"<p>connect options (look at react-redux docs for details)</p>","name":"options"}],"returns":[{"type":{"names":["function"]},"description":"<p>funtion to be applied to the dumb object to connect it to state / dispatchers</p>"}],"name":"connect","longname":"utils.PluginsUtils.connect","kind":"function","memberof":"utils.PluginsUtils","scope":"static","$longname":"utils.PluginsUtils.connect"},{"comment":"/**\n     * provide the pluginDescriptor for a given plugin, with a state and a configuration\n     * @param {object} state the state. This is required to laod plugins that depend from the state itself\n     * @param {object} plugins all the plugins, like this:\n     * ```\n     *  {\n     *      P1Plugin: connectdComponent1,\n     *      P2Plugin: connectdComponent2\n     *  }\n     * ```\n     * @param {array} pluginConfig the configurations of the plugins\n     * @param {object} [loadedPlugins] the plugins loaded with `require.ensure`\n     * @return {object} a pluginDescriptor like this:\n     * ```\n     * {\n     *    id: \"P1\",\n     *    name: \"P1\",\n     *    items: // the contained items\n     *    cfg: // the configuration\n     *    impl // the real implementation\n     * }\n     * ```\n     */","meta":{"range":[10397,11468],"filename":"PluginsUtils.js","lineno":236,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016628","name":"getPluginDescriptor","type":"ArrowFunctionExpression"},"vars":{"name":"utils.PluginsUtils.getPluginDescriptor~name","id":"utils.PluginsUtils.getPluginDescriptor~id","stateSelector":"utils.PluginsUtils.getPluginDescriptor~stateSelector","isDefault":"utils.PluginsUtils.getPluginDescriptor~isDefault","pluginKey":"utils.PluginsUtils.getPluginDescriptor~pluginKey","impl":"utils.PluginsUtils.getPluginDescriptor~impl"}},"description":"<p>provide the pluginDescriptor for a given plugin, with a state and a configuration</p>","params":[{"type":{"names":["object"]},"description":"<p>the state. This is required to laod plugins that depend from the state itself</p>","name":"state"},{"type":{"names":["object"]},"description":"<p>all the plugins, like this:</p>\n<pre class=\"prettyprint source\"><code> {\n     P1Plugin: connectdComponent1,\n     P2Plugin: connectdComponent2\n }</code></pre>","name":"plugins"},{"type":{"names":["array"]},"description":"<p>the configurations of the plugins</p>","name":"pluginConfig"},{"type":{"names":["object"]},"optional":true,"description":"<p>the plugins loaded with <code>require.ensure</code></p>","name":"loadedPlugins"}],"returns":[{"type":{"names":["object"]},"description":"<p>a pluginDescriptor like this:</p>\n<pre class=\"prettyprint source\"><code>{\n   id: &quot;P1&quot;,\n   name: &quot;P1&quot;,\n   items: // the contained items\n   cfg: // the configuration\n   impl // the real implementation\n}</code></pre>"}],"name":"getPluginDescriptor","longname":"utils.PluginsUtils.getPluginDescriptor","kind":"function","memberof":"utils.PluginsUtils","scope":"static","$longname":"utils.PluginsUtils.getPluginDescriptor"}]},{"comment":"/**\n * Utilities for Print\n * @memberof utils\n */","meta":{"range":[666,15049],"filename":"PrintUtils.js","lineno":28,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016870","name":"PrintUtils","type":"ObjectExpression","value":"{\"toAbsoluteURL\":\"\",\"normalizeUrl\":\"\",\"getLayoutName\":\"\",\"getPrintScales\":\"\",\"getNearestZoom\":\"\",\"getMapSize\":\"\",\"getMapfishPrintSpecification\":\"\",\"getMapfishLayersSpecification\":\"\",\"specCreators\":\"\",\"toOpenLayers2Style\":\"\",\"getOlDefaultStyle\":\"\"}"}},"description":"<p>Utilities for Print</p>","memberof":"utils","name":"PrintUtils","longname":"utils.PrintUtils","kind":"constant","scope":"static","$longname":"utils.PrintUtils","$members":[{"comment":"/**\n     * Find the layout name for the given options.\n     * The convention is: `PAGE_FORMAT + (\"_2_pages_legend\"|\"_2_pages_legend\"|\"\") + (\"_landscape\"|\"\")``\n     * @param  {object} spec the spec with the options\n     * @return {string}      the layout name.\n     */","meta":{"range":[2356,2747],"filename":"PrintUtils.js","lineno":73,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016972","name":"getLayoutName","type":"ArrowFunctionExpression"},"vars":{"layoutName":"utils.PrintUtils.getLayoutName~layoutName"}},"description":"<p>Find the layout name for the given options.\nThe convention is: `PAGE_FORMAT + (&quot;_2_pages_legend&quot;|&quot;_2_pages_legend&quot;|&quot;&quot;) + (&quot;_landscape&quot;|&quot;&quot;)``</p>","params":[{"type":{"names":["object"]},"description":"<p>the spec with the options</p>","name":"spec"}],"returns":[{"type":{"names":["string"]},"description":"<p>the layout name.</p>"}],"name":"getLayoutName","longname":"utils.PrintUtils.getLayoutName","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.getLayoutName"},{"comment":"/**\n     * Generate the layers (or legend) specification for print.\n     * @param  {array} layers  the layers configurations\n     * @param  {spec} spec    the print configurations\n     * @param  {string} purpose allowed values: `map|legend`. Tells which spec to generate.\n     * @return {array}         the configuration array for layers (or legend) to send to the print service.\n     */","meta":{"range":[6263,6541],"filename":"PrintUtils.js","lineno":165,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100017250","name":"getMapfishLayersSpecification","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Generate the layers (or legend) specification for print.</p>","params":[{"type":{"names":["array"]},"description":"<p>the layers configurations</p>","name":"layers"},{"type":{"names":["spec"]},"description":"<p>the print configurations</p>","name":"spec"},{"type":{"names":["string"]},"description":"<p>allowed values: <code>map|legend</code>. Tells which spec to generate.</p>","name":"purpose"}],"returns":[{"type":{"names":["array"]},"description":"<p>the configuration array for layers (or legend) to send to the print service.</p>"}],"name":"getMapfishLayersSpecification","longname":"utils.PrintUtils.getMapfishLayersSpecification","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.getMapfishLayersSpecification"},{"comment":"/**\n     * Creates the mapfish print specification from the current configuration\n     * @param  {object} spec the current configuration\n     * @return {object}      the mapfish print configuration to send to the server\n     */","meta":{"range":[4764,5865],"filename":"PrintUtils.js","lineno":133,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100017140","name":"getMapfishPrintSpecification","type":"ArrowFunctionExpression"},"vars":{"projectedCenter":"utils.PrintUtils.getMapfishPrintSpecification~projectedCenter"}},"description":"<p>Creates the mapfish print specification from the current configuration</p>","params":[{"type":{"names":["object"]},"description":"<p>the current configuration</p>","name":"spec"}],"returns":[{"type":{"names":["object"]},"description":"<p>the mapfish print configuration to send to the server</p>"}],"name":"getMapfishPrintSpecification","longname":"utils.PrintUtils.getMapfishPrintSpecification","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.getMapfishPrintSpecification"},{"comment":"/**\n     * Get the mapSize for print preview, parsing the layout and limiting the width.\n     * @param  {object} layout   the layout object\n     * @param  {number} maxWidth the max width for the mapSize\n     * @return {object}          width and height of a map limited by the maxWidth and with the same ratio of the layout\n     */","meta":{"range":[4093,4526],"filename":"PrintUtils.js","lineno":114,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100017082","name":"getMapSize","type":"ArrowFunctionExpression"},"vars":{"width":"utils.PrintUtils.getMapSize~width","height":"utils.PrintUtils.getMapSize~height"}},"description":"<p>Get the mapSize for print preview, parsing the layout and limiting the width.</p>","params":[{"type":{"names":["object"]},"description":"<p>the layout object</p>","name":"layout"},{"type":{"names":["number"]},"description":"<p>the max width for the mapSize</p>","name":"maxWidth"}],"returns":[{"type":{"names":["object"]},"description":"<p>width and height of a map limited by the maxWidth and with the same ratio of the layout</p>"}],"name":"getMapSize","longname":"utils.PrintUtils.getMapSize","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.getMapSize"},{"comment":"/**\n     * Guest the nearest zoom level in the allowed scales\n     * @param  {number} zoom                      the zoom level\n     * @param  {array} scales                    the allowed scales\n     * @param  {array} [mapScales=defaultScales] the map scales\n     * @return {number}                          the index that best approximates the current map scale\n     */","meta":{"range":[3507,3751],"filename":"PrintUtils.js","lineno":102,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100017050","name":"getNearestZoom","type":"ArrowFunctionExpression"},"vars":{"mapScale":"utils.PrintUtils.getNearestZoom~mapScale","":null}},"description":"<p>Guest the nearest zoom level in the allowed scales</p>","params":[{"type":{"names":["number"]},"description":"<p>the zoom level</p>","name":"zoom"},{"type":{"names":["array"]},"description":"<p>the allowed scales</p>","name":"scales"},{"type":{"names":["array"]},"optional":true,"defaultvalue":"defaultScales","description":"<p>the map scales</p>","name":"mapScales"}],"returns":[{"type":{"names":["number"]},"description":"<p>the index that best approximates the current map scale</p>"}],"name":"getNearestZoom","longname":"utils.PrintUtils.getNearestZoom","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.getNearestZoom"},{"comment":"/**\n     * Provides the default style for\n     * each vector type.\n     */","meta":{"range":[13539,15047],"filename":"PrintUtils.js","lineno":356,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100017695","name":"getOlDefaultStyle","type":"FunctionExpression"}},"description":"<p>Provides the default style for\neach vector type.</p>","name":"getOlDefaultStyle","longname":"utils.PrintUtils.getOlDefaultStyle","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.getOlDefaultStyle"},{"comment":"/**\n     * Gets the print scales allowed from the capabilities of the print service.\n     * @param  {capabilities} capabilities the capabilities of the print service\n     * @return {array}              the scales array\n     */","meta":{"range":[2984,3126],"filename":"PrintUtils.js","lineno":92,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100017023","name":"getPrintScales","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Gets the print scales allowed from the capabilities of the print service.</p>","params":[{"type":{"names":["capabilities"]},"description":"<p>the capabilities of the print service</p>","name":"capabilities"}],"returns":[{"type":{"names":["array"]},"description":"<p>the scales array</p>"}],"name":"getPrintScales","longname":"utils.PrintUtils.getPrintScales","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.getPrintScales"},{"comment":"/**\n     * Tranform the original URL configuration of the layer into a URL\n     * usable for the print service.\n     * @param  {string|array} input Original URL\n     * @return {string}       the URL modified as GeoServer requires\n     */","meta":{"range":[1826,2078],"filename":"PrintUtils.js","lineno":60,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016928","name":"normalizeUrl","type":"ArrowFunctionExpression"},"vars":{"result":"utils.PrintUtils.normalizeUrl~result"}},"description":"<p>Tranform the original URL configuration of the layer into a URL\nusable for the print service.</p>","params":[{"type":{"names":["string","array"]},"description":"<p>Original URL</p>","name":"input"}],"returns":[{"type":{"names":["string"]},"description":"<p>the URL modified as GeoServer requires</p>"}],"name":"normalizeUrl","longname":"utils.PrintUtils.normalizeUrl","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.normalizeUrl"},{"comment":"/**\n     * Given a static resource, returns the resource's absolute\n     * URL. Supports file paths with or without origin/protocol.\n     * @param {string} uri the uri to transform\n     * @param {string} [origin=window.location.origin] the origin to use\n     */","meta":{"range":[951,1578],"filename":"PrintUtils.js","lineno":35,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016873","name":"toAbsoluteURL","type":"ArrowFunctionExpression"}},"description":"<p>Given a static resource, returns the resource's absolute\nURL. Supports file paths with or without origin/protocol.</p>","params":[{"type":{"names":["string"]},"description":"<p>the uri to transform</p>","name":"uri"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"window.location.origin","description":"<p>the origin to use</p>","name":"origin"}],"name":"toAbsoluteURL","longname":"utils.PrintUtils.toAbsoluteURL","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.toAbsoluteURL"},{"comment":"/**\n     * Useful for print (Or generic Openlayers 2 conversion style)\n     */","meta":{"range":[12243,13454],"filename":"PrintUtils.js","lineno":319,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100017650","name":"toOpenLayers2Style","type":"FunctionExpression"}},"description":"<p>Useful for print (Or generic Openlayers 2 conversion style)</p>","name":"toOpenLayers2Style","longname":"utils.PrintUtils.toOpenLayers2Style","kind":"function","memberof":"utils.PrintUtils","scope":"static","$longname":"utils.PrintUtils.toOpenLayers2Style"}]},{"comment":"/**\n * Utility functions for Share tools.\n * @memberof utils\n */","meta":{"range":[301,2158],"filename":"ShareUtils.js","lineno":14,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100018902","name":"ShareUtils","type":"ObjectExpression","value":"{\"getAbsoluteURL\":\"\",\"getConfigUrl\":\"\",\"getApiUrl\":\"\"}"}},"description":"<p>Utility functions for Share tools.</p>","memberof":"utils","name":"ShareUtils","longname":"utils.ShareUtils","kind":"member","scope":"static","$longname":"utils.ShareUtils","$members":[{"comment":"/**\n     * get the absolute URL from the local url and the url to convert\n     * @param  {string} localUrl     the context where to evaluate the URL, typically location.href\n     * @param  {string} urlToConvert the url to convert\n     * @return {string}              the absolute url of the urlToConvert\n     */","meta":{"range":[636,897],"filename":"ShareUtils.js","lineno":21,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100018905","name":"getAbsoluteURL","type":"ArrowFunctionExpression"}},"description":"<p>get the absolute URL from the local url and the url to convert</p>","params":[{"type":{"names":["string"]},"description":"<p>the context where to evaluate the URL, typically location.href</p>","name":"localUrl"},{"type":{"names":["string"]},"description":"<p>the url to convert</p>","name":"urlToConvert"}],"returns":[{"type":{"names":["string"]},"description":"<p>the absolute url of the urlToConvert</p>"}],"name":"getAbsoluteURL","longname":"utils.ShareUtils.getAbsoluteURL","kind":"function","memberof":"utils.ShareUtils","scope":"static","$longname":"utils.ShareUtils.getAbsoluteURL"},{"comment":"/**\n     * Parses the API url to get the proper base path where to retrieve the js for the api.\n     * @param  {string} url the current context\n     * @return {string}     the base path of mapstore where to retrieve the js api.\n     */","meta":{"range":[1990,2156],"filename":"ShareUtils.js","lineno":49,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100019020","name":"getApiUrl","type":"ArrowFunctionExpression"},"vars":{"urlParsedObj":"utils.ShareUtils.getApiUrl~urlParsedObj"}},"description":"<p>Parses the API url to get the proper base path where to retrieve the js for the api.</p>","params":[{"type":{"names":["string"]},"description":"<p>the current context</p>","name":"url"}],"returns":[{"type":{"names":["string"]},"description":"<p>the base path of mapstore where to retrieve the js api.</p>"}],"name":"getApiUrl","longname":"utils.ShareUtils.getApiUrl","kind":"function","memberof":"utils.ShareUtils","scope":"static","$longname":"utils.ShareUtils.getApiUrl"},{"comment":"/**\n     * get the url for the configuration in GeoStore parsing the hash string (`#/viewer/{maptype}/1`)\n     * @param  {string} url     the context where to evaluate the URL, typically location.href\n     * @param  {string} geoStoreUrl the Base URL of GeoStore\n     * @return {string} the absolute url of the GeoStore Resource\n     */","meta":{"range":[1243,1744],"filename":"ShareUtils.js","lineno":34,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100018936","name":"getConfigUrl","type":"ArrowFunctionExpression"},"vars":{"urlParsedObj":"utils.ShareUtils.getConfigUrl~urlParsedObj","start":"utils.ShareUtils.getConfigUrl~start","end":"utils.ShareUtils.getConfigUrl~end","mapId":"utils.ShareUtils.getConfigUrl~mapId"}},"description":"<p>get the url for the configuration in GeoStore parsing the hash string (<code>#/viewer/{maptype}/1</code>)</p>","params":[{"type":{"names":["string"]},"description":"<p>the context where to evaluate the URL, typically location.href</p>","name":"url"},{"type":{"names":["string"]},"description":"<p>the Base URL of GeoStore</p>","name":"geoStoreUrl"}],"returns":[{"type":{"names":["string"]},"description":"<p>the absolute url of the GeoStore Resource</p>"}],"name":"getConfigUrl","longname":"utils.ShareUtils.getConfigUrl","kind":"function","memberof":"utils.ShareUtils","scope":"static","$longname":"utils.ShareUtils.getConfigUrl"}]}]},{"comment":"/**\n * Returns OGC Filter Builder. The FilterBuilder returns the method to compose the filter.\n * The returned element are basically the `filter`, `and`, `or` and `not` functions, plus a `property` object that allows to build the conditions\n * for properties. Other special conditions can be passed as strings.\n * The property object have the methods listed as properies below.\n * The builder provides all the methods to compose the filter (filter, and, or, not, property) to compose the filter.\n * ```\n * const filterBuilder = require('.../FilterBuilder');\n * const {filter, property, and, or, not} = filterBuilder({gmlVersion: \"3.1.1\"});\n *      filter(\n *          and(\n *              property(\"P1\").equals(\"v1\"),\n *              proprety(\"the_geom\").intersects(geoJSONGeometry)\n *          )\n *      ),\n *      {srsName=\"EPSG:4326\"} // 3rd for query is optional\n *      )\n * {maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n * );\n *\n * ```\n * @name FilterBuilder\n * @constructor\n * @memberof utils.ogc.WFS\n * @param {Object} [options] the options to create the request builder\n * @param  {String} [options.wfsVersion=\"1.1.0\"] the version of WFS\n * @param  {String} [options.gmlVersion]         gml Version ()\n * @param  {String} [options.filterNS]           NameSpace to use for filters\n * @return {Object}                      a filter builder.\n * @prop {function} filter creates a filter with the content Parameters can be passed as array or args list.\n * ```\n * filter(...content) //-> <ogc:Filter>...content<ogc:/Filter>\n * ```\n * @prop {function} fidFilter creates a fid condition\n * ```\n * fidFilter(\"id\")` // -> <ogc:FeatureId fid=\"sc_cities-6.1\"/>\n * ```\n * @prop {function} and Creates an and condition. Parameters can be passed as array or args list.\n * ```\n * and( property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ... )\n * and( [property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ...] )\n * ```\n * @prop {function} or Creates an or condition. Parameters can be passed as array or args list.\n * ```\n * or( property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ... )\n * or( [property(\"a\").equalTo(\"1\"), property(\"b\").equalTo(\"2\"), ...] )\n * ```\n * @prop {function} not creates a not condition.\n * ```\n * not( property(\"a\").equalTo(\"1\") )\n * ```\n * @prop {object} property is an utility object that allows to add a condition using the notation\n * ```\n * property(\"propname\").operator(...otherParams)\n * // examples\n * property(\"p\").equalTo(\"a\")\n * ```\n * @prop {function} property.equalTo `property(\"P1\").equals(\"v1\")`\n * @prop {function} property.greaterThen `property(\"P1\").greaterThen(1)`\n * @prop {function} property.greaterThenOrEqualTo `property(\"P1\").greaterThenOrEqualTo(1)`\n * @prop {function} property.lessThen `property(\"P1\").lessThen(1)`\n * @prop {function} property.lessThenOrEqualTo `property(\"P1\").lessThenOrEqualTo(1)`\n * @prop {function} property.between `property(\"P1\").between(1, 2)`\n * @prop {function} property.like `property(\"P1\").like(\"*test\", {options})`\n * @prop {function} property.ilike `property(\"P1\").ilike(\"*test\", {options})`\n * @prop {function} property.isNull `property(\"P1\").isNull()`\n * @prop {function} property.intersects `property(\"P1\").intersects(geoJSONGeometry)`\n * @prop {function} property.within `property(\"P1\").within(geoJSONGeometry)`\n * @prop {function} property.dwithin `property(\"P1\").dwithin(geoJSONGeometry, 10, \"m\")` 2nd and 3rd params are optional\n * @prop {function} property.contains `property(\"P1\").contains(geoJSONGeometry)`\n */","meta":{"range":[540,4175],"filename":"FilterBuilder.js","lineno":12,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils/ogc/Filter","code":{}},"description":"<p>Returns OGC Filter Builder. The FilterBuilder returns the method to compose the filter.\nThe returned element are basically the <code>filter</code>, <code>and</code>, <code>or</code> and <code>not</code> functions, plus a <code>property</code> object that allows to build the conditions\nfor properties. Other special conditions can be passed as strings.\nThe property object have the methods listed as properies below.\nThe builder provides all the methods to compose the filter (filter, and, or, not, property) to compose the filter.</p>\n<pre class=\"prettyprint source\"><code>const filterBuilder = require('.../FilterBuilder');\nconst {filter, property, and, or, not} = filterBuilder({gmlVersion: &quot;3.1.1&quot;});\n     filter(\n         and(\n             property(&quot;P1&quot;).equals(&quot;v1&quot;),\n             proprety(&quot;the_geom&quot;).intersects(geoJSONGeometry)\n         )\n     ),\n     {srsName=&quot;EPSG:4326&quot;} // 3rd for query is optional\n     )\n{maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n);</code></pre>","name":"FilterBuilder","kind":"class","memberof":"utils.ogc.WFS","params":[{"type":{"names":["Object"]},"optional":true,"description":"<p>the options to create the request builder</p>","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"1.1.0\"","description":"<p>the version of WFS</p>","name":"options.wfsVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>gml Version ()</p>","name":"options.gmlVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>NameSpace to use for filters</p>","name":"options.filterNS"}],"returns":[{"type":{"names":["Object"]},"description":"<p>a filter builder.</p>"}],"properties":[{"type":{"names":["function"]},"description":"<p>Creates an and condition. Parameters can be passed as array or args list.</p>\n<pre class=\"prettyprint source\"><code>and( property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ... )\nand( [property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ...] )</code></pre>","name":"and"},{"type":{"names":["function"]},"description":"<p>creates a fid condition</p>\n<pre class=\"prettyprint source\"><code>fidFilter(&quot;id&quot;)` // -> &lt;ogc:FeatureId fid=&quot;sc_cities-6.1&quot;/></code></pre>","name":"fidFilter"},{"type":{"names":["function"]},"description":"<p>creates a filter with the content Parameters can be passed as array or args list.</p>\n<pre class=\"prettyprint source\"><code>filter(...content) //-> &lt;ogc:Filter>...content&lt;ogc:/Filter></code></pre>","name":"filter"},{"type":{"names":["function"]},"description":"<p>creates a not condition.</p>\n<pre class=\"prettyprint source\"><code>not( property(&quot;a&quot;).equalTo(&quot;1&quot;) )</code></pre>","name":"not"},{"type":{"names":["function"]},"description":"<p>Creates an or condition. Parameters can be passed as array or args list.</p>\n<pre class=\"prettyprint source\"><code>or( property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ... )\nor( [property(&quot;a&quot;).equalTo(&quot;1&quot;), property(&quot;b&quot;).equalTo(&quot;2&quot;), ...] )</code></pre>","name":"or"},{"type":{"names":["object"]},"description":"<p>is an utility object that allows to add a condition using the notation</p>\n<pre class=\"prettyprint source\"><code>property(&quot;propname&quot;).operator(...otherParams)\n// examples\nproperty(&quot;p&quot;).equalTo(&quot;a&quot;)</code></pre>","name":"property"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).between(1, 2)</code></p>","name":"property.between"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).contains(geoJSONGeometry)</code></p>","name":"property.contains"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).dwithin(geoJSONGeometry, 10, &quot;m&quot;)</code> 2nd and 3rd params are optional</p>","name":"property.dwithin"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).equals(&quot;v1&quot;)</code></p>","name":"property.equalTo"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).greaterThen(1)</code></p>","name":"property.greaterThen"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).greaterThenOrEqualTo(1)</code></p>","name":"property.greaterThenOrEqualTo"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).ilike(&quot;*test&quot;, {options})</code></p>","name":"property.ilike"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).intersects(geoJSONGeometry)</code></p>","name":"property.intersects"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).isNull()</code></p>","name":"property.isNull"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).lessThen(1)</code></p>","name":"property.lessThen"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).lessThenOrEqualTo(1)</code></p>","name":"property.lessThenOrEqualTo"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).like(&quot;*test&quot;, {options})</code></p>","name":"property.like"},{"type":{"names":["function"]},"description":"<p><code>property(&quot;P1&quot;).within(geoJSONGeometry)</code></p>","name":"property.within"}],"scope":"static","longname":"utils.ogc.WFS.FilterBuilder","$longname":"utils.ogc.WFS.FilterBuilder"},{"comment":"/**\n * Returns WFS Request Builder to allow the creation of WFS requests.\n * It gets all the functionalities of `FilterBuilder`, plus adds `getFeature`, `query` ...\n * @see utils.ogc.Filter.FilterBuilder\n * @name RequestBuilder\n * @augments utils.ogc.Filter.FilterBuilder\n * @memberof utils.ogc.WFS\n * @constuctor\n * @param {Object} [options] the options to create the request builder\n * @param  {String} [options.wfsVersion=\"1.1.0\"] the version of WFS\n * @param  {String} [options.gmlVersion]         gml Version ()\n * @param  {String} [options.filterNS]           NameSpace to use for filters\n*  @param  {String} [options.wfsNS=\"wfs\"]        namespace to use for WFS tags\n * @return {Object} A request builder. it contains all the `FilterBuilder` methods, plus the getFeature, query... methods\n * The request builder provides all the methods to compose the request (query, filter...).\n * @example\n * const requestBuilder = require('.../RequestBuilder');\n * const {getFeature, query, filter, property} = requestBuilder({wfsVersion: \"1.0.0\"});\n * const reqBody = getFeature(query(\n *      \"workspace:layer\",\n *      filter(\n *          and(\n *              property(\"P1\").equals(\"v1\"),\n *              proprety(\"the_geom\").intersects(geoJSONGeometry)\n *          )\n *      ),\n *      {srsName=\"EPSG:4326\"} // 3rd for query is optional\n *      )\n * {maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n * );\n * @prop {function} getFeature generates the getFeatureRequest, with the contained query\n * ```\n * getFeature(query(\"topp:states', filter(...)))\n * ```\n * @prop {function} query returns the query element\n * ```\n * query(\"layerName\", filter..., {options})\n * ```\n */","meta":{"range":[1355,3147],"filename":"RequestBuilder.js","lineno":28,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils/ogc/WFS","code":{}},"description":"<p>Returns WFS Request Builder to allow the creation of WFS requests.\nIt gets all the functionalities of <code>FilterBuilder</code>, plus adds <code>getFeature</code>, <code>query</code> ...</p>","see":["utils.ogc.Filter.FilterBuilder"],"name":"RequestBuilder","augments":["utils.ogc.Filter.FilterBuilder"],"memberof":"utils.ogc.WFS","tags":[{"originalTitle":"constuctor","title":"constuctor","text":""}],"params":[{"type":{"names":["Object"]},"optional":true,"description":"<p>the options to create the request builder</p>","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"1.1.0\"","description":"<p>the version of WFS</p>","name":"options.wfsVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>gml Version ()</p>","name":"options.gmlVersion"},{"type":{"names":["String"]},"optional":true,"description":"<p>NameSpace to use for filters</p>","name":"options.filterNS"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"wfs\"","description":"<p>namespace to use for WFS tags</p>","name":"options.wfsNS"}],"returns":[{"type":{"names":["Object"]},"description":"<p>A request builder. it contains all the <code>FilterBuilder</code> methods, plus the getFeature, query... methods\nThe request builder provides all the methods to compose the request (query, filter...).</p>"}],"examples":["const requestBuilder = require('.../RequestBuilder');\nconst {getFeature, query, filter, property} = requestBuilder({wfsVersion: \"1.0.0\"});\nconst reqBody = getFeature(query(\n     \"workspace:layer\",\n     filter(\n         and(\n             property(\"P1\").equals(\"v1\"),\n             proprety(\"the_geom\").intersects(geoJSONGeometry)\n         )\n     ),\n     {srsName=\"EPSG:4326\"} // 3rd for query is optional\n     )\n{maxFeatures: 10, startIndex: 0, resultType: 'hits', outputFormat: 'application/json'} // 3rd  argument of getFeature is optional, and contains the options for the request.\n);"],"properties":[{"type":{"names":["function"]},"description":"<p>generates the getFeatureRequest, with the contained query</p>\n<pre class=\"prettyprint source\"><code>getFeature(query(&quot;topp:states', filter(...)))</code></pre>","name":"getFeature"},{"type":{"names":["function"]},"description":"<p>returns the query element</p>\n<pre class=\"prettyprint source\"><code>query(&quot;layerName&quot;, filter..., {options})</code></pre>","name":"query"}],"scope":"static","longname":"utils.ogc.WFS.RequestBuilder","kind":"member","$longname":"utils.ogc.WFS.RequestBuilder"},{"comment":"/**\n * RequestBuilder for WFS-T. Returns the proper method to create request bodies\n * @memberof utils.ogc.WFST\n * @name RequestBuilder\n * @augments utils.ogc.WFS.RequestBuilder\n * @param  {object} describe  the describeFeatureType object, json format\n * @param  {object} [options] by default wfsVersion=\"1.1.0\" wfsNS=\"wfs\"\n * @return {object}           the RequestBuilder for WFS-T\n * @example\n * const {transaction, update, insert, filter, property, propertyChange} = requestBuilder(myDescribeFT);\n * transaction(\n *  update([\n *      propertyChange(\"p1\", \"v1_new\"),\n *      filter(property(\"p1\").equalTo(\"v1_old\"))\n *  ])\n * )\n * @prop {function} insert return the insert operation\n * ```\n * insert(features) // can get both array or FeatureCollection as parameter.\n * insert(f1, f2) // also listing arguments is allowed\n * ```\n * @prop {function} update return the property update. can contain propertyChange or filter (1 only).\n * ```\n * update(propertyChange(\"a\",\"b\"), filter(property(\"a\").equalTo(\"a\"))\n * ```\n * @prop {function} deleteByFilter returns the delete with filter.\n * ```\n * deleteByFilter(filter(property(\"a\").equalTo(\"a\")))\n * ```\n * @prop {function} propertyChange create a propertyChange entry\n * ```\n * propertyChange(\"p\", 2) // <Property><Name>p</Name><Value>2</Value></Property>\n * ```\n */","meta":{"range":[1235,2550],"filename":"RequestBuilder.js","lineno":25,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils/ogc/WFST","code":{}},"description":"<p>RequestBuilder for WFS-T. Returns the proper method to create request bodies</p>","memberof":"utils.ogc.WFST","name":"RequestBuilder","augments":["utils.ogc.WFS.RequestBuilder"],"params":[{"type":{"names":["object"]},"description":"<p>the describeFeatureType object, json format</p>","name":"describe"},{"type":{"names":["object"]},"optional":true,"description":"<p>by default wfsVersion=&quot;1.1.0&quot; wfsNS=&quot;wfs&quot;</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>the RequestBuilder for WFS-T</p>"}],"examples":["const {transaction, update, insert, filter, property, propertyChange} = requestBuilder(myDescribeFT);\ntransaction(\n update([\n     propertyChange(\"p1\", \"v1_new\"),\n     filter(property(\"p1\").equalTo(\"v1_old\"))\n ])\n)"],"properties":[{"type":{"names":["function"]},"description":"<p>returns the delete with filter.</p>\n<pre class=\"prettyprint source\"><code>deleteByFilter(filter(property(&quot;a&quot;).equalTo(&quot;a&quot;)))</code></pre>","name":"deleteByFilter"},{"type":{"names":["function"]},"description":"<p>return the insert operation</p>\n<pre class=\"prettyprint source\"><code>insert(features) // can get both array or FeatureCollection as parameter.\ninsert(f1, f2) // also listing arguments is allowed</code></pre>","name":"insert"},{"type":{"names":["function"]},"description":"<p>create a propertyChange entry</p>\n<pre class=\"prettyprint source\"><code>propertyChange(&quot;p&quot;, 2) // &lt;Property>&lt;Name>p&lt;/Name>&lt;Value>2&lt;/Value>&lt;/Property></code></pre>","name":"propertyChange"},{"type":{"names":["function"]},"description":"<p>return the property update. can contain propertyChange or filter (1 only).</p>\n<pre class=\"prettyprint source\"><code>update(propertyChange(&quot;a&quot;,&quot;b&quot;), filter(property(&quot;a&quot;).equalTo(&quot;a&quot;))</code></pre>","name":"update"}],"scope":"static","longname":"utils.ogc.WFST.RequestBuilder","kind":"member","$longname":"utils.ogc.WFST.RequestBuilder"},{"comment":"/**\n * default wrapper for the epics.\n * @memberof utils.PluginsUtils\n * @param {epic} epic the epic to wrap\n * @return {epic} epic wrapped with error catch and re-subscribe functionalities.S\n */","meta":{"range":[7817,7972],"filename":"PluginsUtils.js","lineno":175,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100016483","name":"defaultEpicWrapper","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>default wrapper for the epics.</p>","memberof":"utils.PluginsUtils","params":[{"type":{"names":["epic"]},"description":"<p>the epic to wrap</p>","name":"epic"}],"returns":[{"type":{"names":["epic"]},"description":"<p>epic wrapped with error catch and re-subscribe functionalities.S</p>"}],"name":"defaultEpicWrapper","longname":"utils.PluginsUtils.defaultEpicWrapper","kind":"function","scope":"static","$longname":"utils.PluginsUtils.defaultEpicWrapper"},{"comment":"/**\n * filters the plugins passed evaluating the dsiablePluginIf expression with the given context\n * @memberof utils.PluginsUtils\n * @param  {Object} item         the plugins\n * @param  {function} [state={}]   The state to evaluate\n * @param  {Object} [plugins={}] the plugins object to get requires\n * @return {Boolean}             the result of the expression evaluation in the given context.\n */","meta":{"range":[3413,3773],"filename":"PluginsUtils.js","lineno":86,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100015871","name":"filterDisabledPlugins","type":"ArrowFunctionExpression"},"vars":{"disablePluginIf":"utils.PluginsUtils.filterDisabledPlugins~disablePluginIf"}},"description":"<p>filters the plugins passed evaluating the dsiablePluginIf expression with the given context</p>","memberof":"utils.PluginsUtils","params":[{"type":{"names":["Object"]},"description":"<p>the plugins</p>","name":"item"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"{}","description":"<p>The state to evaluate</p>","name":"state"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"<p>the plugins object to get requires</p>","name":"plugins"}],"returns":[{"type":{"names":["Boolean"]},"description":"<p>the result of the expression evaluation in the given context.</p>"}],"name":"filterDisabledPlugins","longname":"utils.PluginsUtils.filterDisabledPlugins","kind":"function","scope":"static","$longname":"utils.PluginsUtils.filterDisabledPlugins"},{"comment":"/**\n * Gives a reduced version of the status to check.\n * It cached the last state to prevent re-evaluations if the input didn't change.\n * @memberof utils.PluginsUtils\n * @function\n * @param {Object} state the state\n * @param {Object[]} monitor an array of objects in the form `{name: \"a\", path: \"b\"}` used to produce the monitoredState\n * @return {Object} the state filtered using the monitor rules\n * @example\n * const monitor =[{name: \"a\", path: \"b\"}`];\n * const state = {b: \"test\"}\n * filterState(state, monitor); // returns {a: \"test\"}\n */","meta":{"range":[1161,1525],"filename":"PluginsUtils.js","lineno":29,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100015674","name":"filterState","type":"CallExpression","value":""}},"description":"<p>Gives a reduced version of the status to check.\nIt cached the last state to prevent re-evaluations if the input didn't change.</p>","memberof":"utils.PluginsUtils","kind":"function","params":[{"type":{"names":["Object"]},"description":"<p>the state</p>","name":"state"},{"type":{"names":["Array.<Object>"]},"description":"<p>an array of objects in the form <code>{name: &quot;a&quot;, path: &quot;b&quot;}</code> used to produce the monitoredState</p>","name":"monitor"}],"returns":[{"type":{"names":["Object"]},"description":"<p>the state filtered using the monitor rules</p>"}],"examples":["const monitor =[{name: \"a\", path: \"b\"}`];\nconst state = {b: \"test\"}\nfilterState(state, monitor); // returns {a: \"test\"}"],"name":"filterState","longname":"utils.PluginsUtils.filterState","scope":"static","$longname":"utils.PluginsUtils.filterState"},{"comment":"/**\n * Parses a expression string \"{some javascript}\" and evaluate it.\n * The expression will be evaluated getting as parameters the state and the context and the request.\n * @memberof utils.PluginsUtils\n * @param  {object} state      the state context\n * @param  {object} context    the context element\n * @param  {string} expression the expression to parse, it's a string\n * @return {object}            the result of the expression\n * @example \"{1===0 && request.query.queryParam1=paramValue1}\"\n * @example \"{1===0 && context.el1 === 'checked'}\"\n */","meta":{"range":[2797,3005],"filename":"PluginsUtils.js","lineno":72,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/utils","code":{"id":"astnode100015842","name":"handleExpression","type":"ArrowFunctionExpression"}},"description":"<p>Parses a expression string &quot;{some javascript}&quot; and evaluate it.\nThe expression will be evaluated getting as parameters the state and the context and the request.</p>","memberof":"utils.PluginsUtils","params":[{"type":{"names":["object"]},"description":"<p>the state context</p>","name":"state"},{"type":{"names":["object"]},"description":"<p>the context element</p>","name":"context"},{"type":{"names":["string"]},"description":"<p>the expression to parse, it's a string</p>","name":"expression"}],"returns":[{"type":{"names":["object"]},"description":"<p>the result of the expression</p>"}],"examples":["\"{1===0 && request.query.queryParam1=paramValue1}\"","\"{1===0 && context.el1 === 'checked'}\""],"name":"handleExpression","longname":"utils.PluginsUtils.handleExpression","kind":"function","scope":"static","$longname":"utils.PluginsUtils.handleExpression"}],"symbols":["actions","actions.controls","actions.controls.resetControls","actions.controls.setControlProperty","actions.controls.toggleControl","actions.fullscreen","actions.fullscreen.toggleFullscreen","actions.globeswitcher","actions.globeswitcher.toggle3d","actions.globeswitcher.updateLast2dMapType","actions.maps","actions.maps.attributeUpdated","actions.maps.createMap","actions.maps.createThumbnail","actions.maps.deleteMap","actions.maps.deleteThumbnail","actions.maps.loadAvailableGroups","actions.maps.loadError","actions.maps.loadMaps","actions.maps.loadPermissions","actions.maps.mapCreated","actions.maps.mapDeleted","actions.maps.mapDeleting","actions.maps.mapError","actions.maps.mapMetadataUpdated","actions.maps.mapsLoaded","actions.maps.mapsLoading","actions.maps.mapsSearchTextChanged","actions.maps.mapUpdating","actions.maps.metadataChanged","actions.maps.onDisplayMetadataEdit","actions.maps.permissionsLoaded","actions.maps.permissionsLoading","actions.maps.permissionsUpdated","actions.maps.resetCurrentMap","actions.maps.resetUpdating","actions.maps.saveAll","actions.maps.saveMap","actions.maps.thumbnailError","actions.maps.updateAttribute","actions.maps.updateMap","actions.maps.updateMapMetadata","actions.maps.updatePermissions","actions.maptype","actions.maptype.changeMapType","actions.notifications","actions.notifications.clear","actions.notifications.dispatchAction","actions.notifications.error","actions.notifications.hide","actions.notifications.info","actions.notifications.show","actions.notifications.success","actions.notifications.warning","actions.search","actions.search.addMarker","actions.search.cancelSelectedItem","actions.search.resetSearch","actions.search.resultsPurge","actions.search.searchResultError","actions.search.searchResultLoaded","actions.search.searchTextChanged","actions.search.searchTextLoading","actions.search.selectNestedService","actions.search.selectSearchItem","actions.search.setHighlightedFeature","actions.search.textSearch","components","components.buttons.FullScreenButton","components.buttons.GlobeViewSwitcherButton","components.buttons.GoFullButton","components.buttons.ToggleButton","components.map.DrawSupport","components.map.DrawSupport.componentWillReceiveProps","components.mapControls.search.SearchBar","components.notifications.NotificationContainer","components.plugins.PluginsContainer","components.query.AutocompleteField","epics","epics.automapupdate","epics.automapupdate.manageAutoMapUpdate","epics.automapupdate.updateMapInfoOnLogin","epics.cookies","epics.cookies.cookiePolicyChecker","epics.fullscreen","epics.fullscreen.toggleFullscreenEpic","epics.globeswitcher","epics.globeswitcher.updateRouteOn3dSwitch","epics.maptype","epics.maptype.syncMapType","epics.notifications","epics.notifications.clearNotificationOnLocationChange","epics.search","epics.search.searchEpic","epics.search.searchItemSelected","epics.tutorial","epics.tutorial.closeTutorialEpic","epics.tutorial.switchTutorialEpic","epics.wfsquery","epics.wfsquery.featureTypeSelectedEpic","epics.wfsquery.wfsQueryEpic","external:Observable","external:selector","getPropertyName","reducers","reducers.controls","reducers.globeswitcher","reducers.maps","reducers.maptype","reducers.notifications","reducers.search","selectors","selectors.map.mapSelector","selectors.map.scalesSelector","selectors.maptype.isCesium","selectors.maptype.mapTypeSelector","selectors.tutorial.tutorialSelector","utils","utils.CoordinatesUtils","utils.CoordinatesUtils.createBBox","utils.CoordinatesUtils.extendExtent","utils.CoordinatesUtils.getGeoJSONExtent","utils.CoordinatesUtils.getProjectedBBox","utils.CoordinatesUtils.isValidExtent","utils.CoordinatesUtils.reprojectBbox","utils.CoordinatesUtils.reprojectGeoJson","utils.ogc.WFS.FilterBuilder","utils.ogc.WFS.RequestBuilder","utils.ogc.WFST.RequestBuilder","utils.PluginsUtils","utils.PluginsUtils.combineEpics","utils.PluginsUtils.combineReducers","utils.PluginsUtils.connect","utils.PluginsUtils.defaultEpicWrapper","utils.PluginsUtils.filterDisabledPlugins","utils.PluginsUtils.filterState","utils.PluginsUtils.getPluginDescriptor","utils.PluginsUtils.handleExpression","utils.PrintUtils","utils.PrintUtils.getLayoutName","utils.PrintUtils.getMapfishLayersSpecification","utils.PrintUtils.getMapfishPrintSpecification","utils.PrintUtils.getMapSize","utils.PrintUtils.getNearestZoom","utils.PrintUtils.getOlDefaultStyle","utils.PrintUtils.getPrintScales","utils.PrintUtils.normalizeUrl","utils.PrintUtils.toAbsoluteURL","utils.PrintUtils.toOpenLayers2Style","utils.ShareUtils","utils.ShareUtils.getAbsoluteURL","utils.ShareUtils.getApiUrl","utils.ShareUtils.getConfigUrl"]},"jsapi":{"documentation":[{"comment":"/**\n * MapStore2 JavaScript API. Allows embedding MapStore2 functionalities into\n * a standard HTML page.\n * @class\n */","meta":{"range":[3042,11728],"filename":"MapStore2.js","lineno":109,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000382","name":"MapStore2","type":"ObjectExpression","value":"{\"create\":\"\",\"buildPluginsCfg\":\"\",\"getParamFromRequest\":\"\",\"loadConfigFromStorage\":\"\",\"onAction\":\"\",\"offAction\":\"\",\"onStateChange\":\"\",\"offStateChange\":\"\",\"withPlugins\":\"\",\"triggerAction\":\"\"}"}},"description":"<p>MapStore2 JavaScript API. Allows embedding MapStore2 functionalities into\na standard HTML page.</p>","kind":"class","name":"MapStore2","longname":"MapStore2","scope":"global","$longname":"MapStore2","$members":[{"comment":"/**\n     * Instantiates an embedded MapStore2 application in the given container.\n     * @memberof MapStore2\n     * @static\n     * @param {string} container id of the DOM element that should contain the embedded MapStore2\n     * @param {object} options set of options of the embedded app\n     *  * The options object can contain the following properties, to configure the app UI and state:\n     *  * **plugins**: list of plugins (and the related configuration) to be included in the app\n     *    look at [Plugins documentation](./plugins-documentation) for further details\n     *  * **config**: map configuration object for the application (look at [Map Configuration](./maps-configuration) for details)\n     *  * **configUrl**: map configuration url for the application (look at [Map Configuration](./maps-configuration) for details)\n     *  * **originalUrl**: url of the original instance of MapStore. If present it will be linked inside the map using the \"GoFull\" plugin, present by default.\n     *  * **initialState**: allows setting the initial application state (look at [State Configuration](./app-state-configuration) for details)\n     *\n     * Styling can be configured either using a **theme**, or a complete custom **less stylesheet**, using the\n     * following options properties:\n     *  * **style**: less style to be applied\n     *  * **startAction**: the actionType to wait before start triggering actions. By default CHANGE_MAP_VIEW\n     *  * **theme**: theme configuration options:\n     *    * path: path/url of the themes folder related to the current page\n     *    * theme: theme name to be used\n     *\n     * ```javascript\n     * {\n     *      plugins: ['Map', 'ZoomIn', 'ZoomOut'],\n     *      config: {\n     *          map: {\n     *              ...\n     *          }\n     *      },\n     *      configUrl: '...',\n     *      initialState: {\n     *          defaultState: {\n     *              ...\n     *          }\n     *      },\n     *      style: '<custom style>',\n     *      theme: {\n     *          theme: 'mytheme',\n     *          path: 'dist/themes'\n     *      }\n     * }\n     * ```\n     * @param {object} [plugins] optional plugins definition (defaults to local plugins list)\n     * @param {object} [component] optional page component (defaults to MapStore2 Embedded Page)\n     * @example\n     * MapStore2.create('container', {\n     *      plugins: ['Map']\n     * });\n     */","meta":{"range":[5475,8385],"filename":"MapStore2.js","lineno":160,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000385","name":"create","type":"FunctionExpression"},"vars":{"embedded":"MapStore2.create~embedded","options":"MapStore2.create~options","undefined":null,"pages":"MapStore2.create~pages","StandardRouter":"MapStore2.create~StandardRouter","":null,"actionTrigger":"MapStore2.create~actionTrigger","triggerAction":"MapStore2.create~triggerAction","appStore":"MapStore2.create~appStore","initialActions":"MapStore2.create~initialActions","appConfig":"MapStore2.create~appConfig","dom":"MapStore2.create~dom","dom.id":"MapStore2.create~dom.id","defaultThemeCfg":"MapStore2.create~defaultThemeCfg","themeCfg":"MapStore2.create~themeCfg","onStoreInit":"MapStore2.create~onStoreInit"}},"description":"<p>Instantiates an embedded MapStore2 application in the given container.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["string"]},"description":"<p>id of the DOM element that should contain the embedded MapStore2</p>","name":"container"},{"type":{"names":["object"]},"description":"<p>set of options of the embedded app</p>\n<ul>\n<li>The options object can contain the following properties, to configure the app UI and state:</li>\n<li><strong>plugins</strong>: list of plugins (and the related configuration) to be included in the app\nlook at <a href=\"./plugins-documentation\">Plugins documentation</a> for further details</li>\n<li><strong>config</strong>: map configuration object for the application (look at <a href=\"./maps-configuration\">Map Configuration</a> for details)</li>\n<li><strong>configUrl</strong>: map configuration url for the application (look at <a href=\"./maps-configuration\">Map Configuration</a> for details)</li>\n<li><strong>originalUrl</strong>: url of the original instance of MapStore. If present it will be linked inside the map using the &quot;GoFull&quot; plugin, present by default.</li>\n<li><strong>initialState</strong>: allows setting the initial application state (look at <a href=\"./app-state-configuration\">State Configuration</a> for details)</li>\n</ul>\n<p>Styling can be configured either using a <strong>theme</strong>, or a complete custom <strong>less stylesheet</strong>, using the\nfollowing options properties:</p>\n<ul>\n<li><strong>style</strong>: less style to be applied</li>\n<li><strong>startAction</strong>: the actionType to wait before start triggering actions. By default CHANGE_MAP_VIEW</li>\n<li><strong>theme</strong>: theme configuration options:<ul>\n<li>path: path/url of the themes folder related to the current page</li>\n<li>theme: theme name to be used</li>\n</ul>\n</li>\n</ul>\n<pre class=\"prettyprint source lang-javascript\"><code>{\n     plugins: ['Map', 'ZoomIn', 'ZoomOut'],\n     config: {\n         map: {\n             ...\n         }\n     },\n     configUrl: '...',\n     initialState: {\n         defaultState: {\n             ...\n         }\n     },\n     style: '&lt;custom style>',\n     theme: {\n         theme: 'mytheme',\n         path: 'dist/themes'\n     }\n}</code></pre>","name":"options"},{"type":{"names":["object"]},"optional":true,"description":"<p>optional plugins definition (defaults to local plugins list)</p>","name":"plugins"},{"type":{"names":["object"]},"optional":true,"description":"<p>optional page component (defaults to MapStore2 Embedded Page)</p>","name":"component"}],"examples":["MapStore2.create('container', {\n     plugins: ['Map']\n});"],"name":"create","longname":"MapStore2.create","kind":"function","$longname":"MapStore2.create"},{"comment":"/**\n     * Removes an action listener.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {string} type type of actions that is captured by the listener (* for all)\n     * @param {function} listener listener to be removed\n     * @example\n     * MapStore2.offAction('CHANGE_MAP_VIEW', listener);\n     */","meta":{"range":[9471,9639],"filename":"MapStore2.js","lineno":262,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000776","name":"offAction","type":"ArrowFunctionExpression"},"vars":{"listeners":"MapStore2.offAction~listeners","":null,"actionListeners[undefined]":null}},"description":"<p>Removes an action listener.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["string"]},"description":"<p>type of actions that is captured by the listener (* for all)</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>listener to be removed</p>","name":"listener"}],"examples":["MapStore2.offAction('CHANGE_MAP_VIEW', listener);"],"name":"offAction","longname":"MapStore2.offAction","kind":"function","$longname":"MapStore2.offAction"},{"comment":"/**\n     * Removes a state listener.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {function} listener listener to be removed\n     * @example\n     * MapStore2.offStateChange(listener);\n     */","meta":{"range":[10620,10740],"filename":"MapStore2.js","lineno":294,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000822","name":"offStateChange","type":"ArrowFunctionExpression"},"vars":{"stateChangeListeners":"MapStore2.offStateChange~stateChangeListeners","":null}},"description":"<p>Removes a state listener.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["function"]},"description":"<p>listener to be removed</p>","name":"listener"}],"examples":["MapStore2.offStateChange(listener);"],"name":"offStateChange","longname":"MapStore2.offStateChange","kind":"function","$longname":"MapStore2.offStateChange"},{"comment":"/**\n     * Adds a listener that will be notified of all the MapStore2 events (**actions**), or only some of them.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {string} type type of actions to be captured (* for all)\n     * @param {function} listener function to be called for each launched action; it will receive\n     *  the action as the only argument\n     * @example\n     * MapStore2.onAction('CHANGE_MAP_VIEW', function(action) {\n     *      console.log(action.zoom);\n     * });\n     */","meta":{"range":[8977,9146],"filename":"MapStore2.js","lineno":247,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000751","name":"onAction","type":"ArrowFunctionExpression"},"vars":{"listeners":"MapStore2.onAction~listeners","actionListeners[undefined]":null}},"description":"<p>Adds a listener that will be notified of all the MapStore2 events (<strong>actions</strong>), or only some of them.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["string"]},"description":"<p>type of actions to be captured (* for all)</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>function to be called for each launched action; it will receive\n the action as the only argument</p>","name":"listener"}],"examples":["MapStore2.onAction('CHANGE_MAP_VIEW', function(action) {\n     console.log(action.zoom);\n});"],"name":"onAction","longname":"MapStore2.onAction","kind":"function","$longname":"MapStore2.onAction"},{"comment":"/**\n     * Adds a listener that will be notified of each state update.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {function} listener function to be called for each state udpate; it will receive\n     *  the new state as the only argument\n     * @param {function} [selector] optional function that will produce a partial/derived state\n     * from the global state before calling the listeners\n     * @example\n     * MapStore2.onStateChange(function(map) {\n     *      console.log(map.zoom);\n     * }, function(state) {\n     *      return (state.map && state.map.present) || state.map || {};\n     * });\n     */","meta":{"range":[10278,10400],"filename":"MapStore2.js","lineno":282,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000803","name":"onStateChange","type":"ArrowFunctionExpression"},"vars":{"":null}},"description":"<p>Adds a listener that will be notified of each state update.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["function"]},"description":"<p>function to be called for each state udpate; it will receive\n the new state as the only argument</p>","name":"listener"},{"type":{"names":["function"]},"optional":true,"description":"<p>optional function that will produce a partial/derived state\nfrom the global state before calling the listeners</p>","name":"selector"}],"examples":["MapStore2.onStateChange(function(map) {\n     console.log(map.zoom);\n}, function(state) {\n     return (state.map && state.map.present) || state.map || {};\n});"],"name":"onStateChange","longname":"MapStore2.onStateChange","kind":"function","$longname":"MapStore2.onStateChange"},{"comment":"/**\n     * Triggers an action\n     * @param  {object} action The action to trigger.\n     * @example\n     * triggerAction({\n     *       type: 'ZOOM_TO_EXTENT',\n     *       extent: {\n     *         minx: '-124.731422',\n     *         miny: '24.955967',\n     *         maxx: '-66.969849',\n     *         maxy: '49.371735'\n     *       },\n     *       crs: 'EPSG:4326'\n     *   })\n     */","meta":{"range":[11678,11726],"filename":"MapStore2.js","lineno":325,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000866","name":"triggerAction","type":"ArrowFunctionExpression"}},"description":"<p>Triggers an action</p>","params":[{"type":{"names":["object"]},"description":"<p>The action to trigger.</p>","name":"action"}],"examples":["triggerAction({\n      type: 'ZOOM_TO_EXTENT',\n      extent: {\n        minx: '-124.731422',\n        miny: '24.955967',\n        maxx: '-66.969849',\n        maxy: '49.371735'\n      },\n      crs: 'EPSG:4326'\n  })"],"name":"triggerAction","longname":"MapStore2.triggerAction","kind":"function","memberof":"MapStore2","scope":"static","$longname":"MapStore2.triggerAction"},{"comment":"/**\n     * Returns a new custom API object using the given plugins list.\n     *\n     * @memberof MapStore2\n     * @static\n     * @param {object} plugins list of included plugins\n     * @param {object} [options] default options (to be overridden on create)\n     * @example\n     * MapStore2.withPlugins({...});\n     */","meta":{"range":[11067,11281],"filename":"MapStore2.js","lineno":307,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/jsapi","code":{"id":"astnode100000838","name":"withPlugins","type":"ArrowFunctionExpression"}},"description":"<p>Returns a new custom API object using the given plugins list.</p>","memberof":"MapStore2","scope":"static","params":[{"type":{"names":["object"]},"description":"<p>list of included plugins</p>","name":"plugins"},{"type":{"names":["object"]},"optional":true,"description":"<p>default options (to be overridden on create)</p>","name":"options"}],"examples":["MapStore2.withPlugins({...});"],"name":"withPlugins","longname":"MapStore2.withPlugins","kind":"function","$longname":"MapStore2.withPlugins"}]}],"symbols":["MapStore2","MapStore2.create","MapStore2.offAction","MapStore2.offStateChange","MapStore2.onAction","MapStore2.onStateChange","MapStore2.triggerAction","MapStore2.withPlugins"]},"plugins":{"documentation":[{"comment":"/**\n * MapStore2 plugins\n * @name plugins\n * @see {@link plugins-architecture}\n *\n */","meta":{"range":[0,85],"filename":"index.jsdoc","lineno":1,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>MapStore2 plugins</p>","name":"plugins","see":["{@link plugins-architecture}"],"longname":"plugins","kind":"member","scope":"global","$longname":"plugins","$members":[{"comment":"/**\n  * AutoMapUpdate Plugin. It sends a notification to update old maps (version < 2)\n  * @class AutoMapUpdate\n  * @memberof plugins\n  * @static\n  */","meta":{"range":[404,554],"filename":"AutoMapUpdate.jsx","lineno":13,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>AutoMapUpdate Plugin. It sends a notification to update old maps (version &lt; 2)</p>","kind":"class","name":"AutoMapUpdate","memberof":"plugins","scope":"static","longname":"plugins.AutoMapUpdate","$longname":"plugins.AutoMapUpdate"},{"comment":"/**\n  * BackgroundSelector Plugin.\n  * @class BackgroundSelector\n  * @memberof plugins\n  * @static\n  *\n  * @prop {number} cfg.left plugin position from left of the map\n  * @prop {number} cfg.bottom plugin position from bottom of the map\n  * @prop {object} cfg.dimensions dimensions of buttons\n  * @class\n  * @example\n  * {\n  *   \"name\": \"BackgroundSelector\",\n  *   \"cfg\": {\n  *     \"dimensions\": {\n  *       \"side\": 65,\n  *       \"sidePreview\": 65,\n  *       \"frame\": 3,\n  *       \"margin\": 5,\n  *       \"label\": false,\n  *       \"vertical\": true\n  *     }\n  *   }\n  * }\n  */","meta":{"range":[2669,3244],"filename":"BackgroundSelector.jsx","lineno":74,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>BackgroundSelector Plugin.</p>","kind":"class","name":"BackgroundSelector","memberof":"plugins","scope":"static","properties":[{"type":{"names":["number"]},"description":"<p>plugin position from bottom of the map</p>","name":"cfg.bottom"},{"type":{"names":["object"]},"description":"<p>dimensions of buttons</p>","name":"cfg.dimensions"},{"type":{"names":["number"]},"description":"<p>plugin position from left of the map</p>","name":"cfg.left"}],"examples":["{\n  \"name\": \"BackgroundSelector\",\n  \"cfg\": {\n    \"dimensions\": {\n      \"side\": 65,\n      \"sidePreview\": 65,\n      \"frame\": 3,\n      \"margin\": 5,\n      \"label\": false,\n      \"vertical\": true\n    }\n  }\n}"],"longname":"plugins.BackgroundSelector","$longname":"plugins.BackgroundSelector"},{"comment":"/**\n  * BackgroundSwitcher Plugin\n  * @class BackgroundSwitcher\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.id identifier of the Plugin\n  * @prop {boolean} cfg.fluid container should be fluid, see {@link http://getbootstrap.com/css/#grid}\n  *\n  */","meta":{"range":[816,1080],"filename":"BackgroundSwitcher.jsx","lineno":26,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>BackgroundSwitcher Plugin</p>","kind":"class","name":"BackgroundSwitcher","memberof":"plugins","scope":"static","properties":[{"type":{"names":["boolean"]},"description":"<p>container should be fluid, see {@link http://getbootstrap.com/css/#grid}</p>","name":"cfg.fluid"},{"type":{"names":["string"]},"description":"<p>identifier of the Plugin</p>","name":"cfg.id"}],"longname":"plugins.BackgroundSwitcher","$longname":"plugins.BackgroundSwitcher"},{"comment":"/**\n * DrawerMenu plugin. Shows a left menu with some pluins rendered inside it (typically the TOC).\n * @prop {string} cfg.glyph glyph icon to use for the button\n * @prop {object} cfg.menuButtonStyle Css inline style for the button. Display property will be overridden by the hideButton/forceDrawer options.\n * @prop {string} cfg.buttonClassName class for the toggle button\n * @prop {object} cfg.menuOptions options for the drawer menu. They can be `docked`, `width.\n * @memberof plugins\n * @class\n * @example\n * {\n *   \"name\": \"DrawerMenu\",\n *   \"cfg\": {\n *   \"hideButton\": true\n * }\n */","meta":{"range":[1928,4826],"filename":"DrawerMenu.jsx","lineno":55,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{"id":"astnode100000763","name":"DrawerMenu","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>DrawerMenu plugin. Shows a left menu with some pluins rendered inside it (typically the TOC).</p>","properties":[{"type":{"names":["string"]},"description":"<p>class for the toggle button</p>","name":"cfg.buttonClassName"},{"type":{"names":["string"]},"description":"<p>glyph icon to use for the button</p>","name":"cfg.glyph"},{"type":{"names":["object"]},"description":"<p>Css inline style for the button. Display property will be overridden by the hideButton/forceDrawer options.</p>","name":"cfg.menuButtonStyle"},{"type":{"names":["object"]},"description":"<p>options for the drawer menu. They can be <code>docked</code>, `width.</p>","name":"cfg.menuOptions"}],"memberof":"plugins","kind":"class","examples":["{\n  \"name\": \"DrawerMenu\",\n  \"cfg\": {\n  \"hideButton\": true\n}"],"name":"DrawerMenu","longname":"plugins.DrawerMenu","scope":"static","$longname":"plugins.DrawerMenu"},{"comment":"/**\n  * FullScreen Plugin. A button that toggles to fullscreen mode\n  * @class FullScreen\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.id identifier of the Plugin\n  * @prop {boolean} cfg.options.querySelector query selector to get the element to zoom. By default .ms2 > div\n  *\n  */","meta":{"range":[491,789],"filename":"FullScreen.jsx","lineno":18,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>FullScreen Plugin. A button that toggles to fullscreen mode</p>","kind":"class","name":"FullScreen","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>identifier of the Plugin</p>","name":"cfg.id"},{"type":{"names":["boolean"]},"description":"<p>query selector to get the element to zoom. By default .ms2 &gt; div</p>","name":"cfg.options.querySelector"}],"longname":"plugins.FullScreen","$longname":"plugins.FullScreen"},{"comment":"/**\n  * GlobeViewSwitcher Plugin. A button that toggles to 3d mode\n  * @class GlobeViewSwitcher\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.id identifier of the Plugin\n  *\n  */","meta":{"range":[659,852],"filename":"GlobeViewSwitcher.jsx","lineno":19,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>GlobeViewSwitcher Plugin. A button that toggles to 3d mode</p>","kind":"class","name":"GlobeViewSwitcher","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>identifier of the Plugin</p>","name":"cfg.id"}],"longname":"plugins.GlobeViewSwitcher","$longname":"plugins.GlobeViewSwitcher"},{"comment":"/**\n * GoFull plugin. Shows a button that opens full MapStore2 in a new tab. Try to find the `originalUrl` in configuration or tries to guess the mapId and creates the proper URL.\n * This plugins hides automatically if the originalUrl is not present in configuration and if the urlRegex do not match.\n * @prop {string} cfg.glyph the glyph icon for the button\n * @prop {string} cfg.tooltip messageId of the tooltip to use\n * @prop {string} cfg.urlRegex. A regex to parse the current location.href. This regex must match if the originalUrl is not defined.\n * @prop {string} cfg.urlReplaceString. The template to create the url link. Uses the `urlRegex` groups to create the final URL\n * @memberof plugins\n * @class GoFull\n */","meta":{"range":[246,969],"filename":"GoFull.jsx","lineno":10,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>GoFull plugin. Shows a button that opens full MapStore2 in a new tab. Try to find the <code>originalUrl</code> in configuration or tries to guess the mapId and creates the proper URL.\nThis plugins hides automatically if the originalUrl is not present in configuration and if the urlRegex do not match.</p>","properties":[{"type":{"names":["string"]},"description":"<p>the glyph icon for the button</p>","name":"cfg.glyph"},{"type":{"names":["string"]},"description":"<p>messageId of the tooltip to use</p>","name":"cfg.tooltip"},{"type":{"names":["string"]},"description":"<p>A regex to parse the current location.href. This regex must match if the originalUrl is not defined.</p>","name":"cfg.urlRegex."},{"type":{"names":["string"]},"description":"<p>The template to create the url link. Uses the <code>urlRegex</code> groups to create the final URL</p>","name":"cfg.urlReplaceString."}],"memberof":"plugins","kind":"class","name":"GoFull","scope":"static","longname":"plugins.GoFull","$longname":"plugins.GoFull"},{"comment":"/**\n * Identify plugin. This plugin allows to perform getfeature info.\n * It can be configured to have a mobile or a desktop flavor.\n * @class Identify\n * @memberof plugins\n * @static\n *\n * @prop showIn {string[]} List of the plugins where to show the plugin\n * @prop bodyClass {string} class to assign to the feature info panel body\n * @prop cfg.style {object} inline css style\n * @prop cfg.draggable {boolean} draggable info window\n * @prop cfg.collapsible {boolean} collapsible info panel\n * @prop cfg {object} style\n * @prop cfg.viewerOptions {object}\n * @prop cfg.viewerOptions.container {expression} the container of the viewer, expression from the context\n * @prop cfg.viewerOptions.header {expression} the geader of the viewer, expression from the context{expression}\n * @prop cfg.viewerOptions.collapsible {boolean} the single feature viewer is collapsible\n *\n * @example\n * {\n *   \"name\": \"Identify\",\n *   \"showIn\": [\"Settings\"],\n *   \"cfg\": {\n *       \"style\": {\n *           \"position\": \"absolute\",\n *           \"width\": \"100%\",\n *           \"bottom\": \"0px\",\n *           \"zIndex\": 1023,\n *           \"maxHeight\": \"70%\",\n *           \"marginBottom\": 0\n *       },\n *       \"draggable\": false,\n *       \"collapsible\": true,\n *       \"viewerOptions\": {\n *       \"container\": \"{context.ReactSwipe}\",\n *       \"header\": \"{context.SwipeHeader}\",\n *       \"collapsible\": false\n *   },\n *   \"bodyClass\": \"mobile-feature-info\"\n *  }\n * }\n */","meta":{"range":[1813,3258],"filename":"Identify.jsx","lineno":45,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Identify plugin. This plugin allows to perform getfeature info.\nIt can be configured to have a mobile or a desktop flavor.</p>","kind":"class","name":"Identify","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>class to assign to the feature info panel body</p>","name":"bodyClass"},{"type":{"names":["object"]},"description":"<p>style</p>","name":"cfg"},{"type":{"names":["boolean"]},"description":"<p>collapsible info panel</p>","name":"cfg.collapsible"},{"type":{"names":["boolean"]},"description":"<p>draggable info window</p>","name":"cfg.draggable"},{"type":{"names":["object"]},"description":"<p>inline css style</p>","name":"cfg.style"},{"type":{"names":["object"]},"name":"cfg.viewerOptions"},{"type":{"names":["boolean"]},"description":"<p>the single feature viewer is collapsible</p>","name":"cfg.viewerOptions.collapsible"},{"type":{"names":["expression"]},"description":"<p>the container of the viewer, expression from the context</p>","name":"cfg.viewerOptions.container"},{"type":{"names":["expression"]},"description":"<p>the geader of the viewer, expression from the context{expression}</p>","name":"cfg.viewerOptions.header"},{"type":{"names":["Array.<string>"]},"description":"<p>List of the plugins where to show the plugin</p>","name":"showIn"}],"examples":["{\n  \"name\": \"Identify\",\n  \"showIn\": [\"Settings\"],\n  \"cfg\": {\n      \"style\": {\n          \"position\": \"absolute\",\n          \"width\": \"100%\",\n          \"bottom\": \"0px\",\n          \"zIndex\": 1023,\n          \"maxHeight\": \"70%\",\n          \"marginBottom\": 0\n      },\n      \"draggable\": false,\n      \"collapsible\": true,\n      \"viewerOptions\": {\n      \"container\": \"{context.ReactSwipe}\",\n      \"header\": \"{context.SwipeHeader}\",\n      \"collapsible\": false\n  },\n  \"bodyClass\": \"mobile-feature-info\"\n }\n}"],"longname":"plugins.Identify","$longname":"plugins.Identify"},{"comment":"/**\n  * Locate Plugin. Provides button to locate the user's position on the map.\n  * By deafault it will follow the user until he moves the map. He can click again to\n  * restore the following mode.\n  * @class  Locate\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.style CSS to apply to the button\n  * @prop {string} cfg.text The button text, if any\n  * @prop {string} cfg.className the class name for the button\n  *\n  */","meta":{"range":[474,909],"filename":"Locate.jsx","lineno":19,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Locate Plugin. Provides button to locate the user's position on the map.\nBy deafault it will follow the user until he moves the map. He can click again to\nrestore the following mode.</p>","kind":"class","name":"Locate","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>the class name for the button</p>","name":"cfg.className"},{"type":{"names":["string"]},"description":"<p>CSS to apply to the button</p>","name":"cfg.style"},{"type":{"names":["string"]},"description":"<p>The button text, if any</p>","name":"cfg.text"}],"longname":"plugins.Locate","$longname":"plugins.Locate"},{"comment":"/**\n  * Login Plugin. Allow to login/logout or show user info and reset password tools\n  * @class Login\n  * @memberof plugins\n  * @static\n  *\n  * @prop {string} cfg.id identifier of the Plugin, by default `\"mapstore-login-menu\"`\n  * @prop {object} cfg.menuStyle inline style for the menu, by defualt:\n  * ```\n  * menuStyle: {\n  *      zIndex: 30\n  * }\n  *```\n  */","meta":{"range":[495,858],"filename":"Login.jsx","lineno":17,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Login Plugin. Allow to login/logout or show user info and reset password tools</p>","kind":"class","name":"Login","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>identifier of the Plugin, by default <code>&quot;mapstore-login-menu&quot;</code></p>","name":"cfg.id"},{"type":{"names":["object"]},"description":"<p>inline style for the menu, by defualt:</p>\n<pre class=\"prettyprint source\"><code>menuStyle: {\n     zIndex: 30\n}</code></pre>","name":"cfg.menuStyle"}],"longname":"plugins.Login","$longname":"plugins.Login"},{"comment":"/**\n * The Map plugin allows adding mapping library dependent functionality using support tools.\n * Some are already available for the supported mapping libraries (openlayers, leaflet, cesium), but it's possible to develop new ones.\n * An example is the MeasurementSupport tool that allows implementing measurement on a map.\n * The list of enabled tools can be configured using the tools property, as in the following example:\n *\n * ```\n * {\n * \"name\": \"Map\",\n * \"cfg\": {\n *     \"tools\": [\"measurement\", \"locate\", \"overview\", \"scalebar\", \"draw\", \"highlight\"]\n *   ...\n *  }\n * }\n * ```\n * // Each tool can be configured using the toolsOptions. Tool configuration can be mapping library dependent:\n * ```\n * \"toolsOptions\": {\n *        \"scalebar\": {\n *            \"leaflet\": {\n *                \"position\": \"bottomright\"\n *            }\n *            ...\n *        }\n *        ...\n *    }\n *\n * ```\n * or not\n * ```\n * \"toolsOptions\": {\n * \"scalebar\": {\n *        \"position\": \"bottomright\"\n *        ...\n *    }\n *    ...\n * ```\n * }\n * In addition to standard tools, you can also develop your own, ad configure them to be used.\n *\n * To do that you need to:\n *  - develop a tool Component, in JSX (e.g. TestSupport), for each supported mapping library\n * ```\n * const React = require('react');\n *    const TestSupport = React.createClass({\n *     propTypes: {\n *            label: PropTypes.string\n *        },\n *        render() {\n *            alert(this.props.label);\n *            return null;\n *        }\n *    });\n *    module.exports = TestSupport;\n * ```\n *  - include the tool(s) in the requires section of plugins.js amd give it a name:\n * ```\n *    module.exports = {\n *        plugins: {\n *            MapPlugin: require('../plugins/Map'),\n *            ...\n *        },\n *        requires: {\n *            ...\n *            TestSupportLeaflet: require('../components/map/leaflet/TestSupport')\n *        }\n *    };\n * ```\n *  - configure the Map plugin including the new tool and related options. You can configure the tool to be used for each mapping library, giving it a name and impl attributes, where:\n * ```\n *    {\n *      \"name\": \"Map\",\n *      \"cfg\": {\n *        \"tools\": [\"measurement\", \"locate\", \"overview\", \"scalebar\", \"draw\", {\n *          \"leaflet\": {\n *            \"name\": \"test\",\n *            \"impl\": \"{context.TestSupportLeaflet}\"\n *          }\n *          }],\n *        \"toolsOptions\": {\n *          \"test\": {\n *            \"label\": \"Hello\"\n *          }\n *          ...\n *        }\n *      }\n *    }\n * ```\n *  - name is a unique name for the tool\n *  - impl is a placeholder (“{context.ToolName}”) where ToolName is the name you gave the tool in plugins.js (TestSupportLeaflet in our example)\n * @memberof plugins\n * @class Map\n * @static\n *\n */","meta":{"range":[730,3507],"filename":"Map.jsx","lineno":24,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>The Map plugin allows adding mapping library dependent functionality using support tools.\nSome are already available for the supported mapping libraries (openlayers, leaflet, cesium), but it's possible to develop new ones.\nAn example is the MeasurementSupport tool that allows implementing measurement on a map.\nThe list of enabled tools can be configured using the tools property, as in the following example:</p>\n<pre class=\"prettyprint source\"><code>{\n&quot;name&quot;: &quot;Map&quot;,\n&quot;cfg&quot;: {\n    &quot;tools&quot;: [&quot;measurement&quot;, &quot;locate&quot;, &quot;overview&quot;, &quot;scalebar&quot;, &quot;draw&quot;, &quot;highlight&quot;]\n  ...\n }\n}</code></pre><p>// Each tool can be configured using the toolsOptions. Tool configuration can be mapping library dependent:</p>\n<pre class=\"prettyprint source\"><code>&quot;toolsOptions&quot;: {\n       &quot;scalebar&quot;: {\n           &quot;leaflet&quot;: {\n               &quot;position&quot;: &quot;bottomright&quot;\n           }\n           ...\n       }\n       ...\n   }</code></pre><p>or not</p>\n<pre class=\"prettyprint source\"><code>&quot;toolsOptions&quot;: {\n&quot;scalebar&quot;: {\n       &quot;position&quot;: &quot;bottomright&quot;\n       ...\n   }\n   ...</code></pre><p>}\nIn addition to standard tools, you can also develop your own, ad configure them to be used.</p>\n<p>To do that you need to:</p>\n<ul>\n<li>develop a tool Component, in JSX (e.g. TestSupport), for each supported mapping library<pre class=\"prettyprint source\"><code>const React = require('react');\nconst TestSupport = React.createClass({\n propTypes: {\n        label: PropTypes.string\n    },\n    render() {\n        alert(this.props.label);\n        return null;\n    }\n});\nmodule.exports = TestSupport;</code></pre></li>\n<li>include the tool(s) in the requires section of plugins.js amd give it a name:<pre class=\"prettyprint source\"><code>module.exports = {\n    plugins: {\n        MapPlugin: require('../plugins/Map'),\n        ...\n    },\n    requires: {\n        ...\n        TestSupportLeaflet: require('../components/map/leaflet/TestSupport')\n    }\n};</code></pre></li>\n<li>configure the Map plugin including the new tool and related options. You can configure the tool to be used for each mapping library, giving it a name and impl attributes, where:<pre class=\"prettyprint source\"><code>{\n  &quot;name&quot;: &quot;Map&quot;,\n  &quot;cfg&quot;: {\n    &quot;tools&quot;: [&quot;measurement&quot;, &quot;locate&quot;, &quot;overview&quot;, &quot;scalebar&quot;, &quot;draw&quot;, {\n      &quot;leaflet&quot;: {\n        &quot;name&quot;: &quot;test&quot;,\n        &quot;impl&quot;: &quot;{context.TestSupportLeaflet}&quot;\n      }\n      }],\n    &quot;toolsOptions&quot;: {\n      &quot;test&quot;: {\n        &quot;label&quot;: &quot;Hello&quot;\n      }\n      ...\n    }\n  }\n}</code></pre></li>\n<li>name is a unique name for the tool</li>\n<li>impl is a placeholder (“{context.ToolName}”) where ToolName is the name you gave the tool in plugins.js (TestSupportLeaflet in our example)</li>\n</ul>","memberof":"plugins","kind":"class","name":"Map","scope":"static","longname":"plugins.Map","$longname":"plugins.Map"},{"comment":"/**\n * Measure plugin. Allows to show the tool to measure dinstances, areas and bearing.\n * @class\n * @name Measure\n * @memberof plugins\n * @prop {boolean} showResults shows the measure in the panel itself.\n */","meta":{"range":[1092,1302],"filename":"Measure.jsx","lineno":29,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Measure plugin. Allows to show the tool to measure dinstances, areas and bearing.</p>","kind":"class","name":"Measure","memberof":"plugins","properties":[{"type":{"names":["boolean"]},"description":"<p>shows the measure in the panel itself.</p>","name":"showResults"}],"scope":"static","longname":"plugins.Measure","$longname":"plugins.Measure"},{"comment":"/**\n * MeasurePanel plugin. Shows the measure tool in the TOC. This is an old version of measure tool that will be removed soon.\n * @class\n * @name MeasurePanel\n * @memberof plugins\n * @deprecated since version 2017.03.01\n * @prop {boolean} showResults shows the measure in the panel itself. It can be disabled if you are using a plugin like MeasureResults to show the results\n */","meta":{"range":[918,1298],"filename":"MeasurePanel.jsx","lineno":26,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>MeasurePanel plugin. Shows the measure tool in the TOC. This is an old version of measure tool that will be removed soon.</p>","kind":"class","name":"MeasurePanel","memberof":"plugins","deprecated":"since version 2017.03.01","properties":[{"type":{"names":["boolean"]},"description":"<p>shows the measure in the panel itself. It can be disabled if you are using a plugin like MeasureResults to show the results</p>","name":"showResults"}],"scope":"static","longname":"plugins.MeasurePanel","$longname":"plugins.MeasurePanel"},{"comment":"/**\n * MeasureResults plugin. Shows the measure results. This is an old version of measure tool that will be removed soon.\n * It should be used with the MeasurePanel plugin\n * @class\n * @name MeasureResults\n * @memberof plugins\n * @deprecated since version 2017.03.01\n */","meta":{"range":[1614,1885],"filename":"MeasureResults.jsx","lineno":50,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>MeasureResults plugin. Shows the measure results. This is an old version of measure tool that will be removed soon.\nIt should be used with the MeasurePanel plugin</p>","kind":"class","name":"MeasureResults","memberof":"plugins","deprecated":"since version 2017.03.01","scope":"static","longname":"plugins.MeasureResults","$longname":"plugins.MeasureResults"},{"comment":"/**\n  * Notifications Plugin. Provides support to show notifications\n  * @class  Notifications\n  * @memberof plugins\n  * @static\n  * @example\n  * {name: \"Notifications\"}\n  *\n  */","meta":{"range":[396,574],"filename":"Notifications.jsx","lineno":15,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Notifications Plugin. Provides support to show notifications</p>","kind":"class","name":"Notifications","memberof":"plugins","scope":"static","examples":["{name: \"Notifications\"}"],"longname":"plugins.Notifications","$longname":"plugins.Notifications"},{"comment":"/**\n  * ScaleBox Plugin. Provides a selector for the scale of the map.\n  * @class  ScaleBox\n  * @memberof plugins\n  * @static\n  *\n  * @prop {object} cfg.style CSS to apply to the scalebox\n  * @prop {Boolean} cfg.readOnly the selector is readonly\n  * @prop {string} cfg.label label for the selector\n  * @prop {Boolean} cfg.useRawInput set true if you want to use an normal html input object\n  *\n  */","meta":{"range":[1317,1715],"filename":"ScaleBox.jsx","lineno":43,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>ScaleBox Plugin. Provides a selector for the scale of the map.</p>","kind":"class","name":"ScaleBox","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>label for the selector</p>","name":"cfg.label"},{"type":{"names":["Boolean"]},"description":"<p>the selector is readonly</p>","name":"cfg.readOnly"},{"type":{"names":["object"]},"description":"<p>CSS to apply to the scalebox</p>","name":"cfg.style"},{"type":{"names":["Boolean"]},"description":"<p>set true if you want to use an normal html input object</p>","name":"cfg.useRawInput"}],"longname":"plugins.ScaleBox","$longname":"plugins.ScaleBox"},{"comment":"/**\n * ScrollUp Plugin. Show a button that allows to scroll to the top of the page. Only for full pages.\n * @prop cfg.style {object} the style of the scrollUp div\n * @prop cfg.btnClassName {string} the class to set for the button\n * @prop cfg.showUnder {number} pixels of scroll before to show the button. Default 200\n * @memberof plugins\n * @class\n * @static\n */","meta":{"range":[883,1892],"filename":"ScrollTop.jsx","lineno":24,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{"id":"astnode100004109","name":"ScrollTop","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>ScrollUp Plugin. Show a button that allows to scroll to the top of the page. Only for full pages.</p>","properties":[{"type":{"names":["string"]},"description":"<p>the class to set for the button</p>","name":"cfg.btnClassName"},{"type":{"names":["number"]},"description":"<p>pixels of scroll before to show the button. Default 200</p>","name":"cfg.showUnder"},{"type":{"names":["object"]},"description":"<p>the style of the scrollUp div</p>","name":"cfg.style"}],"memberof":"plugins","kind":"class","scope":"static","name":"ScrollTop","longname":"plugins.ScrollTop","$longname":"plugins.ScrollTop"},{"comment":"/**\n * Search plugin. Provides search functionalities for the map.\n * Allows to display results and place them on the map. Supports nominatim and WFS as search protocols\n * You can configure the services and each service can trigger a nested search.\n *\n * @example\n * {\n *  \"name\": \"Search\",\n *  \"cfg\": {\n *    \"withToggle\": [\"max-width: 768px\", \"min-width: 768px\"]\n *  }\n * }\n * @class Search\n * @memberof plugins\n * @prop {object} cfg.searchOptions initial search options\n * @prop {bool} cfg.fitResultsToMapSize true by default, fits the result list to the mapSize (can be disabled, for custom uses)\n * @prop {searchService[]} cfg.searchOptions.services a list of services to perform search.\n * a **nominatim** search service look like this:\n * ```\n * {\n *  \"type\": \"nominatim\",\n *  \"searchTextTemplate\": \"${properties.display_name}\", // text to use as searchText when an item is selected. Gets the result properties.\n *  \"options\": {\n *    \"polygon_geojson\": 1,\n *    \"limit\": 3\n *  }\n * ```\n *\n * a **wfs** service look like this:\n * ```\n * {\n *      \"type\": \"wfs\",\n *      \"priority\": 2,\n *      \"displayName\": \"${properties.propToDisplay}\",\n *      \"subTitle\": \" (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])\",\n *      \"options\": {\n *        \"url\": \"/geoserver/wfs\",\n *        \"typeName\": \"workspace:layer\",\n *        \"queriableAttributes\": [\"attribute_to_query\"],\n *        \"sortBy\": \"ID\",\n *        \"srsName\": \"EPSG:4326\",\n *        \"maxFeatures\": 4,\n *        \"blackist\": [... an array of strings to exclude from the final search filter ]\n *      },\n *      \"nestedPlaceholder\": \"Write other text to refine the search...\",\n *      \"nestedPlaceholderMsgId\": \"id contained in the localization files i.e. search.nestedplaceholder\",\n *      \"then\": [ ... an array of services to use when one item of this service is selected],\n *      \"geomService\": { optional service to retrieve the geometry}\n *  }\n *\n * ```\n * The typical nested service needs to have some additional parameters:\n * ```\n * {\n *     \"type\": \"wfs\",\n *     \"filterTemplate\": \" AND SOMEPROP = '${properties.OLDPROP}'\", // will be appended to the original filter, it gets the properties of the current selected item (of the parent service)\n *     \"options\": {\n *       ...\n *     }\n * }\n * ```\n * **note:** `searchTextTemplate` is useful to populate the search text input when a search result is selected, typically with \"leaf\" services.\n * @prop {array|boolean} cfg.withToggle when boolean, true uses a toggle to display the searchbar. When array, e.g  `[\"max-width: 768px\", \"min-width: 768px\"]`, `max-width` and `min-width` are the limits where to show/hide the toggle (useful for mobile)\n */","meta":{"range":[1907,4641],"filename":"Search.jsx","lineno":60,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Search plugin. Provides search functionalities for the map.\nAllows to display results and place them on the map. Supports nominatim and WFS as search protocols\nYou can configure the services and each service can trigger a nested search.</p>","examples":["{\n \"name\": \"Search\",\n \"cfg\": {\n   \"withToggle\": [\"max-width: 768px\", \"min-width: 768px\"]\n }\n}"],"kind":"class","name":"Search","memberof":"plugins","properties":[{"type":{"names":["bool"]},"description":"<p>true by default, fits the result list to the mapSize (can be disabled, for custom uses)</p>","name":"cfg.fitResultsToMapSize"},{"type":{"names":["object"]},"description":"<p>initial search options</p>","name":"cfg.searchOptions"},{"type":{"names":["Array.<searchService>"]},"description":"<p>a list of services to perform search.\na <strong>nominatim</strong> search service look like this:</p>\n<pre class=\"prettyprint source\"><code>{\n &quot;type&quot;: &quot;nominatim&quot;,\n &quot;searchTextTemplate&quot;: &quot;${properties.display_name}&quot;, // text to use as searchText when an item is selected. Gets the result properties.\n &quot;options&quot;: {\n   &quot;polygon_geojson&quot;: 1,\n   &quot;limit&quot;: 3\n }</code></pre><p>a <strong>wfs</strong> service look like this:</p>\n<pre class=\"prettyprint source\"><code>{\n     &quot;type&quot;: &quot;wfs&quot;,\n     &quot;priority&quot;: 2,\n     &quot;displayName&quot;: &quot;${properties.propToDisplay}&quot;,\n     &quot;subTitle&quot;: &quot; (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])&quot;,\n     &quot;options&quot;: {\n       &quot;url&quot;: &quot;/geoserver/wfs&quot;,\n       &quot;typeName&quot;: &quot;workspace:layer&quot;,\n       &quot;queriableAttributes&quot;: [&quot;attribute_to_query&quot;],\n       &quot;sortBy&quot;: &quot;ID&quot;,\n       &quot;srsName&quot;: &quot;EPSG:4326&quot;,\n       &quot;maxFeatures&quot;: 4,\n       &quot;blackist&quot;: [... an array of strings to exclude from the final search filter ]\n     },\n     &quot;nestedPlaceholder&quot;: &quot;Write other text to refine the search...&quot;,\n     &quot;nestedPlaceholderMsgId&quot;: &quot;id contained in the localization files i.e. search.nestedplaceholder&quot;,\n     &quot;then&quot;: [ ... an array of services to use when one item of this service is selected],\n     &quot;geomService&quot;: { optional service to retrieve the geometry}\n }</code></pre><p>The typical nested service needs to have some additional parameters:</p>\n<pre class=\"prettyprint source\"><code>{\n    &quot;type&quot;: &quot;wfs&quot;,\n    &quot;filterTemplate&quot;: &quot; AND SOMEPROP = '${properties.OLDPROP}'&quot;, // will be appended to the original filter, it gets the properties of the current selected item (of the parent service)\n    &quot;options&quot;: {\n      ...\n    }\n}</code></pre><p><strong>note:</strong> <code>searchTextTemplate</code> is useful to populate the search text input when a search result is selected, typically with &quot;leaf&quot; services.</p>","name":"cfg.searchOptions.services"},{"type":{"names":["array","boolean"]},"description":"<p>when boolean, true uses a toggle to display the searchbar. When array, e.g  <code>[&quot;max-width: 768px&quot;, &quot;min-width: 768px&quot;]</code>, <code>max-width</code> and <code>min-width</code> are the limits where to show/hide the toggle (useful for mobile)</p>","name":"cfg.withToggle"}],"scope":"static","longname":"plugins.Search","$longname":"plugins.Search"},{"comment":"/**\n * Search plugin. Provides search functionalities for the map.\n * Allows to display results and place them on the map. Supports nominatim and WFS as search protocols\n * You can configure the services and each service can trigger a nested search.\n *\n * @example\n * {\n *  \"name\": \"Search\",\n *  \"cfg\": {\n *    \"withToggle\": [\"max-width: 768px\", \"min-width: 768px\"]\n *  }\n * }\n * @class Search\n * @memberof plugins\n * @prop {object} cfg.searchOptions initial search options\n * @prop {bool} cfg.fitResultsToMapSize true by default, fits the result list to the mapSize (can be disabled, for custom uses)\n * @prop {searchService[]} cfg.searchOptions.services a list of services to perform search.\n * a **nominatim** search service look like this:\n * ```\n * {\n *  \"type\": \"nominatim\",\n *  \"searchTextTemplate\": \"${properties.display_name}\", // text to use as searchText when an item is selected. Gets the result properties.\n *  \"options\": {\n *    \"polygon_geojson\": 1,\n *    \"limit\": 3\n *  }\n * ```\n *\n * a **wfs** service look like this:\n * ```\n * {\n *      \"type\": \"wfs\",\n *      \"priority\": 2,\n *      \"displayName\": \"${properties.propToDisplay}\",\n *      \"subTitle\": \" (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])\",\n *      \"options\": {\n *        \"url\": \"/geoserver/wfs\",\n *        \"typeName\": \"workspace:layer\",\n *        \"queriableAttributes\": [\"attribute_to_query\"],\n *        \"sortBy\": \"ID\",\n *        \"srsName\": \"EPSG:4326\",\n *        \"maxFeatures\": 4,\n *        \"blackist\": [... an array of strings to exclude from the final search filter ]\n *      },\n *      \"nestedPlaceholder\": \"Write other text to refine the search...\",\n *      \"nestedPlaceholderMsgId\": \"id contained in the localization files i.e. search.nestedplaceholder\",\n *      \"then\": [ ... an array of services to use when one item of this service is selected],\n *      \"geomService\": { optional service to retrieve the geometry}\n *  }\n *\n * ```\n * The typical nested service needs to have some additional parameters:\n * ```\n * {\n *     \"type\": \"wfs\",\n *     \"filterTemplate\": \" AND SOMEPROP = '${properties.OLDPROP}'\", // will be appended to the original filter, it gets the properties of the current selected item (of the parent service)\n *     \"options\": {\n *       ...\n *     }\n * }\n * ```\n * **note:** `searchTextTemplate` is useful to populate the search text input when a search result is selected, typically with \"leaf\" services.\n * @prop {array|boolean} cfg.withToggle when boolean, true uses a toggle to display the searchbar. When array, e.g  `[\"max-width: 768px\", \"min-width: 768px\"]`, `max-width` and `min-width` are the limits where to show/hide the toggle (useful for mobile)\n */","meta":{"range":[5024,7758],"filename":"Search.jsx","lineno":129,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Search plugin. Provides search functionalities for the map.\nAllows to display results and place them on the map. Supports nominatim and WFS as search protocols\nYou can configure the services and each service can trigger a nested search.</p>","examples":["{\n \"name\": \"Search\",\n \"cfg\": {\n   \"withToggle\": [\"max-width: 768px\", \"min-width: 768px\"]\n }\n}"],"kind":"class","name":"Search","memberof":"plugins","properties":[{"type":{"names":["bool"]},"description":"<p>true by default, fits the result list to the mapSize (can be disabled, for custom uses)</p>","name":"cfg.fitResultsToMapSize"},{"type":{"names":["object"]},"description":"<p>initial search options</p>","name":"cfg.searchOptions"},{"type":{"names":["Array.<searchService>"]},"description":"<p>a list of services to perform search.\na <strong>nominatim</strong> search service look like this:</p>\n<pre class=\"prettyprint source\"><code>{\n &quot;type&quot;: &quot;nominatim&quot;,\n &quot;searchTextTemplate&quot;: &quot;${properties.display_name}&quot;, // text to use as searchText when an item is selected. Gets the result properties.\n &quot;options&quot;: {\n   &quot;polygon_geojson&quot;: 1,\n   &quot;limit&quot;: 3\n }</code></pre><p>a <strong>wfs</strong> service look like this:</p>\n<pre class=\"prettyprint source\"><code>{\n     &quot;type&quot;: &quot;wfs&quot;,\n     &quot;priority&quot;: 2,\n     &quot;displayName&quot;: &quot;${properties.propToDisplay}&quot;,\n     &quot;subTitle&quot;: &quot; (a subtitle for the results coming from this service [ can contain expressions like ${properties.propForSubtitle}])&quot;,\n     &quot;options&quot;: {\n       &quot;url&quot;: &quot;/geoserver/wfs&quot;,\n       &quot;typeName&quot;: &quot;workspace:layer&quot;,\n       &quot;queriableAttributes&quot;: [&quot;attribute_to_query&quot;],\n       &quot;sortBy&quot;: &quot;ID&quot;,\n       &quot;srsName&quot;: &quot;EPSG:4326&quot;,\n       &quot;maxFeatures&quot;: 4,\n       &quot;blackist&quot;: [... an array of strings to exclude from the final search filter ]\n     },\n     &quot;nestedPlaceholder&quot;: &quot;Write other text to refine the search...&quot;,\n     &quot;nestedPlaceholderMsgId&quot;: &quot;id contained in the localization files i.e. search.nestedplaceholder&quot;,\n     &quot;then&quot;: [ ... an array of services to use when one item of this service is selected],\n     &quot;geomService&quot;: { optional service to retrieve the geometry}\n }</code></pre><p>The typical nested service needs to have some additional parameters:</p>\n<pre class=\"prettyprint source\"><code>{\n    &quot;type&quot;: &quot;wfs&quot;,\n    &quot;filterTemplate&quot;: &quot; AND SOMEPROP = '${properties.OLDPROP}'&quot;, // will be appended to the original filter, it gets the properties of the current selected item (of the parent service)\n    &quot;options&quot;: {\n      ...\n    }\n}</code></pre><p><strong>note:</strong> <code>searchTextTemplate</code> is useful to populate the search text input when a search result is selected, typically with &quot;leaf&quot; services.</p>","name":"cfg.searchOptions.services"},{"type":{"names":["array","boolean"]},"description":"<p>when boolean, true uses a toggle to display the searchbar. When array, e.g  <code>[&quot;max-width: 768px&quot;, &quot;min-width: 768px&quot;]</code>, <code>max-width</code> and <code>min-width</code> are the limits where to show/hide the toggle (useful for mobile)</p>","name":"cfg.withToggle"}],"scope":"static","longname":"plugins.Search","$longname":"plugins.Search"},{"comment":"/**\n * Text Search Services Editor Plugin. Allow to add and edit additional\n * text serch service used by text search plugin. User has to\n * save the map to persist service changes.\n *\n * @class SearchServicesConfig\n * @memberof plugins\n * @static\n *\n * @prop {string} cfg.id identifier of the Plugin\n * @prop {object} cfg.panelStyle inline style for the panel\n * @prop {string} cfg.panelClassName className for the panel\n */","meta":{"range":[1384,1809],"filename":"SearchServicesConfig.jsx","lineno":30,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Text Search Services Editor Plugin. Allow to add and edit additional\ntext serch service used by text search plugin. User has to\nsave the map to persist service changes.</p>","kind":"class","name":"SearchServicesConfig","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>identifier of the Plugin</p>","name":"cfg.id"},{"type":{"names":["string"]},"description":"<p>className for the panel</p>","name":"cfg.panelClassName"},{"type":{"names":["object"]},"description":"<p>inline style for the panel</p>","name":"cfg.panelStyle"}],"longname":"plugins.SearchServicesConfig","$longname":"plugins.SearchServicesConfig"},{"comment":"/**\n * TOC plugins\n * @name TOC\n * @class\n * @memberof plugins\n * @prop {boolean} cfg.activateQueryTool\n * @prop {object} cfg.layerOptions: options to pass to the layer.\n * Some of the layerOptions are: `legendContainerStyle`, `legendStyle`. These 2 allow to customize the legend:\n * For instance you can pass some stying props to the legend.\n * this example is to make the legend scrollable horizontally\n * ```\n * \"layerOptions\": {\n *  \"legendOptions\": {\n *    \"legendContainerStyle\": {\n *     \"overflowX\": \"auto\"\n *    },\n *    \"legendStyle\": {\n *      \"maxWidth\": \"250%\"\n *    }\n *   }\n *  }\n```\n */","meta":{"range":[10643,11245],"filename":"TOC.jsx","lineno":252,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>TOC plugins</p>","name":"TOC","kind":"class","memberof":"plugins","properties":[{"type":{"names":["boolean"]},"name":"cfg.activateQueryTool"},{"type":{"names":["object"]},"description":"<p>options to pass to the layer.\nSome of the layerOptions are: <code>legendContainerStyle</code>, <code>legendStyle</code>. These 2 allow to customize the legend:\nFor instance you can pass some stying props to the legend.\nthis example is to make the legend scrollable horizontally</p>\n<pre class=\"prettyprint source\"><code>&quot;layerOptions&quot;: {\n &quot;legendOptions&quot;: {\n   &quot;legendContainerStyle&quot;: {\n    &quot;overflowX&quot;: &quot;auto&quot;\n   },\n   &quot;legendStyle&quot;: {\n     &quot;maxWidth&quot;: &quot;250%&quot;\n   }\n  }\n }</code></pre>","name":"cfg.layerOptions:"}],"scope":"static","longname":"plugins.TOC","$longname":"plugins.TOC"},{"comment":"/**\n * Provides advanced export functionalities using WFS.\n * @memberof plugins\n * @name WFSDownload\n * @class\n * @prop {object[]} formats An array of name-label objects for the allowed formats available.\n * @prop {string} closeGlyph The icon to use for close the dialog\n * @example\n * {\n *  \"name\": \"WFSDownload\",\n *  \"cfg\": {\n *    \"formats\": [\n *            {\"name\": \"csv\", \"label\": \"csv\"},\n *            {\"name\": \"shape-zip\", \"label\": \"shape-zip\"},\n *            {\"name\": \"excel\", \"label\": \"excel\"},\n *            {\"name\": \"excel2007\", \"label\": \"excel2007\"},\n *            {\"name\": \"dxf-zip\", \"label\": \"dxf-zip\"}\n *    ]\n *  }\n * }\n */","meta":{"range":[592,1231],"filename":"WFSDownload.jsx","lineno":16,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>Provides advanced export functionalities using WFS.</p>","memberof":"plugins","name":"WFSDownload","kind":"class","properties":[{"type":{"names":["string"]},"description":"<p>The icon to use for close the dialog</p>","name":"closeGlyph"},{"type":{"names":["Array.<object>"]},"description":"<p>An array of name-label objects for the allowed formats available.</p>","name":"formats"}],"examples":["{\n \"name\": \"WFSDownload\",\n \"cfg\": {\n   \"formats\": [\n           {\"name\": \"csv\", \"label\": \"csv\"},\n           {\"name\": \"shape-zip\", \"label\": \"shape-zip\"},\n           {\"name\": \"excel\", \"label\": \"excel\"},\n           {\"name\": \"excel2007\", \"label\": \"excel2007\"},\n           {\"name\": \"dxf-zip\", \"label\": \"dxf-zip\"}\n   ]\n }\n}"],"scope":"static","longname":"plugins.WFSDownload","$longname":"plugins.WFSDownload"},{"comment":"/**\n  * ZoomIn Plugin. Provides button to zoom in\n  * @class  ZoomIn\n  * @memberof plugins\n  * @static\n  *\n  * @prop {object} cfg.style CSS to apply to the button\n  * @prop {string} cfg.className the class name for the button\n  *\n  */","meta":{"range":[670,904],"filename":"ZoomIn.jsx","lineno":21,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>ZoomIn Plugin. Provides button to zoom in</p>","kind":"class","name":"ZoomIn","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>the class name for the button</p>","name":"cfg.className"},{"type":{"names":["object"]},"description":"<p>CSS to apply to the button</p>","name":"cfg.style"}],"longname":"plugins.ZoomIn","$longname":"plugins.ZoomIn"},{"comment":"/**\n  * ZoomOut Plugin. Provides button to zoom out\n  * @class  ZoomOut\n  * @memberof plugins\n  * @static\n  *\n  * @prop {object} cfg.style CSS to apply to the button\n  * @prop {string} cfg.className the class name for the button\n  *\n  */","meta":{"range":[671,908],"filename":"ZoomOut.jsx","lineno":19,"path":"/opt/jenkins_home/workspace/MapStore2-Releaser/web/client/plugins","code":{}},"description":"<p>ZoomOut Plugin. Provides button to zoom out</p>","kind":"class","name":"ZoomOut","memberof":"plugins","scope":"static","properties":[{"type":{"names":["string"]},"description":"<p>the class name for the button</p>","name":"cfg.className"},{"type":{"names":["object"]},"description":"<p>CSS to apply to the button</p>","name":"cfg.style"}],"longname":"plugins.ZoomOut","$longname":"plugins.ZoomOut"}]}],"symbols":["plugins","plugins.AutoMapUpdate","plugins.BackgroundSelector","plugins.BackgroundSwitcher","plugins.DrawerMenu","plugins.FullScreen","plugins.GlobeViewSwitcher","plugins.GoFull","plugins.Identify","plugins.Locate","plugins.Login","plugins.Map","plugins.Measure","plugins.MeasurePanel","plugins.MeasureResults","plugins.Notifications","plugins.ScaleBox","plugins.ScrollTop","plugins.Search","plugins.Search","plugins.SearchServicesConfig","plugins.TOC","plugins.WFSDownload","plugins.ZoomIn","plugins.ZoomOut"]}},"app":{"title":"MapStore 2 documentation","base":"/mapstore/docs/","entrance":"content:site","routing":{"method":"path","caseSensitive":true},"meta":null,"server":"static"},"template":{"name":"Docma Default Template","version":"1.7.0","author":"Onur Yıldırım (onur@cutepilot.com)","license":"MIT","main":"index.html","options":{"title":"MapStore 2","sidebar":true,"collapsed":false,"outline":"tree","badges":true,"search":true,"navbar":true,"navItems":[{"iconClass":"ico-book","label":"Guides","items":[{"label":"Home","href":"./"},{"separator":true},{"label":"Developer's guide","href":"developer-guide"},{"separator":true},{"label":"Plugins Architecture","href":"plugins-architecture"},{"label":"Configuring Plugins","href":"plugins-documentation"},{"separator":true},{"label":"Project Creation Script","href":"project-creation-script"}]},{"iconClass":"ico-mouse-pointer","label":"Reference","items":[{"label":"Framework","href":"api/framework"},{"separator":true},{"label":"JavaScript API","href":"api/jsapi"},{"separator":true},{"label":"Plugins","href":"api/plugins"}]},{"iconClass":"ico-md ico-download","label":"Download","href":"index.html","items":[{"label":"MapStore 2 Releases","href":"https://github.com/geosolutions-it/MapStore2/releases","target":"_blank"},{"label":"MapStore 2 tar.gz","href":"https://github.com/geosolutions-it/MapStore2/tarball/master","target":"_blank"},{"label":"MapStore 2 .zip","href":"https://github.com/geosolutions-it/MapStore2/zipball/master","target":"_blank"}]},{"iconClass":"ico-md ico-github","label":"GitHub","href":"https://github.com/geosolutions-it/MapStore2","target":"_blank"}],"symbolMeta":false}},"_":{"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","logsEnabled":false}};
!function(){var e={};e.createChild=function(e,t,n){n=n||{};var o=document.createElement(t||"div");return Object.keys(n).forEach(function(e){o[e]=n[e]}),e.appendChild(o),o},e.getDocmaElem=function(){var t=document.getElementById(docma._.elementID);return t||(t=e.createChild(document.body,"div",{id:docma._.elementID})),t},e.getContentElem=function(){var e=document.getElementById(docma._.contentElementID);if(!e)throw new Error("Partial "+docma._.partials.content+' should have an element with id="'+docma._.contentElementID+'".');return e},e.loadCompiledContent=function(t){e.getDocmaElem().innerHTML=t},e.loadContent=function(t){e.getContentElem().innerHTML=t,e.scrollTo()},e.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var o=document.documentElement;return{top:n.top+window.pageYOffset-o.clientTop,left:n.left+window.pageXOffset-o.clientLeft}}}},e.scrollTo=function(t){if(!(t=(t||window.location.hash||"").replace(/^#/,"")))return void(document.body.scrollTop=0);var n=document.getElementById(t);n&&(document.body.scrollTop=e.getOffset(n).top)},e.fixAnchors=function(){docma.app.base&&setTimeout(function(){var e,t,n=document.querySelectorAll('a[href^="#"]');for(e=0;e<n.length;e++){t=n[e];var o=t.getAttribute("href");"#"===o.slice(0,1)&&o.length>1&&(o=window.location.pathname+(window.location.search||"")+o,t.setAttribute("href",o))}},50)},docma.dom=Object.freeze(e)}();
!function(){dust.filters=dust.filters||{},dust.filters.$pt=function(t){return docma.utils.parseTicks(t)},dust.filters.$pnl=function(t){return docma.utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return docma.utils.parseLinks(t)},dust.filters.$tl=function(t){return docma.utils.trimLeft(t)},dust.filters.$p=function(t){return docma.utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return docma.utils.normalizeTabs(t)},dust.filters.$desc=function(t){return docma.utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""};var t=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;dust.filters.$val=function(e){var n=docma.utils.notate(e,"meta.code.value");if(void 0===n)return"";if("string"!=typeof n)return n;var i=docma.utils.notate(e,"type.names")||[];return!/['"`]/.test(n.slice(0,1))&&i.indexOf("String")>=0&&(1===i.length||-1===t.indexOf(n))?'"'+n+'"':n},dust.filters.$id=function(t){var e;if("string"==typeof t)e=t;else{e=(docma.utils.isConstructor(t)?"new-":"")+t.$longname}return e.replace(/ /g,"-")}}();
!function(){function o(o,e,n){return e?(o&&"/"!==e.slice(0,1)&&(e="/"+e),n&&"/"!==e.slice(-1)&&(e+="/"),e):o||n?"/":""}function e(o,e){e=void 0===e?window.location.search||"":e,"?"===e.slice(0,1)&&(e=e.slice(1)),o=o.replace(/[\[\]]/g,"\\$&");var n=new RegExp("&?"+o+"(=([^&#]*)|&|#|$)"),a=n.exec(e);return a&&a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):""}Object.defineProperty(docma,"location",{configurable:!1,get:function(){var n=o(!0,window.location.pathname,!0),a=o(!0,docma.app.base,!0),c=n;return n.slice(0,a.length)===a&&(c=n.slice(a.length-1,n.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:o(!0,docma.app.entrance,!1),base:a,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:n,pathname:c,path:c+(window.location.search||""),getQuery:e}}}),docma.location=Object.freeze(docma.location)}();
!function(){function e(e){return e&&""!==e.trim()?e:null}function n(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2")}function t(e){return e}var r={};r.notate=function(e,n){if("object"==typeof e){var t,i=Array.isArray(n)?n:n.split("."),a=i[0];if(a)return t=e[a],i.length>1?(i.shift(),r.notate(t,i)):t}},r.getName=function(e){if(e.alias){var t=n(r.notate(e,"meta.code.name")||"");if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},r.getLongName=function(e){var t=n(e.longname);if(e.alias){var i=n(r.notate(e,"meta.code.name")||"");if(!i)return t;var a=n(e.memberof||"");if(!a)return i;var o=new RegExp("^"+a+"[#\\.~:]"),s="instance"===e.scope?"#":".";return o.test(i)?i:a+s+i}return t},r.getFullName=r.getLongName,r.getCodeName=function(e){return n(r.notate(e,"meta.code.name")||"")||r.getLongName(e)},r.getSymbolByName=function(e,n){var t,i;for(t=0;t<e.length;t++){if(i=e[t],i.name===n||i.longname===n||r.getFullName(i)===n)return i;if(i.$members){var a=r.getSymbolByName(i.$members,n);if(a)return a}}return null},r.isDeprecated=function(e){return e.deprecated},r.isGlobal=function(e){return"global"===e.scope},r.isNamespace=function(e){return"namespace"===e.kind},r.isModule=function(e){return"module"===e.kind},r.isClass=function(e){return!r.isConstructor(e)&&("class"===e.kind||"ClassDeclaration"===r.notate(e,"meta.code.type"))},r.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===r.notate(e,"meta.code.type")},r.isStaticMember=function(e){return"static"===e.scope},r.isStatic=r.isStaticMember,r.isInner=function(e){return"inner"===e.scope},r.isInstanceMember=function(e){return"instance"===e.scope},r.isMethod=function(e){var n=r.notate(e,"meta.code.type");return"function"===e.kind||"MethodDefinition"===n||"FunctionExpression"===n},r.isFunction=r.isMethod,r.isInstanceMethod=function(e){return r.isInstanceMember(e)&&r.isMethod(e)},r.isStaticMethod=function(e){return r.isStaticMember(e)&&r.isMethod(e)},r.isProperty=function(e){return"member"===e.kind},r.isInstanceProperty=function(e){return r.isInstanceMember(e)&&r.isProperty(e)},r.isStaticProperty=function(e){return r.isStaticMember(e)&&r.isProperty(e)},r.isTypeDef=function(e){return"typedef"===e.kind},r.isCustomType=r.isTypeDef,r.isEnum=function(e){return e.isEnum},r.isReadOnly=function(e){return e.readonly},r.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},r.isPrivate=function(e){return"private"===e.access},r.isProtected=function(e){return"protected"===e.access},r.isUndocumented=function(e){return!e.comments},r.hasDescription=function(n){return Boolean(e(n.classdesc)||e(n.description))},r.getTypes=function(e){if("class"===e.kind)return"class";var n=r.notate(e,"type.names")||[];return n=n.map(function(e){return e.replace(/\.</g,"<")}).join("|"),e.isEnum?"enum<"+n+">":n},r.getReturnTypes=function(e){var n=e.returns;if(!Array.isArray(n))return"void";var t,i=n.reduce(function(e,n){return t=r.notate(n,"type.names"),Array.isArray(t)?e.concat(t):e},[]);return i.length>0?i.join("|"):"void"},r.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},r.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,n,t){return r.normalizeTabs(r._wrapEscapeCode(t,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,n,t){return r._wrapEscapeCode(t)})},r.parseNewLines=function(e,n){return n=n||{},r._tokenize(e,function(e,t){if(t)return e;var r=e.split(/\n{2,}/);return r.length<=1&&n.keepIfSingle?e:r.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},r.parseLinks=function(e,n){n=n||{};var t=/\{@link +([^}]*?)\}/g,i=e.replace(t,function(e,t){var r,i,a=t.split("|");return 1===a.length?r=i=a[0].trim():(r=a[0].trim(),i=a[1].trim()),'<a href="'+r+'"'+(n.target?' target="'+n.target+'"':"")+">"+i+"</a>"});return r.parseTicks(i)},r.parse=function(e,n){return n=n||{},e=r.trimLeft(e),e=r.parseNewLines(e,n),e=r.parseTicks(e),r.parseLinks(e,n)},r.normalizeTabs=function(e){var n=e.match(/^\s*/gm),t=1/0;if(n.forEach(function(e,n){e=e.replace(/\t/g,"  "),n>0&&(t=Math.min(e.length,t))}),t!==1/0){var r=new RegExp("^\\s{"+t+"}","g");e=e.replace(r,"")}e=e.replace(/^\s*/,"");var i;return e.replace(/(\n+)(\s+)/gm,function(e,n,t){return i=t.replace(/\t/g,"  "),i=new Array(i.length-i.length%2+1).join(" "),n+i})},r.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var n=r.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return r.isConstructor(e)&&(n+=" constructor"),r.isMethod(e)&&(n+=" method"),r.isProperty(e)&&(n+=" property"),n.replace(/[><"'`\n\r]/g,"").toLowerCase()},r.getCodeFileInfo=function(e){return{filename:r.notate(e,"meta.filename"),lineno:r.notate(e,"meta.lineno"),path:r.notate(e,"meta.path")}},r.listType=function(e){return e.map(function(e){return r._wrapEscapeCode(e)}).join(", ")},r.listTypeDesc=function(e){if(!e||0===e.length)return"";var n,t=e.map(function(e){return n=r.parse(e.description||"",{keepIfSingle:!0}),n&&(n="&nbsp;&nbsp;—&nbsp;&nbsp;"+n),r._wrapEscapeCode(e.type.names.join("|"))+n});return t.length>1?"<ul>\n"+t.join("</li>\n<li>")+"\n</ul>":t},r._find=function(e,n){if(!e||!n)return null;var t,r,i=null;for(t=0;t<e.length;t++)if((r=e[t])&&"object"==typeof r){for(var a in n)if(void 0!==n[a]&&n.hasOwnProperty(a)){if(n[a]!==r[a]){i=null;break}i=r}if(i)break}return i},r._assign=function(e,n,t){e=e||{};var r;for(r in n)n.hasOwnProperty(r)&&(t?Object.defineProperty(e,r,{enumerable:!0,value:n[r]}):e[r]=n[r]);return e},r._values=function(e){if(Array.isArray(e))return e;var n,t=[];for(n in e)e.hasOwnProperty(n)&&t.push(e[n]);return t},r._wrapEscapeCode=function(e,n){return e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},r._tokenize=function(e,n){"function"!=typeof n&&(n=t);if(e.indexOf("```")<0)return[n(e,!1)];var r,i="```".length,a="",o="",s=[],u=!1;for(r=0;r<e.length;r++)a+=e[r],o+=e[r],a.length>i&&(a=a.slice(-i)),"```"===a&&(u=!u,u?(s.push(n(o.slice(0,-i),!1)),o=a):(s.push(n(o,!0)),o=""));return s},docma.utils=r}();
!function(){function t(t,e){l.info("Event:",t,e?e[0]:""),y.trigger(t,e)}function e(t,n){if(n&&!(u.indexOf(n)<0)){if(t)docma.app.routing.caseSensitive||(t=t.toLowerCase());else{if(n!==e.Type.API)return;t=f}var o=p._find(docma.routes,{type:n,name:t});o&&p._assign(this,o)}}function n(t,e){dust.render(t,docma,function(t,n){if(t)throw t;m.loadCompiledContent(n),"function"==typeof e&&e()})}function o(){t(docma.Event.Render,[docma.currentRoute]),d&&(t(docma.Event.Ready),d=!1)}function r(o,r){docma._.currentRoute=e.create(null),n(docma._.partials.notFound,function(){if(t(docma.Event.Render,[null]),m.scrollTo(),"function"==typeof r)return r(404);throw new Error("Page or content not found for route: "+JSON.stringify(o))})}function a(){if(s){var t=sessionStorage.getItem("redirectPath")||null;if(t)return sessionStorage.removeItem("redirectPath"),l.info("Redirecting to:",t),page.redirect(t),!0}return!1}function i(t){var e=t||window.location.search;return/^[?&]/.test(e)&&(e=e.slice(1)),e||null}var c,u,d=!1,s="path"===docma.app.routing.method,f="_def_",p=docma.utils,m=docma.dom,l={};["log","info","warn","error"].forEach(function(t){!function(){l[t]=function(){docma._.logsEnabled&&console[t].apply(console,arguments)}}()}),docma.addFilter=function(t,e){if(docma.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,docma},docma.removeFilter=function(t){return delete dust.filters[t],docma},docma.filterExists=function(t){return"function"==typeof dust.filters[t]};var y=new EventEmitter;docma.Event={Ready:"ready",Render:"render",Route:"route"},docma.on=function(t,e){return y.on.apply(y,arguments),docma},docma.once=function(){return y.once.apply(y,arguments),docma},docma.off=function(){return y.off.apply(y,arguments),docma},docma.addListener=docma.on,docma.addListenerOnce=docma.once,docma.removeListener=docma.off,Object.defineProperty(docma,"currentRoute",{configurable:!1,get:function(){return docma._.currentRoute}}),Object.defineProperty(docma,"documentation",{configurable:!1,get:function(){return docma._.documentation}}),Object.defineProperty(docma,"symbols",{configurable:!1,get:function(){return docma._.symbols}}),e.Type={API:"api",CONTENT:"content"},u=p._values(e.Type),e.prototype.exists=function(){return Boolean(this.id)},e.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},e.prototype.isCurrent=function(){return this.isEqualTo(docma.currentRoute)},e.prototype.apply=function(){return this.type===e.Type.API?(docma._.documentation=docma.apis[this.name].documentation,docma._.symbols=docma.apis[this.name].symbols):(docma._.documentation=null,docma._.symbols=null),t(docma.Event.Route,[this]),docma.render(this),this},e.prototype.toString=function(){return JSON.stringify(this)},e.create=function(t,n){return new e(t,n)},e.fromID=function(t){if("string"!=typeof t)return l.warn("Route ID is not a string: "+t),new e(null);var n=t.split(":");return new e(n[1],n[0])},e.fromQuery=function(t){if(!t)return new e(null);var n=t.split("&")[0].split("="),o=n[0].toLowerCase();return new e(n[1],o)},Object.defineProperty(docma,"Route",{configurable:!1,get:function(){return e}}),docma.fetch=function(t,e){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState){var o=200===n.status?n.responseText:"";return l.log("XHR GET:",n.status,t),e(n.status,o)}},n.open("GET",t,!0),n.send()},docma.render=function(t,a){if(!t||!t.exists())return r(t,a);if(!t.isEqualTo(docma.currentRoute)){docma._.currentRoute=t;var i="function"==typeof a;t.type===e.Type.API?n(docma._.partials.api,function(){o(),i&&a(200),m.fixAnchors(),m.scrollTo()}):docma.fetch(t.contentPath,function(e,c){if(404===e)return r(t,a);n(docma._.partials.content,function(){m.loadContent(c),o(),i&&a(e),m.fixAnchors()})})}},docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),s&&(page("(/)?api/:apiName?",function(t,n){var o=t.params.apiName||f,r=e.create(o,e.Type.API);if(!r||!r.exists())return n();r.apply()}),page("(/)?:content",function(t,n){var o=t.params.content,r=e.create(o,e.Type.CONTENT);if(!r||!r.exists())return n();r.apply()})),page("(/)?",function(t,n){a()||setTimeout(function(){var o,r=i(t.querystring);if(s){if(r)return n();o=c}else l.log("Query-string:",r),o=r?e.fromQuery(r):c;if(!o||!o.exists())return n();o.isCurrent()||o.apply()},100)}),page("*",function(t){l.warn("Unknown Route:",t.path),e.create(null).apply()}),l.info("Docma SPA Configuration:"),l.info("App Title:          ",docma.app.title),l.info("Routing Method:     ",docma.app.routing.method),l.info("App Server:         ",docma.app.server),l.info("Base Path:          ",docma.app.base),l.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){d=!0,c=e.fromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),l.info("Docma SPA loaded!")}}();
docma = Object.freeze(docma);