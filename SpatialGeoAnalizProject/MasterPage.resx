<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAg
        EgAAAk1TRnQBSQFMAgEBBQEAAZgBAAGYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8AJwADBAEGAywBRAM9AW0DPQFuAy4BSAMGAQjkAAM6AWUDHgHoAwYB+gMw
        AdUDMAHUAwoB+AMaAewDPQFvAwABAdgAA0QBlAMMAfcDQAF4AwsBDwgAAwkBDAM9AXADEgHzA0QBoQMA
        AQHQAAM5AWEDCgH4AykBPgwAAwUBBwM7AWgDJgE4AyMBNAMSAfMDPQFwzAADAwEEAyIB5ANBAX0QAANA
        AXcDAAH/AxIB8gMCAQMDPQFvAxgB7QMHAQnIAAMoATwDAgH9Aw8BFAMNAREDKQE/AyYBOANAAbQDMwHR
        AwwB9gM+Ab4EAAMIAQsDDAH3Ay8BSsgAAzkBYwMmAd8EAAM4AccDAAH/AysB2wMwAUwDAAEBAwQBBgMA
        AQEIAAMzAdEDPgFyyAADOQFjAyYB4AQAAzwBvwMAAf8DHAHqA0MBhQMMARADCAELAwEBAggAAzMB0QM+
        AXHIAAMmAToDAgH9AxABFgMHAQoDIQEwAwoBDgNBAX8DJgHgAwgB+QM6AcQEAAMKAQ0DCgH4Ay4BScgA
        AwIBAwMmAeEDQgGCEAADPAFqAwAB/wMTAfADAgEDAz4BcwMcAesDBgEIzAADNgFcAwgB+QMsAUQMAAME
        AQUDOAFgAyIBMgMmATkDDgH1AzwBatQAA0IBjAMIAfkDQgGAAw8BFAgAAw0BEQNAAXgDDAH2A0QBmgMA
        AQHYAAM3AV0DJAHjAwIB/QMqAd0DKgHcAwQB+wMfAecDOwFnAwABAeAAAwMBBAMoATwDOgFlAzsBZwMq
        AUADBAEF/wDdAAMCAQMDMQFOA1ABmgNaAc0DWwHtAysB/AMrAfwDWwHtA1oBzQNQAZoDMQFOAwIBAyAA
        A0QBeQNAAf0DQAH9A0MBeCgAA0gBhgHTAZcBQgH/AcwBkgFBAf8BjwFYARoB/yQAAwwBEAJUAVIBpgJU
        AVIBpgJUAVIBpgJUAVIBpgJUAVIBpgJUAVIBpgJUAVIBpgJUAVIBpgJUAVIBpgJUAVIBpgJUAVIBpgJR
        AU8BnAMDAQQIAAMdASkDWgHVA1cBxQM/AW0DJAE1Aw4BEwMCAQMDAgEDAw4BEwMkATUDPwFtA1cBxQNa
        AdUDHQEpDAADCQEMAzsBYwMPARQEAANZAcwDJgE4AyYBOANZAcwEAAMPARQDOwFjAwkBDBQAAfgBugFX
        Af8B/AHuAdgB/wGyAXABKwH/AZ4BYQEhAf8BowFmASEB/wGiAWsBKgH/Ay4BRxAAA1YBuwgAAygBPQM5
        AV8DKwFCAy8BSgMvAUoDLgFHAwUBBwMuAUgDGgElAy0BRgMdASkDJAE1AkYBRQF/AxUBHQgAA1kB0gM8
        AWckAAM7AWQDPAFnA1kB0ggAAwkBDANZAcMDWAHGA14B5QNIAYcDTgHwAwcBCQMHAQkDTgHwA0gBhwNe
        AeUDWAHGA1kBwwMJAQwMAAH3AaQBRwH/Ac8BlgE6Af8B9AHrAdgB/wH+AfUB3AH/AY0BUgEXAf8BlgFY
        ARkB/wGYAVwBHQH/AfsB6gHQAf8MAANoAf8DAAH/CAADKAE9AzgBXgM4AVwDPAFmAzwBZgM7AWMDHgEr
        ATABXQHyAf8DVgG2ATABXQHyAf8BVQJWAbQBXAFgAWMB1AJGAUUBfgMVAR0IAAMgAf8DAAEBBAADEgEZ
        AzEBTQM/AW0DRQF9A0UBfQM/AW0DMQFNAxIBGQM7AWQDAAEBAyAB/wgAAzsBYwNZAccDAAEBAyYBOQNL
        AY4DIgEyCAADIgEyA0sBjgMmATkDAAEBA1kBxwM7AWMMAAHEAZUBPgH/Af0B8AHVAf8B9QHzAegB/wH7
        AfgB9gH/AZoBWQEbAf8BpgFfAR8B/wGoAWIBIwH/Ae8B5wHYAf8B9wHqAdcB/wQAAwYBCAMAAf8DpAH/
        CAADKAE9AzgBXgNQAZoDVAGsA1QBrANUAaYDHwEsATABXQHyAf8DVgG2ATABXQHyAf8BVQJWAbQBXAFg
        AWMB1AJGAUUBfgMVAR0IAAMgAf8DLQFGA0oBiwM+AWwDJAE1Aw4BEwMCAQMDAgEDAw4BEwMkATUDPgFs
        A0oBiwMtAUYDIAH/CAADDwEUA14B5QMmATkIAAMcASgDPwFtAz8BbQMcASgIAAMmATkDXgHlAw4BEwgA
        AcUBjQE7Af8BpAFjASAB/wH2AfMB7wL/AfsB8wH/AZEBVwErAf8BtAFpASYB/wG8AXIBLQH/AcEBdAEz
        Af8B8QHtAeQB/wH8AeoBzAH/BwAB/wM1Af8MAAMoAT0DOAFeA1EBnANUAa4DVAGuA1MBqAMZASMBVQFk
        AYcB7ANSAakBMAFdAfIB/wFVAlYBtAFcAWABYwHUAkYBRQF+AxUBHQgAAyAB/wM7AWMkAAM7AWQDOwFj
        AyAB/wwAA0gBhwNLAY4EAAM5AV8DNQFWAwQBBQMEAQUDNQFWAzkBXwQAA0sBjgNIAYcMAAGkAWUBJQH/
        AXEBRgEMAf8B+gH1AegB/wGNAVIBHgH/AbMBZgElAf8BzwGCASwB/wH3AfAB7QH/A/0B/wH4AfYB9QH/
        AeoB5QHYAf8BCAEFAQIB/wMcAf8QAAMoAT0DOAFeGAADLAFEAVYCWAG5AVMCVAGsAVwBYAFjAdQCRgFF
        AX4DFQEdCAADIAH/AwABAQQAAxIBGQMxAU0DPwFtA0UBfQNFAX0DPwFtAzEBTQMSARkDOwFkAwABAQMg
        Af8EAANDAXgDWQHMA04B8AMiATIDHQEpAzUBVgMxAU8DSAGIA0gBiAMxAU8DNQFWAxwBKAMiATIDTgHw
        A1kBzANDAXgEAAFhAUsBFQH/AWEBQwE4Af8BWQErAQAB/wGrAVsBIgH/AcgBdQEtAf8B5AGTATgB/wHq
        Ae0B8wX/AfkB9wH2Af8B7QHpAeYB/wEMAQ4BDwH/FAADKAE9AzgBXgMGAQgDRAF6AVECUgGnAzkBXxAA
        Az0BaQNKAYwCRgFFAX4DFQEdCAADIAH/Ay0BRgNKAYsDPgFsAyQBNQMOARMDAgEDAwIBAwMOARMDJAE1
        Az4BbANKAYsDLQFGAyAB/wQAAzMB/gMmATgDBwEJBAADPwFtAwQBBQNIAYgIAANIAYgDBAEFAz8BbQQA
        AwcBCQMmATgDMwH+BAAB5gHfAdUB/wGKAVgBQgH/AY0BSQEcAf8BrwFjASYB/wHYAYkBMgH/AdQBrwF0
        Af8B6wHgAcMB/wHvAesBywH/AcYBxwHFAf8C/gH9Af8B5wHPAb0B/xQAAygBPQM4AV4BUAJRAZ8BLwGY
        AfgB/wEvAZgB+AH/AS8BmAH4Af8DOwFlFAACRgFFAX4DFQEdCAADIAH/AzsBYyQAAzsBZAM7AWMDIAH/
        BAADMwH+AyYBOAMHAQkEAAM/AW0DBAEFA0gBiAgAA0gBiAMEAQUDPwFtBAADBwEJAyYBOAMzAf4EAAHn
        AeAB1wH/AfEB7gHzAf8B/AL7Af8BtQFoAScB/wHTAY4BOAL/Ae8BtAH/AfoB6QGsAf8B4wHYAYAB/wH1
        AdgBZAH/Ac4BxAGzAf8B9wH0AdMB/xQAAygBPQM4AV4BTQFwAY8B7wEvAZgB+AH/AVoCXQHKAVcBWgFc
        AcUBUQJSAaEDEAEVA1UBrQNVAa0DVQGtA0gBhQJGAUUBfgMVAR0IAAMgAf8DAAEBBAADFAEbAzEBTgM/
        AW0DRQF9A0UBfQM/AW0DMQFOAxQBGwM7AWQDAAEBAyAB/wQAA0MBeANZAcwDTgHwAyIBMgMcASgDNQFW
        AzEBTwNJAYkDSAGIAzEBTgM1AVcDHAEoAyIBMgNOAfADWQHMA0MBeAQAAeYB4QHSAf8B7wHuAe0B/wLs
        AeMB/wHeAasBjwH/AdIB2AHjAf8B+gHtAb4B/wH7AdYBdAH/Af0B+wH+Af8B+wH5AeUB/wH1Ae0B4wH/
        AcsBbgEpAf8UAAMoAT0DOAFeAlsBXQHIAS8BmAH4Af8BVgJYAbsBQQFlAbsB+QFRAlIBoQMQARUDVAGm
        A1IBpwNSAacDRwGBAkYBRQF+AxUBHQgAAyAB/wM1AVgDWgHNA1UB6gNVAbUDTAGTA0cBggNHAYIDTAGT
        A1UBtQNVAeoDWgHNAzUBWAMgAf8MAANIAYcDSwGOBAADOQFfAzUBVwMEAQUDBAEFAzUBVwM5AV8EAANL
        AY4DSAGHDAAB7AHYAc0B/wHvAeUB2wH/Ad8B1gG8Av8B8gH5Af8B8QHjAc8C/wHoAZQB/wH6AdEBcgH/
        Af4B7QGnAv8B7AHcAf8B+QH2AasB/xgAAygBPQM4AV4DHQEqAVwBXgFfAc4BVgJYAbsBVwFfAXsB6AMk
        ATUEAAMEAQYDBQEHAwUBBwMDAQQCRgFFAX4DFQEdCAADIAH/A1gB0QMtAUUDAQECGAADAQECAy0BRQNZ
        AdIDIAH/CAADDwEUA14B5QMmATkIAAMcASgDPwFtAz8BbQMcASgIAAMmATkDXgHlAw8BFAwAAeoB3gHW
        Af8BZgE4ARAB/wGUAUIBGAH/AfsB8AHnAf8B8QG/AWYB/wH9AcYBaAH/Af4BzgFrAf8B+wHoAZUB/wHk
        AdcBkAH/GAADKAE9AzgBXgMBBAIBAwMYASIDCAELAwABAQMCAQMDCwEPAwsBDwMLAQ8DBQEHAkYBRQF+
        AxUBHQgAAyAB/wMQARYoAAMRARcDIAH/CAADOwFjA1kBxwMAAQEDJgE5A0sBjgMiATIIAAMiATIDSwGO
        AyYBOQMAAQEDWQHHAzsBYwwAAcoBsQGgAf8BSgEoAQ0B/wH5AfAB3wH/AfYB+QHtAf8B4AG2AWgB/wHy
        Ab8BYwL/AfcBwgH/AfoC/AH/AfwB9QH8Af8YAAMoAT0DOAFeA1ABmgNWAasDVgGrA1YBqwNCAXMDIgEy
        A1EBnwNRAZ8DUQGfAzgBXgJGAUUBfgMVAR0IAANZAdIDPAFnKAADPAFnA1kB0ggAAwkBDANZAcMDWQHH
        A14B5QNIAYcDTgHwAwcBCQMHAQkDTgHwA0gBhgNeAeUDWQHHA1kBwwMJAQwQAAHlAdQBqQH/AYUBSAEW
        Af8B8gHtAdsB/wHhAcwBxgH/AfwB8wHYAf8B9AH+AfwB/wHZAcUBgQH/HAADKAE9AzgBXgNKAYwDVAGm
        A1QBpgNUAaYDVAGmA1QBpgNUAaYDVAGmA1QBpgM1AVcCRgFFAX4DFQEdCAADHQEpA1oB1QNXAcUDPwFt
        AyQBNQMOARMDAgEDAwIBAwMOARMDJAE1Az8BbQNXAcUDWgHVAx0BKQwAAwkBDAM7AWMDDgETBAADWQHM
        AyYBOAMmATkDWQHMBAADDwEUAzsBYwMJAQwYAAM4AV0B0wHBAaUB/wHtAeoBzgH/A/0B/wP7Af8gAAMn
        ATsDPQFpAwoBDgMNAREDDQERAw0BEQMNAREDDQERAw0BEQMNAREDDQERAwgBCwJJAUgBiAMUARsMAAMC
        AQMDMQFOA08BmwNaAc0DWwHtAysB/AMrAfwDWwHtA1oBzQNQAZoDMQFOAwIBAyAAA0MBeANAAf0DQAH9
        A0MBeFwAAwYBCANKAYwDUAGdA1ABnQNQAZ0DUAGdA1ABnQNQAZ0DUAGdA1ABnQNQAZ0DUAGdAkYBRQF/
        AwABAQQAAUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/8BAAL/BgAB+AEfBgAB8AEH
        BgAB4QGDBgABxwEDBgABjwEBBgABgAERBgABkAEZBgABkAEZBgABgAERBgABjwEBBgABxwEDBgAB4QGD
        BgAB8AEHBgAB+AEfBgAC/wYAAcABAwH8AT8B8AH/AYABAQGAAQEBxAEjAeABPQGAAQEBnwHxAYABAQHA
        ATkBgAEBAZABAQKBAcABEQGAAQEBgAEBAYwBMQGAARMBgAEBAZ8B8QHIARMBgAEHAZ8BgQGQAQECAAGA
        AQ8BgQHhAYABAQERAYgBgAEPAYAB+QGfAfEBEQGIAYABDwGAAQEBkAEBAgABgAEPAYABAQGAAQEByAET
        AYABHwGAAYEBhwHhAYwBMQHAAR8BgAEBAZ8B+QKBAcABHwGAAQEBnwH5AYABAQHgAT8BgAEBAYABAQHE
        ASMB8AF/AYABAQHAAQMB/AE/Av8BgAEBCw==
</value>
  </data>
</root>