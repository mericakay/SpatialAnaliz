<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACK
        EAAAAk1TRnQBSQFMAgEBBAEAAWABAAFgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AKgADAgEDAzEBTgNQ
        AZoDWgHNA1QB7QMrAfwDKwH8A1QB7QNaAc0DUAGaAzEBTgMCAQMgAANEAXkDPwH9Az8B/QNDAXgoAAFQ
        AU4BTAGGAdMBlwFJAf8BzAGSAUgB/wGPAV8BIQH/JAADDAEQAWABWAFIAaYBYAFYAUgBpgFgAVgBSAGm
        AWABWAFIAaYBYAFYAUgBpgFgAVgBSAGmAWABWAFIAaYBYAFYAUgBpgFgAVgBSAGmAWABWAFIAaYBYAFY
        AUgBpgFaAVUBSAGcAwMBBAgAAx0BKQNaAdUDVwHFAz8BbQMkATUDDgETAwIBAwMCAQMDDgETAyQBNQM/
        AW0DVwHFA1oB1QMdASkMAAMJAQwDOwFjAw8BFAQAA1kBzAMmATgDJgE4A1kBzAQAAw8BFAM7AWMDCQEM
        FAAB+AG6AV4B/wH8Ae4B2AH/AbIBdwEyAf8BngFoASgB/wGjAW0BKAH/AaIBcgExAf8DLgFHEAADUAG7
        CAACKQEoAT0BOwE6ATgBXwMrAUIDLwFKAy8BSgMuAUcDBQEHAi4BLwFIAxoBJQItAS4BRgMdASkDJAE1
        AUsBSQFDAX8DFQEdCAADWQHSAzwBZyQAAzsBZAM8AWcDWQHSCAADCQEMA1kBwwNYAcYDXQHlA0gBhwNO
        AfADBwEJAwcBCQNOAfADSAGHA10B5QNYAcYDWQHDAwkBDAwAAfcBpAFOAf8BzwGWAUEB/wH0AesB2AH/
        Af4B9QHcAf8BjQFZAR4B/wGWAV8BIAH/AZgBYwEkAf8B+wHqAdAB/wwAA28B/wMDAf8IAAIpASgBPQI6
        ATgBXgM4AVwDPQFmAz0BZgM7AWMDHgErATcBZAHyAf8BTgFbAX0BtgE3AWQB8gH/AU4BWgF9AbQBTQFh
        AaUB1AFLAUgBQwF+AxUBHQgAAycB/wMAAQEEAAMSARkDMQFNAz8BbQNFAX0DRQF9Az8BbQMxAU0DEgEZ
        AzsBZAMAAQEDJwH/CAADOwFjA1kBxwMAAQEDJgE5A0sBjgMiATIIAAMiATIDSwGOAyYBOQMAAQEDWQHH
        AzsBYwwAAcQBlQFFAf8B/QHwAdUB/wH1AfMB6AH/AfsB+AH2Af8BmgFgASIB/wGmAWYBJgH/AagBaQEq
        Af8B7wHnAdgB/wH3AeoB1wH/BAADBgEIAwAB/wOkAf8IAAIpASgBPQI6ATgBXgNTAZoBWAFZAVgBrAFY
        AVkBWAGsA1YBpgMfASwBNwFkAfIB/wFOAVsBfQG2ATcBZAHyAf8BTgFaAX0BtAFNAWEBpQHUAUsBSAFD
        AX4DFQEdCAADJwH/Ay0BRgNKAYsDPgFsAyQBNQMOARMDAgEDAwIBAwMOARMDJAE1Az4BbANKAYsDLQFG
        AycB/wgAAw8BFANdAeUDJgE5CAADHAEoAz8BbQM/AW0DHAEoCAADJgE5A10B5QMOARMIAAHFAY0BQgH/
        AaQBagEnAf8B9gHzAe8C/wH7AfMB/wGRAV4BMgH/AbQBcAEtAf8BvAF5ATQB/wHBAXsBOgH/AfEB7QHk
        Af8B/AHqAcwB/wcAAf8DPAH/DAACKQEoAT0COgE4AV4DUwGcA1kBrgNZAa4DVwGoAxkBIwFDAWQBzAHs
        AU0BVwFyAakBNwFkAfIB/wFOAVoBfQG0AU0BYQGlAdQBSwFIAUMBfgMVAR0IAAMnAf8DOwFjJAADOwFk
        AzsBYwMnAf8MAANIAYcDSwGOBAADOQFfAzUBVgMEAQUDBAEFAzUBVgM5AV8EAANLAY4DSAGHDAABpAFs
        ASwB/wF4AU0BEwH/AfoB9QHoAf8BjQFZASUB/wGzAW0BLAH/Ac8BggEzAf8B9wHwAe0B/wP9Af8B+AH2
        AfUB/wHqAeUB2AH/AQ8BDAEJAf8DIwH/EAACKQEoAT0COgE4AV4YAAIsAS0BRAFPAVsBgwG5AU4BWQF1
        AawBTQFhAaUB1AFLAUgBQwF+AxUBHQgAAycB/wMAAQEEAAMSARkDMQFNAz8BbQNFAX0DRQF9Az8BbQMx
        AU0DEgEZAzsBZAMAAQEDJwH/BAADQwF4A1kBzANOAfADIgEyAx0BKQM1AVYDMQFPA0gBiANIAYgDMQFP
        AzUBVgMcASgDIgEyA04B8ANZAcwDQwF4BAABaAFSARwB/wFoAUoBPwH/AWABMgEEAf8BqwFiASkB/wHI
        AXwBNAH/AeQBkwE/Af8B6gHtAfMF/wH5AfcB9gH/Ae0B6QHmAf8BEwEVARYB/xQAAikBKAE9AjoBOAFe
        AwYBCAFDAUgBTQF6AU0BXwFxAacBOQE7ATwBXxAAAT0BPgFCAWkBSAFMAVkBjAFLAUgBQwF+AxUBHQgA
        AycB/wMtAUYDSgGLAz4BbAMkATUDDgETAwIBAwMCAQMDDgETAyQBNQM+AWwDSgGLAy0BRgMnAf8EAAMz
        Af4DJgE4AwcBCQQAAz8BbQMEAQUDSAGICAADSAGIAwQBBQM/AW0EAAMHAQkDJgE4AzMB/gQAAeYB3wHV
        Af8BigFfAUkB/wGNAVABIwH/Aa8BagEtAf8B2AGJATkB/wHUAa8BewH/AesB4AHDAf8B7wHrAcsB/wHG
        AccBxQH/Av4B/QH/AecBzwG9Af8UAAIpASgBPQI6ATgBXgFMAVsBaQGfATYBmAH4Af8BNgGYAfgB/wE2
        AZgB+AH/ATsBPQFAAWUUAAFLAUgBQwF+AxUBHQgAAycB/wM7AWMkAAM7AWQDOwFjAycB/wQAAzMB/gMm
        ATgDBwEJBAADPwFtAwQBBQNIAYgIAANIAYgDBAEFAz8BbQQAAwcBCQMmATgDMwH+BAAB5wHgAdcB/wHx
        Ae4B8wH/AfwC+wH/AbUBbwEuAf8B0wGOAT8C/wHvAbQB/wH6AekBrAH/AeMB2AGAAf8B9QHYAWsB/wHO
        AcQBswH/AfcB9AHTAf8UAAIpASgBPQI6ATgBXgE/AYwB1QHvATYBmAH4Af8BTgFzAZoBygFNAXABkwHF
        AU0BXQFsAaEDEAEVA1gBrQNYAa0DWAGtA0oBhQFLAUgBQwF+AxUBHQgAAycB/wMAAQEEAAMUARsDMQFO
        Az8BbQNFAX0DRQF9Az8BbQMxAU4DFAEbAzsBZAMAAQEDJwH/BAADQwF4A1kBzANOAfADIgEyAxwBKAM1
        AVYDMQFPA0kBiQNIAYgDMQFOAzUBVwMcASgDIgEyA04B8ANZAcwDQwF4BAAB5gHhAdIB/wHvAe4B7QH/
        AuwB4wH/Ad4BqwGPAf8B0gHYAeMB/wH6Ae0BvgH/AfsB1gF7Af8B/QH7Af4B/wH7AfkB5QH/AfUB7QHj
        Af8BywF1ATAB/xQAAikBKAE9AjoBOAFeAU4BcgGXAcgBNgGYAfgB/wFOAWEBhAG7AT0BZQHjAfkBTQFU
        AWsBoQMQARUDVgGmAVYBVwFWAacBVgFXAVYBpwFIAUkBSAGBAUsBSAFDAX4DFQEdCAADJwH/AzUBWANa
        Ac0DVQHqA1UBtQNMAZMDRwGCA0cBggNMAZMDVQG1A1UB6gNaAc0DNQFYAycB/wwAA0gBhwNLAY4EAAM5
        AV8DNQFXAwQBBQMEAQUDNQFXAzkBXwQAA0sBjgNIAYcMAAHsAdgBzQH/Ae8B5QHbAf8B3wHWAbwC/wHy
        AfkB/wHxAeMBzwL/AegBlAH/AfoB0QF5Af8B/gHtAacC/wHsAdwB/wH5AfYBqwH/GAACKQEoAT0COgE4
        AV4CHQEeASoBTQF3AaABzgFOAV4BhAG7AUQBZAHEAegDJAE1BAADBAEGAwUBBwMFAQcDAwEEAUsBSAFD
        AX4DFQEdCAADJwH/A1gB0QMtAUUDAQECGAADAQECAy0BRQNZAdIDJwH/CAADDwEUA10B5QMmATkIAAMc
        ASgDPwFtAz8BbQMcASgIAAMmATkDXQHlAw8BFAwAAeoB3gHWAf8BbQE/ARcB/wGUAUkBHwH/AfsB8AHn
        Af8B8QG/AW0B/wH9AcYBbwH/Af4BzgFyAf8B+wHoAZUB/wHkAdcBkAH/GAACKQEoAT0COgE4AV4DAQQC
        AQMDGAEiAwgBCwMAAQEDAgEDAwsBDwMLAQ8DCwEPAwUBBwFLAUgBQwF+AxUBHQgAAycB/wMQARYoAAMR
        ARcDJwH/CAADOwFjA1kBxwMAAQEDJgE5A0sBjgMiATIIAAMiATIDSwGOAyYBOQMAAQEDWQHHAzsBYwwA
        AcoBsQGgAf8BUQEvARQB/wH5AfAB3wH/AfYB+QHtAf8B4AG2AW8B/wHyAb8BagL/AfcBwgH/AfoC/AH/
        AfwB9QH8Af8YAAIpASgBPQI6ATgBXgNTAZoDWAGrA1gBqwNYAasDQwFzAyIBMgNTAZ8DUwGfA1MBnwM5
        AV4BSwFIAUMBfgMVAR0IAANZAdIDPAFnKAADPAFnA1kB0ggAAwkBDANZAcMDWQHHA10B5QNIAYcDTgHw
        AwcBCQMHAQkDTgHwA0gBhgNdAeUDWQHHA1kBwwMJAQwQAAHlAdQBqQH/AYUBTwEdAf8B8gHtAdsB/wHh
        AcwBxgH/AfwB8wHYAf8B9AH+AfwB/wHZAcUBgQH/HAACKQEoAT0COgE4AV4DTAGMA1YBpgNWAaYDVgGm
        A1YBpgNWAaYDVgGmA1YBpgNWAaYDNgFXAUsBSAFDAX4DFQEdCAADHQEpA1oB1QNXAcUDPwFtAyQBNQMO
        ARMDAgEDAwIBAwMOARMDJAE1Az8BbQNXAcUDWgHVAx0BKQwAAwkBDAM7AWMDDgETBAADWQHMAyYBOAMm
        ATkDWQHMBAADDwEUAzsBYwMJAQwYAAM6AV0B0wHBAaUB/wHtAeoBzgH/A/0B/wP7Af8gAAMnATsBQAE/
        ATwBaQMKAQ4DDQERAw0BEQMNAREDDQERAw0BEQMNAREDDQERAw0BEQMIAQsBTwFNAUUBiAMUARsMAAMC
        AQMDMQFOA08BmwNaAc0DVAHtAysB/AMrAfwDVAHtA1oBzQNQAZoDMQFOAwIBAyAAA0MBeAM/Af0DPwH9
        A0MBeFwAAwYBCAFSAU4BRgGMAVoBVQFIAZ0BWgFVAUgBnQFaAVUBSAGdAVoBVQFIAZ0BWgFVAUgBnQFa
        AVUBSAGdAVoBVQFIAZ0BWgFVAUgBnQFaAVUBSAGdAVoBVQFIAZ0BSwFIAUMBfwMAAQEEAAFCAU0BPgcA
        AT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQABwAEDAfwBPwHwAf8BgAEBAYABAQHEASMB4AE9
        AYABAQGfAfEBgAEBAcABOQGAAQEBkAEBAoEBwAERAYABAQGAAQEBjAExAYABEwGAAQEBnwHxAcgBEwGA
        AQcBnwGBAZABAQIAAYABDwGBAeEBgAEBAREBiAGAAQ8BgAH5AZ8B8QERAYgBgAEPAYABAQGQAQECAAGA
        AQ8BgAEBAYABAQHIARMBgAEfAYABgQGHAeEBjAExAcABHwGAAQEBnwH5AoEBwAEfAYABAQGfAfkBgAEB
        AeABPwGAAQEBgAEBAcQBIwHwAX8BgAEBAcABAwH8AT8C/wGAAQEL
</value>
  </data>
</root>