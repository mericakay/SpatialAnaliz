<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAG
        EAAAAk1TRnQBSQFMAgEBBAEAAXABAAFwAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AKgADAgEDAzEBTgNQ
        AZoDWgHNA1YB7QMrAfwDKwH8A1YB7QNaAc0DUAGaAzEBTgMCAQMgAANEAXkDQAH9A0AB/QNDAXgoAAJJ
        AUgBhgHTAZcBRwH/AcwBkgFGAf8BjwFdAR8B/yQAAwwBEAFVAVQBUQGmAVUBVAFRAaYBVQFUAVEBpgFV
        AVQBUQGmAVUBVAFRAaYBVQFUAVEBpgFVAVQBUQGmAVUBVAFRAaYBVQFUAVEBpgFVAVQBUQGmAVUBVAFR
        AaYCUQFOAZwDAwEECAADHQEpA1oB1QNXAcUDPwFtAyQBNQMOARMDAgEDAwIBAwMOARMDJAE1Az8BbQNX
        AcUDWgHVAx0BKQwAAwkBDAM7AWMDDwEUBAADWQHMAyYBOAMmATgDWQHMBAADDwEUAzsBYwMJAQwUAAH4
        AboBXAH/AfwB7gHYAf8BsgF1ATAB/wGeAWYBJgH/AaMBawEmAf8BogFwAS8B/wMuAUcQAANWAbsIAAMo
        AT0DOQFfAysBQgMvAUoDLwFKAy4BRwMFAQcDLgFIAxoBJQMtAUYDHQEpAyQBNQJGAUUBfwMVAR0IAANZ
        AdIDPAFnJAADOwFkAzwBZwNZAdIIAAMJAQwDWQHDA1gBxgNeAeUDSAGHA04B8AMHAQkDBwEJA04B8ANI
        AYcDXgHlA1gBxgNZAcMDCQEMDAAB9wGkAUwB/wHPAZYBPwH/AfQB6wHYAf8B/gH1AdwB/wGNAVcBHAH/
        AZYBXQEeAf8BmAFhASIB/wH7AeoB0AH/DAADbQH/AwEB/wgAAygBPQM4AV4DOAFcAzwBZgM8AWYDOwFj
        Ax4BKwE1AWIB8gH/AVQBVwFhAbYBNQFiAfIB/wFSAVYBYQG0AVUBYAGBAdQCRgFFAX4DFQEdCAADJQH/
        AwABAQQAAxIBGQMxAU0DPwFtA0UBfQNFAX0DPwFtAzEBTQMSARkDOwFkAwABAQMlAf8IAAM7AWMDWQHH
        AwABAQMmATkDSwGOAyIBMggAAyIBMgNLAY4DJgE5AwABAQNZAccDOwFjDAABxAGVAUMB/wH9AfAB1QH/
        AfUB8wHoAf8B+wH4AfYB/wGaAV4BIAH/AaYBZAEkAf8BqAFnASgB/wHvAecB2AH/AfcB6gHXAf8EAAMG
        AQgDAAH/A6QB/wgAAygBPQM4AV4DUAGaA1QBrANUAawDVAGmAx8BLAE1AWIB8gH/AVQBVwFhAbYBNQFi
        AfIB/wFSAVYBYQG0AVUBYAGBAdQCRgFFAX4DFQEdCAADJQH/Ay0BRgNKAYsDPgFsAyQBNQMOARMDAgED
        AwIBAwMOARMDJAE1Az4BbANKAYsDLQFGAyUB/wgAAw8BFANeAeUDJgE5CAADHAEoAz8BbQM/AW0DHAEo
        CAADJgE5A14B5QMOARMIAAHFAY0BQAH/AaQBaAElAf8B9gHzAe8C/wH7AfMB/wGRAVwBMAH/AbQBbgEr
        Af8BvAF3ATIB/wHBAXkBOAH/AfEB7QHkAf8B/AHqAcwB/wcAAf8DOgH/DAADKAE9AzgBXgNRAZwDVQGu
        A1UBrgNTAagDGQEjAUoBZAGxAewBUQFTAVkBqQE1AWIB8gH/AVIBVgFhAbQBVQFgAYEB1AJGAUUBfgMV
        AR0IAAMlAf8DOwFjJAADOwFkAzsBYwMlAf8MAANIAYcDSwGOBAADOQFfAzUBVgMEAQUDBAEFAzUBVgM5
        AV8EAANLAY4DSAGHDAABpAFqASoB/wF2AUsBEQH/AfoB9QHoAf8BjQFXASMB/wGzAWsBKgH/Ac8BggEx
        Af8B9wHwAe0B/wP9Af8B+AH2AfUB/wHqAeUB2AH/AQ0BCgEHAf8DIQH/EAADKAE9AzgBXhgAAywBRAFU
        AVgBZAG5AVMBVAFcAawBVQFgAYEB1AJGAUUBfgMVAR0IAAMlAf8DAAEBBAADEgEZAzEBTQM/AW0DRQF9
        A0UBfQM/AW0DMQFNAxIBGQM7AWQDAAEBAyUB/wQAA0MBeANZAcwDTgHwAyIBMgMdASkDNQFWAzEBTwNI
        AYgDSAGIAzEBTwM1AVYDHAEoAyIBMgNOAfADWQHMA0MBeAQAAWYBUAEaAf8BZgFIAT0B/wFeATABAgH/
        AasBYAEnAf8ByAF6ATIB/wHkAZMBPQH/AeoB7QHzBf8B+QH3AfYB/wHtAekB5gH/AREBEwEUAf8UAAMo
        AT0DOAFeAwYBCANEAXoBUQFWAVgBpwM5AV8QAAM9AWkCSgFMAYwCRgFFAX4DFQEdCAADJQH/Ay0BRgNK
        AYsDPgFsAyQBNQMOARMDAgEDAwIBAwMOARMDJAE1Az4BbANKAYsDLQFGAyUB/wQAAzMB/gMmATgDBwEJ
        BAADPwFtAwQBBQNIAYgIAANIAYgDBAEFAz8BbQQAAwcBCQMmATgDMwH+BAAB5gHfAdUB/wGKAV0BRwH/
        AY0BTgEhAf8BrwFoASsB/wHYAYkBNwH/AdQBrwF5Af8B6wHgAcMB/wHvAesBywH/AcYBxwHFAf8C/gH9
        Af8B5wHPAb0B/xQAAygBPQM4AV4BUAFRAVMBnwE0AZgB+AH/ATQBmAH4Af8BNAGYAfgB/wM7AWUUAAJG
        AUUBfgMVAR0IAAMlAf8DOwFjJAADOwFkAzsBYwMlAf8EAAMzAf4DJgE4AwcBCQQAAz8BbQMEAQUDSAGI
        CAADSAGIAwQBBQM/AW0EAAMHAQkDJgE4AzMB/gQAAecB4AHXAf8B8QHuAfMB/wH8AvsB/wG1AW0BLAH/
        AdMBjgE9Av8B7wG0Af8B+gHpAawB/wHjAdgBgAH/AfUB2AFpAf8BzgHEAbMB/wH3AfQB0wH/FAADKAE9
        AzgBXgFGAYIBuwHvATQBmAH4Af8BVgFlAXUBygFVAWMBcAHFAVEBUwFVAaEDEAEVA1UBrQNVAa0DVQGt
        A0gBhQJGAUUBfgMVAR0IAAMlAf8DAAEBBAADFAEbAzEBTgM/AW0DRQF9A0UBfQM/AW0DMQFOAxQBGwM7
        AWQDAAEBAyUB/wQAA0MBeANZAcwDTgHwAyIBMgMcASgDNQFWAzEBTwNJAYkDSAGIAzEBTgM1AVcDHAEo
        AyIBMgNOAfADWQHMA0MBeAQAAeYB4QHSAf8B7wHuAe0B/wLsAeMB/wHeAasBjwH/AdIB2AHjAf8B+gHt
        Ab4B/wH7AdYBeQH/Af0B+wH+Af8B+wH5AeUB/wH1Ae0B4wH/AcsBcwEuAf8UAAMoAT0DOAFeAVUBZAFy
        AcgBNAGYAfgB/wFUAVkBZAG7AUEBZQHXAfkBUQFSAVUBoQMQARUDVAGmAVIBVAFSAacBUgFUAVIBpwNH
        AYECRgFFAX4DFQEdCAADJQH/AzUBWANaAc0DVQHqA1UBtQNMAZMDRwGCA0cBggNMAZMDVQG1A1UB6gNa
        Ac0DNQFYAyUB/wwAA0gBhwNLAY4EAAM5AV8DNQFXAwQBBQMEAQUDNQFXAzkBXwQAA0sBjgNIAYcMAAHs
        AdgBzQH/Ae8B5QHbAf8B3wHWAbwC/wHyAfkB/wHxAeMBzwL/AegBlAH/AfoB0QF3Af8B/gHtAacC/wHs
        AdwB/wH5AfYBqwH/GAADKAE9AzgBXgMdASoBVQFpAXoBzgFUAVkBZAG7AU0BYQGkAegDJAE1BAADBAEG
        AwUBBwMFAQcDAwEEAkYBRQF+AxUBHQgAAyUB/wNYAdEDLQFFAwEBAhgAAwEBAgMtAUUDWQHSAyUB/wgA
        Aw8BFANeAeUDJgE5CAADHAEoAz8BbQM/AW0DHAEoCAADJgE5A14B5QMPARQMAAHqAd4B1gH/AWsBPQEV
        Af8BlAFHAR0B/wH7AfAB5wH/AfEBvwFrAf8B/QHGAW0B/wH+Ac4BcAH/AfsB6AGVAf8B5AHXAZAB/xgA
        AygBPQM4AV4DAQQCAQMDGAEiAwgBCwMAAQEDAgEDAwsBDwMLAQ8DCwEPAwUBBwJGAUUBfgMVAR0IAAMl
        Af8DEAEWKAADEQEXAyUB/wgAAzsBYwNZAccDAAEBAyYBOQNLAY4DIgEyCAADIgEyA0sBjgMmATkDAAEB
        A1kBxwM7AWMMAAHKAbEBoAH/AU8BLQESAf8B+QHwAd8B/wH2AfkB7QH/AeABtgFtAf8B8gG/AWgC/wH3
        AcIB/wH6AvwB/wH8AfUB/AH/GAADKAE9AzgBXgNQAZoDVgGrA1YBqwNWAasDQgFzAyIBMgNRAZ8DUQGf
        A1EBnwM4AV4CRgFFAX4DFQEdCAADWQHSAzwBZygAAzwBZwNZAdIIAAMJAQwDWQHDA1kBxwNeAeUDSAGH
        A04B8AMHAQkDBwEJA04B8ANIAYYDXgHlA1kBxwNZAcMDCQEMEAAB5QHUAakB/wGFAU0BGwH/AfIB7QHb
        Af8B4QHMAcYB/wH8AfMB2AH/AfQB/gH8Af8B2QHFAYEB/xwAAygBPQM4AV4DSgGMA1QBpgNUAaYDVAGm
        A1QBpgNUAaYDVAGmA1QBpgNUAaYDNQFXAkYBRQF+AxUBHQgAAx0BKQNaAdUDVwHFAz8BbQMkATUDDgET
        AwIBAwMCAQMDDgETAyQBNQM/AW0DVwHFA1oB1QMdASkMAAMJAQwDOwFjAw4BEwQAA1kBzAMmATgDJgE5
        A1kBzAQAAw8BFAM7AWMDCQEMGAADOAFdAdMBwQGlAf8B7QHqAc4B/wP9Af8D+wH/IAADJwE7Az0BaQMK
        AQ4DDQERAw0BEQMNAREDDQERAw0BEQMNAREDDQERAw0BEQMIAQsCSQFIAYgDFAEbDAADAgEDAzEBTgNP
        AZsDWgHNA1YB7QMrAfwDKwH8A1YB7QNaAc0DUAGaAzEBTgMCAQMgAANDAXgDQAH9A0AB/QNDAXhcAAMG
        AQgCSwFKAYwBUgFQAU8BnQFSAVABTwGdAVIBUAFPAZ0BUgFQAU8BnQFSAVABTwGdAVIBUAFPAZ0BUgFQ
        AU8BnQFSAVABTwGdAVIBUAFPAZ0BUgFQAU8BnQJGAUUBfwMAAQEEAAFCAU0BPgcAAT4DAAEoAwABQAMA
        ASADAAEBAQABAQYAAQEWAAP/gQABwAEDAfwBPwHwAf8BgAEBAYABAQHEASMB4AE9AYABAQGfAfEBgAEB
        AcABOQGAAQEBkAEBAoEBwAERAYABAQGAAQEBjAExAYABEwGAAQEBnwHxAcgBEwGAAQcBnwGBAZABAQIA
        AYABDwGBAeEBgAEBAREBiAGAAQ8BgAH5AZ8B8QERAYgBgAEPAYABAQGQAQECAAGAAQ8BgAEBAYABAQHI
        ARMBgAEfAYABgQGHAeEBjAExAcABHwGAAQEBnwH5AoEBwAEfAYABAQGfAfkBgAEBAeABPwGAAQEBgAEB
        AcQBIwHwAX8BgAEBAcABAwH8AT8C/wGAAQEL
</value>
  </data>
</root>